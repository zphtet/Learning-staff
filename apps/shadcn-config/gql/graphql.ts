/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** The `BigInt` scalar type represents non-fractional signed whole numeric values. */
  BigInt: { input: any; output: any; }
  /** The javascript `Date` as string. Type represents date and time as the ISO Date string. */
  DateTime: { input: any; output: any; }
  /** GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library. */
  Decimal: { input: any; output: any; }
  /** The `Upload` scalar type represents a file upload. */
  Upload: { input: any; output: any; }
};

export type Address = {
  __typename?: 'Address';
  _count?: Maybe<AddressCount>;
  active: Scalars['Boolean']['output'];
  attention?: Maybe<Scalars['String']['output']>;
  businesses: Array<Business>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  customers: Array<Customer>;
  default_customer?: Maybe<Customer>;
  default_supplier?: Maybe<Supplier>;
  id: Scalars['String']['output'];
  line1: Scalars['String']['output'];
  line2?: Maybe<Scalars['String']['output']>;
  location?: Maybe<Location>;
  mobile?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  sales: Array<Sale>;
  state?: Maybe<Scalars['String']['output']>;
  suppliers: Array<Supplier>;
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type AddressBusinessesArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type AddressCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type AddressDefault_CustomerArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type AddressDefault_SupplierArgs = {
  where?: InputMaybe<SupplierWhereInput>;
};


export type AddressLocationArgs = {
  where?: InputMaybe<LocationWhereInput>;
};


export type AddressSalesArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type AddressSuppliersArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  distinct?: InputMaybe<Array<SupplierScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};

export type AddressCount = {
  __typename?: 'AddressCount';
  businesses: Scalars['Int']['output'];
  customers: Scalars['Int']['output'];
  sales: Scalars['Int']['output'];
  suppliers: Scalars['Int']['output'];
};


export type AddressCountBusinessesArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type AddressCountCustomersArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type AddressCountSalesArgs = {
  where?: InputMaybe<SaleWhereInput>;
};


export type AddressCountSuppliersArgs = {
  where?: InputMaybe<SupplierWhereInput>;
};

export type AddressCountAggregate = {
  __typename?: 'AddressCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  attention: Scalars['Int']['output'];
  city: Scalars['Int']['output'];
  country: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  line1: Scalars['Int']['output'];
  line2: Scalars['Int']['output'];
  mobile: Scalars['Int']['output'];
  phone: Scalars['Int']['output'];
  postal_code: Scalars['Int']['output'];
  state: Scalars['Int']['output'];
  type: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type AddressCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  attention?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line1?: InputMaybe<SortOrder>;
  line2?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  postal_code?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AddressCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateNestedManyWithoutBusinessesInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutBusinessesInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutBusinessesInput>>;
};

export type AddressCreateNestedManyWithoutCustomersInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutCustomersInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutCustomersInput>>;
};

export type AddressCreateNestedManyWithoutSuppliersInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutSuppliersInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutSuppliersInput>>;
};

export type AddressCreateNestedOneWithoutDefault_CustomerInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutDefault_CustomerInput>;
  create?: InputMaybe<AddressCreateWithoutDefault_CustomerInput>;
};

export type AddressCreateNestedOneWithoutDefault_SupplierInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutDefault_SupplierInput>;
  create?: InputMaybe<AddressCreateWithoutDefault_SupplierInput>;
};

export type AddressCreateNestedOneWithoutLocationInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutLocationInput>;
  create?: InputMaybe<AddressCreateWithoutLocationInput>;
};

export type AddressCreateNestedOneWithoutSalesInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<AddressCreateWithoutSalesInput>;
};

export type AddressCreateOrConnectWithoutBusinessesInput = {
  create: AddressCreateWithoutBusinessesInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutCustomersInput = {
  create: AddressCreateWithoutCustomersInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutDefault_CustomerInput = {
  create: AddressCreateWithoutDefault_CustomerInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutDefault_SupplierInput = {
  create: AddressCreateWithoutDefault_SupplierInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutLocationInput = {
  create: AddressCreateWithoutLocationInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutSalesInput = {
  create: AddressCreateWithoutSalesInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateOrConnectWithoutSuppliersInput = {
  create: AddressCreateWithoutSuppliersInput;
  where: AddressWhereUniqueInput;
};

export type AddressCreateWithoutBusinessesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutDefault_CustomerInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutDefault_SupplierInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutLocationInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutSalesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  state?: InputMaybe<Scalars['String']['input']>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutAddressesInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressCreateWithoutSuppliersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attention?: InputMaybe<Scalars['String']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutAddressesInput>;
  city?: InputMaybe<Scalars['String']['input']>;
  country?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutAddressesInput>;
  default_customer?: InputMaybe<CustomerCreateNestedOneWithoutDefault_AddressInput>;
  default_supplier?: InputMaybe<SupplierCreateNestedOneWithoutAddressInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1: Scalars['String']['input'];
  line2?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<LocationCreateNestedOneWithoutAddressInput>;
  mobile?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  postal_code?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomer_AddrInput>;
  state?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AddressGroupBy = {
  __typename?: 'AddressGroupBy';
  _count?: Maybe<AddressCountAggregate>;
  _max?: Maybe<AddressMaxAggregate>;
  _min?: Maybe<AddressMinAggregate>;
  active: Scalars['Boolean']['output'];
  attention?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  line1: Scalars['String']['output'];
  line2?: Maybe<Scalars['String']['output']>;
  mobile?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AddressListRelationFilter = {
  every?: InputMaybe<AddressWhereInput>;
  none?: InputMaybe<AddressWhereInput>;
  some?: InputMaybe<AddressWhereInput>;
};

export type AddressMaxAggregate = {
  __typename?: 'AddressMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  attention?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  mobile?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AddressMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  attention?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line1?: InputMaybe<SortOrder>;
  line2?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  postal_code?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AddressMinAggregate = {
  __typename?: 'AddressMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  attention?: Maybe<Scalars['String']['output']>;
  city?: Maybe<Scalars['String']['output']>;
  country?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  line1?: Maybe<Scalars['String']['output']>;
  line2?: Maybe<Scalars['String']['output']>;
  mobile?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  postal_code?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AddressMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  attention?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line1?: InputMaybe<SortOrder>;
  line2?: InputMaybe<SortOrder>;
  mobile?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  postal_code?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AddressNullableRelationFilter = {
  is?: InputMaybe<AddressWhereInput>;
  isNot?: InputMaybe<AddressWhereInput>;
};

export type AddressOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AddressOrderByWithAggregationInput = {
  _count?: InputMaybe<AddressCountOrderByAggregateInput>;
  _max?: InputMaybe<AddressMaxOrderByAggregateInput>;
  _min?: InputMaybe<AddressMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  attention?: InputMaybe<SortOrderInput>;
  city?: InputMaybe<SortOrderInput>;
  country?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  line1?: InputMaybe<SortOrder>;
  line2?: InputMaybe<SortOrderInput>;
  mobile?: InputMaybe<SortOrderInput>;
  phone?: InputMaybe<SortOrderInput>;
  postal_code?: InputMaybe<SortOrderInput>;
  state?: InputMaybe<SortOrderInput>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type AddressOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  attention?: InputMaybe<SortOrderInput>;
  businesses?: InputMaybe<BusinessOrderByRelationAggregateInput>;
  city?: InputMaybe<SortOrderInput>;
  country?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  default_customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  default_supplier?: InputMaybe<SupplierOrderByWithRelationInput>;
  id?: InputMaybe<SortOrder>;
  line1?: InputMaybe<SortOrder>;
  line2?: InputMaybe<SortOrderInput>;
  location?: InputMaybe<LocationOrderByWithRelationInput>;
  mobile?: InputMaybe<SortOrderInput>;
  phone?: InputMaybe<SortOrderInput>;
  postal_code?: InputMaybe<SortOrderInput>;
  sales?: InputMaybe<SaleOrderByRelationAggregateInput>;
  state?: InputMaybe<SortOrderInput>;
  suppliers?: InputMaybe<SupplierOrderByRelationAggregateInput>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum AddressScalarFieldEnum {
  Active = 'active',
  Attention = 'attention',
  City = 'city',
  Country = 'country',
  CreatedAt = 'created_at',
  Id = 'id',
  Line1 = 'line1',
  Line2 = 'line2',
  Mobile = 'mobile',
  Phone = 'phone',
  PostalCode = 'postal_code',
  State = 'state',
  Type = 'type',
  UpdatedAt = 'updated_at'
}

export type AddressScalarWhereInput = {
  AND?: InputMaybe<Array<AddressScalarWhereInput>>;
  NOT?: InputMaybe<Array<AddressScalarWhereInput>>;
  OR?: InputMaybe<Array<AddressScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  attention?: InputMaybe<StringNullableFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringNullableFilter>;
  mobile?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  postal_code?: InputMaybe<StringNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type AddressScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AddressScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AddressScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AddressScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  attention?: InputMaybe<StringNullableWithAggregatesFilter>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  line1?: InputMaybe<StringWithAggregatesFilter>;
  line2?: InputMaybe<StringNullableWithAggregatesFilter>;
  mobile?: InputMaybe<StringNullableWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  postal_code?: InputMaybe<StringNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type AddressUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateManyWithWhereWithoutBusinessesInput = {
  data: AddressUpdateManyMutationInput;
  where: AddressScalarWhereInput;
};

export type AddressUpdateManyWithWhereWithoutCustomersInput = {
  data: AddressUpdateManyMutationInput;
  where: AddressScalarWhereInput;
};

export type AddressUpdateManyWithWhereWithoutSuppliersInput = {
  data: AddressUpdateManyMutationInput;
  where: AddressScalarWhereInput;
};

export type AddressUpdateManyWithoutBusinessesNestedInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutBusinessesInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutBusinessesInput>>;
  delete?: InputMaybe<Array<AddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  set?: InputMaybe<Array<AddressWhereUniqueInput>>;
  update?: InputMaybe<Array<AddressUpdateWithWhereUniqueWithoutBusinessesInput>>;
  updateMany?: InputMaybe<Array<AddressUpdateManyWithWhereWithoutBusinessesInput>>;
  upsert?: InputMaybe<Array<AddressUpsertWithWhereUniqueWithoutBusinessesInput>>;
};

export type AddressUpdateManyWithoutCustomersNestedInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutCustomersInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutCustomersInput>>;
  delete?: InputMaybe<Array<AddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  set?: InputMaybe<Array<AddressWhereUniqueInput>>;
  update?: InputMaybe<Array<AddressUpdateWithWhereUniqueWithoutCustomersInput>>;
  updateMany?: InputMaybe<Array<AddressUpdateManyWithWhereWithoutCustomersInput>>;
  upsert?: InputMaybe<Array<AddressUpsertWithWhereUniqueWithoutCustomersInput>>;
};

export type AddressUpdateManyWithoutSuppliersNestedInput = {
  connect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<AddressCreateOrConnectWithoutSuppliersInput>>;
  create?: InputMaybe<Array<AddressCreateWithoutSuppliersInput>>;
  delete?: InputMaybe<Array<AddressWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<AddressScalarWhereInput>>;
  disconnect?: InputMaybe<Array<AddressWhereUniqueInput>>;
  set?: InputMaybe<Array<AddressWhereUniqueInput>>;
  update?: InputMaybe<Array<AddressUpdateWithWhereUniqueWithoutSuppliersInput>>;
  updateMany?: InputMaybe<Array<AddressUpdateManyWithWhereWithoutSuppliersInput>>;
  upsert?: InputMaybe<Array<AddressUpsertWithWhereUniqueWithoutSuppliersInput>>;
};

export type AddressUpdateOneWithoutDefault_CustomerNestedInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutDefault_CustomerInput>;
  create?: InputMaybe<AddressCreateWithoutDefault_CustomerInput>;
  delete?: InputMaybe<AddressWhereInput>;
  disconnect?: InputMaybe<AddressWhereInput>;
  update?: InputMaybe<AddressUpdateToOneWithWhereWithoutDefault_CustomerInput>;
  upsert?: InputMaybe<AddressUpsertWithoutDefault_CustomerInput>;
};

export type AddressUpdateOneWithoutDefault_SupplierNestedInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutDefault_SupplierInput>;
  create?: InputMaybe<AddressCreateWithoutDefault_SupplierInput>;
  delete?: InputMaybe<AddressWhereInput>;
  disconnect?: InputMaybe<AddressWhereInput>;
  update?: InputMaybe<AddressUpdateToOneWithWhereWithoutDefault_SupplierInput>;
  upsert?: InputMaybe<AddressUpsertWithoutDefault_SupplierInput>;
};

export type AddressUpdateOneWithoutLocationNestedInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutLocationInput>;
  create?: InputMaybe<AddressCreateWithoutLocationInput>;
  delete?: InputMaybe<AddressWhereInput>;
  disconnect?: InputMaybe<AddressWhereInput>;
  update?: InputMaybe<AddressUpdateToOneWithWhereWithoutLocationInput>;
  upsert?: InputMaybe<AddressUpsertWithoutLocationInput>;
};

export type AddressUpdateOneWithoutSalesNestedInput = {
  connect?: InputMaybe<AddressWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AddressCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<AddressCreateWithoutSalesInput>;
  delete?: InputMaybe<AddressWhereInput>;
  disconnect?: InputMaybe<AddressWhereInput>;
  update?: InputMaybe<AddressUpdateToOneWithWhereWithoutSalesInput>;
  upsert?: InputMaybe<AddressUpsertWithoutSalesInput>;
};

export type AddressUpdateToOneWithWhereWithoutDefault_CustomerInput = {
  data: AddressUpdateWithoutDefault_CustomerInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpdateToOneWithWhereWithoutDefault_SupplierInput = {
  data: AddressUpdateWithoutDefault_SupplierInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpdateToOneWithWhereWithoutLocationInput = {
  data: AddressUpdateWithoutLocationInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpdateToOneWithWhereWithoutSalesInput = {
  data: AddressUpdateWithoutSalesInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpdateWithWhereUniqueWithoutBusinessesInput = {
  data: AddressUpdateWithoutBusinessesInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpdateWithWhereUniqueWithoutCustomersInput = {
  data: AddressUpdateWithoutCustomersInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpdateWithWhereUniqueWithoutSuppliersInput = {
  data: AddressUpdateWithoutSuppliersInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpdateWithoutBusinessesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutCustomersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutDefault_CustomerInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutDefault_SupplierInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutLocationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutSalesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutAddressesNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpdateWithoutSuppliersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attention?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutAddressesNestedInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutAddressesNestedInput>;
  default_customer?: InputMaybe<CustomerUpdateOneWithoutDefault_AddressNestedInput>;
  default_supplier?: InputMaybe<SupplierUpdateOneWithoutAddressNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  line1?: InputMaybe<StringFieldUpdateOperationsInput>;
  line2?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneWithoutAddressNestedInput>;
  mobile?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  postal_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomer_AddrNestedInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AddressUpsertWithWhereUniqueWithoutBusinessesInput = {
  create: AddressCreateWithoutBusinessesInput;
  update: AddressUpdateWithoutBusinessesInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpsertWithWhereUniqueWithoutCustomersInput = {
  create: AddressCreateWithoutCustomersInput;
  update: AddressUpdateWithoutCustomersInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpsertWithWhereUniqueWithoutSuppliersInput = {
  create: AddressCreateWithoutSuppliersInput;
  update: AddressUpdateWithoutSuppliersInput;
  where: AddressWhereUniqueInput;
};

export type AddressUpsertWithoutDefault_CustomerInput = {
  create: AddressCreateWithoutDefault_CustomerInput;
  update: AddressUpdateWithoutDefault_CustomerInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpsertWithoutDefault_SupplierInput = {
  create: AddressCreateWithoutDefault_SupplierInput;
  update: AddressUpdateWithoutDefault_SupplierInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpsertWithoutLocationInput = {
  create: AddressCreateWithoutLocationInput;
  update: AddressUpdateWithoutLocationInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressUpsertWithoutSalesInput = {
  create: AddressCreateWithoutSalesInput;
  update: AddressUpdateWithoutSalesInput;
  where?: InputMaybe<AddressWhereInput>;
};

export type AddressWhereInput = {
  AND?: InputMaybe<Array<AddressWhereInput>>;
  NOT?: InputMaybe<Array<AddressWhereInput>>;
  OR?: InputMaybe<Array<AddressWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  attention?: InputMaybe<StringNullableFilter>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  default_customer?: InputMaybe<CustomerNullableRelationFilter>;
  default_supplier?: InputMaybe<SupplierNullableRelationFilter>;
  id?: InputMaybe<StringFilter>;
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<LocationNullableRelationFilter>;
  mobile?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  postal_code?: InputMaybe<StringNullableFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  state?: InputMaybe<StringNullableFilter>;
  suppliers?: InputMaybe<SupplierListRelationFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type AddressWhereUniqueInput = {
  AND?: InputMaybe<Array<AddressWhereInput>>;
  NOT?: InputMaybe<Array<AddressWhereInput>>;
  OR?: InputMaybe<Array<AddressWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  attention?: InputMaybe<StringNullableFilter>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  default_customer?: InputMaybe<CustomerNullableRelationFilter>;
  default_supplier?: InputMaybe<SupplierNullableRelationFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  line1?: InputMaybe<StringFilter>;
  line2?: InputMaybe<StringNullableFilter>;
  location?: InputMaybe<LocationNullableRelationFilter>;
  mobile?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  postal_code?: InputMaybe<StringNullableFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  state?: InputMaybe<StringNullableFilter>;
  suppliers?: InputMaybe<SupplierListRelationFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type AffectedRowsOutput = {
  __typename?: 'AffectedRowsOutput';
  count: Scalars['Int']['output'];
};

export type AggregateAddress = {
  __typename?: 'AggregateAddress';
  _count?: Maybe<AddressCountAggregate>;
  _max?: Maybe<AddressMaxAggregate>;
  _min?: Maybe<AddressMinAggregate>;
};

export type AggregateAppVersion = {
  __typename?: 'AggregateAppVersion';
  _avg?: Maybe<AppVersionAvgAggregate>;
  _count?: Maybe<AppVersionCountAggregate>;
  _max?: Maybe<AppVersionMaxAggregate>;
  _min?: Maybe<AppVersionMinAggregate>;
  _sum?: Maybe<AppVersionSumAggregate>;
};

export type AggregateBusiness = {
  __typename?: 'AggregateBusiness';
  _count?: Maybe<BusinessCountAggregate>;
  _max?: Maybe<BusinessMaxAggregate>;
  _min?: Maybe<BusinessMinAggregate>;
};

export type AggregateCompositeAdjustment = {
  __typename?: 'AggregateCompositeAdjustment';
  _avg?: Maybe<CompositeAdjustmentAvgAggregate>;
  _count?: Maybe<CompositeAdjustmentCountAggregate>;
  _max?: Maybe<CompositeAdjustmentMaxAggregate>;
  _min?: Maybe<CompositeAdjustmentMinAggregate>;
  _sum?: Maybe<CompositeAdjustmentSumAggregate>;
};

export type AggregateCompositeItem = {
  __typename?: 'AggregateCompositeItem';
  _avg?: Maybe<CompositeItemAvgAggregate>;
  _count?: Maybe<CompositeItemCountAggregate>;
  _max?: Maybe<CompositeItemMaxAggregate>;
  _min?: Maybe<CompositeItemMinAggregate>;
  _sum?: Maybe<CompositeItemSumAggregate>;
};

export type AggregateCurrency = {
  __typename?: 'AggregateCurrency';
  _avg?: Maybe<CurrencyAvgAggregate>;
  _count?: Maybe<CurrencyCountAggregate>;
  _max?: Maybe<CurrencyMaxAggregate>;
  _min?: Maybe<CurrencyMinAggregate>;
  _sum?: Maybe<CurrencySumAggregate>;
};

export type AggregateCustomer = {
  __typename?: 'AggregateCustomer';
  _avg?: Maybe<CustomerAvgAggregate>;
  _count?: Maybe<CustomerCountAggregate>;
  _max?: Maybe<CustomerMaxAggregate>;
  _min?: Maybe<CustomerMinAggregate>;
  _sum?: Maybe<CustomerSumAggregate>;
};

export type AggregateDailySale = {
  __typename?: 'AggregateDailySale';
  _avg?: Maybe<DailySaleAvgAggregate>;
  _count?: Maybe<DailySaleCountAggregate>;
  _max?: Maybe<DailySaleMaxAggregate>;
  _min?: Maybe<DailySaleMinAggregate>;
  _sum?: Maybe<DailySaleSumAggregate>;
};

export type AggregateDailySaleAddonItem = {
  __typename?: 'AggregateDailySaleAddonItem';
  _avg?: Maybe<DailySaleAddonItemAvgAggregate>;
  _count?: Maybe<DailySaleAddonItemCountAggregate>;
  _max?: Maybe<DailySaleAddonItemMaxAggregate>;
  _min?: Maybe<DailySaleAddonItemMinAggregate>;
  _sum?: Maybe<DailySaleAddonItemSumAggregate>;
};

export type AggregateDailySaleDetail = {
  __typename?: 'AggregateDailySaleDetail';
  _avg?: Maybe<DailySaleDetailAvgAggregate>;
  _count?: Maybe<DailySaleDetailCountAggregate>;
  _max?: Maybe<DailySaleDetailMaxAggregate>;
  _min?: Maybe<DailySaleDetailMinAggregate>;
  _sum?: Maybe<DailySaleDetailSumAggregate>;
};

export type AggregateDailySaleItem = {
  __typename?: 'AggregateDailySaleItem';
  _avg?: Maybe<DailySaleItemAvgAggregate>;
  _count?: Maybe<DailySaleItemCountAggregate>;
  _max?: Maybe<DailySaleItemMaxAggregate>;
  _min?: Maybe<DailySaleItemMinAggregate>;
  _sum?: Maybe<DailySaleItemSumAggregate>;
};

export type AggregateDailyStock = {
  __typename?: 'AggregateDailyStock';
  _avg?: Maybe<DailyStockAvgAggregate>;
  _count?: Maybe<DailyStockCountAggregate>;
  _max?: Maybe<DailyStockMaxAggregate>;
  _min?: Maybe<DailyStockMinAggregate>;
  _sum?: Maybe<DailyStockSumAggregate>;
};

export type AggregateImage = {
  __typename?: 'AggregateImage';
  _count?: Maybe<ImageCountAggregate>;
  _max?: Maybe<ImageMaxAggregate>;
  _min?: Maybe<ImageMinAggregate>;
};

export type AggregateLocation = {
  __typename?: 'AggregateLocation';
  _count?: Maybe<LocationCountAggregate>;
  _max?: Maybe<LocationMaxAggregate>;
  _min?: Maybe<LocationMinAggregate>;
};

export type AggregatePaymentAccount = {
  __typename?: 'AggregatePaymentAccount';
  _count?: Maybe<PaymentAccountCountAggregate>;
  _max?: Maybe<PaymentAccountMaxAggregate>;
  _min?: Maybe<PaymentAccountMinAggregate>;
};

export type AggregatePaymentDetail = {
  __typename?: 'AggregatePaymentDetail';
  _avg?: Maybe<PaymentDetailAvgAggregate>;
  _count?: Maybe<PaymentDetailCountAggregate>;
  _max?: Maybe<PaymentDetailMaxAggregate>;
  _min?: Maybe<PaymentDetailMinAggregate>;
  _sum?: Maybe<PaymentDetailSumAggregate>;
};

export type AggregatePaymentMethod = {
  __typename?: 'AggregatePaymentMethod';
  _count?: Maybe<PaymentMethodCountAggregate>;
  _max?: Maybe<PaymentMethodMaxAggregate>;
  _min?: Maybe<PaymentMethodMinAggregate>;
};

export type AggregatePermission = {
  __typename?: 'AggregatePermission';
  _avg?: Maybe<PermissionAvgAggregate>;
  _count?: Maybe<PermissionCountAggregate>;
  _max?: Maybe<PermissionMaxAggregate>;
  _min?: Maybe<PermissionMinAggregate>;
  _sum?: Maybe<PermissionSumAggregate>;
};

export type AggregateProduct = {
  __typename?: 'AggregateProduct';
  _avg?: Maybe<ProductAvgAggregate>;
  _count?: Maybe<ProductCountAggregate>;
  _max?: Maybe<ProductMaxAggregate>;
  _min?: Maybe<ProductMinAggregate>;
  _sum?: Maybe<ProductSumAggregate>;
};

export type AggregateProductCategory = {
  __typename?: 'AggregateProductCategory';
  _avg?: Maybe<ProductCategoryAvgAggregate>;
  _count?: Maybe<ProductCategoryCountAggregate>;
  _max?: Maybe<ProductCategoryMaxAggregate>;
  _min?: Maybe<ProductCategoryMinAggregate>;
  _sum?: Maybe<ProductCategorySumAggregate>;
};

export type AggregateProductStock = {
  __typename?: 'AggregateProductStock';
  _avg?: Maybe<ProductStockAvgAggregate>;
  _count?: Maybe<ProductStockCountAggregate>;
  _max?: Maybe<ProductStockMaxAggregate>;
  _min?: Maybe<ProductStockMinAggregate>;
  _sum?: Maybe<ProductStockSumAggregate>;
};

export type AggregateProductStockItem = {
  __typename?: 'AggregateProductStockItem';
  _avg?: Maybe<ProductStockItemAvgAggregate>;
  _count?: Maybe<ProductStockItemCountAggregate>;
  _max?: Maybe<ProductStockItemMaxAggregate>;
  _min?: Maybe<ProductStockItemMinAggregate>;
  _sum?: Maybe<ProductStockItemSumAggregate>;
};

export type AggregateProductUnit = {
  __typename?: 'AggregateProductUnit';
  _count?: Maybe<ProductUnitCountAggregate>;
  _max?: Maybe<ProductUnitMaxAggregate>;
  _min?: Maybe<ProductUnitMinAggregate>;
};

export type AggregateProductVariant = {
  __typename?: 'AggregateProductVariant';
  _avg?: Maybe<ProductVariantAvgAggregate>;
  _count?: Maybe<ProductVariantCountAggregate>;
  _max?: Maybe<ProductVariantMaxAggregate>;
  _min?: Maybe<ProductVariantMinAggregate>;
  _sum?: Maybe<ProductVariantSumAggregate>;
};

export type AggregateProductVariantAttribute = {
  __typename?: 'AggregateProductVariantAttribute';
  _avg?: Maybe<ProductVariantAttributeAvgAggregate>;
  _count?: Maybe<ProductVariantAttributeCountAggregate>;
  _max?: Maybe<ProductVariantAttributeMaxAggregate>;
  _min?: Maybe<ProductVariantAttributeMinAggregate>;
  _sum?: Maybe<ProductVariantAttributeSumAggregate>;
};

export type AggregatePurchaseOrder = {
  __typename?: 'AggregatePurchaseOrder';
  _avg?: Maybe<PurchaseOrderAvgAggregate>;
  _count?: Maybe<PurchaseOrderCountAggregate>;
  _max?: Maybe<PurchaseOrderMaxAggregate>;
  _min?: Maybe<PurchaseOrderMinAggregate>;
  _sum?: Maybe<PurchaseOrderSumAggregate>;
};

export type AggregateRole = {
  __typename?: 'AggregateRole';
  _count?: Maybe<RoleCountAggregate>;
  _max?: Maybe<RoleMaxAggregate>;
  _min?: Maybe<RoleMinAggregate>;
};

export type AggregateSale = {
  __typename?: 'AggregateSale';
  _avg?: Maybe<SaleAvgAggregate>;
  _count?: Maybe<SaleCountAggregate>;
  _max?: Maybe<SaleMaxAggregate>;
  _min?: Maybe<SaleMinAggregate>;
  _sum?: Maybe<SaleSumAggregate>;
};

export type AggregateSaleAddon = {
  __typename?: 'AggregateSaleAddon';
  _avg?: Maybe<SaleAddonAvgAggregate>;
  _count?: Maybe<SaleAddonCountAggregate>;
  _max?: Maybe<SaleAddonMaxAggregate>;
  _min?: Maybe<SaleAddonMinAggregate>;
  _sum?: Maybe<SaleAddonSumAggregate>;
};

export type AggregateSaleAddonItem = {
  __typename?: 'AggregateSaleAddonItem';
  _avg?: Maybe<SaleAddonItemAvgAggregate>;
  _count?: Maybe<SaleAddonItemCountAggregate>;
  _max?: Maybe<SaleAddonItemMaxAggregate>;
  _min?: Maybe<SaleAddonItemMinAggregate>;
  _sum?: Maybe<SaleAddonItemSumAggregate>;
};

export type AggregateSaleChannel = {
  __typename?: 'AggregateSaleChannel';
  _count?: Maybe<SaleChannelCountAggregate>;
  _max?: Maybe<SaleChannelMaxAggregate>;
  _min?: Maybe<SaleChannelMinAggregate>;
};

export type AggregateSaleItem = {
  __typename?: 'AggregateSaleItem';
  _avg?: Maybe<SaleItemAvgAggregate>;
  _count?: Maybe<SaleItemCountAggregate>;
  _max?: Maybe<SaleItemMaxAggregate>;
  _min?: Maybe<SaleItemMinAggregate>;
  _sum?: Maybe<SaleItemSumAggregate>;
};

export type AggregateSaleItemStock = {
  __typename?: 'AggregateSaleItemStock';
  _avg?: Maybe<SaleItemStockAvgAggregate>;
  _count?: Maybe<SaleItemStockCountAggregate>;
  _max?: Maybe<SaleItemStockMaxAggregate>;
  _min?: Maybe<SaleItemStockMinAggregate>;
  _sum?: Maybe<SaleItemStockSumAggregate>;
};

export type AggregateSequenceData = {
  __typename?: 'AggregateSequenceData';
  _avg?: Maybe<SequenceDataAvgAggregate>;
  _count?: Maybe<SequenceDataCountAggregate>;
  _max?: Maybe<SequenceDataMaxAggregate>;
  _min?: Maybe<SequenceDataMinAggregate>;
  _sum?: Maybe<SequenceDataSumAggregate>;
};

export type AggregateStockAdjustment = {
  __typename?: 'AggregateStockAdjustment';
  _avg?: Maybe<StockAdjustmentAvgAggregate>;
  _count?: Maybe<StockAdjustmentCountAggregate>;
  _max?: Maybe<StockAdjustmentMaxAggregate>;
  _min?: Maybe<StockAdjustmentMinAggregate>;
  _sum?: Maybe<StockAdjustmentSumAggregate>;
};

export type AggregateStockHistory = {
  __typename?: 'AggregateStockHistory';
  _avg?: Maybe<StockHistoryAvgAggregate>;
  _count?: Maybe<StockHistoryCountAggregate>;
  _max?: Maybe<StockHistoryMaxAggregate>;
  _min?: Maybe<StockHistoryMinAggregate>;
  _sum?: Maybe<StockHistorySumAggregate>;
};

export type AggregateStockTransaction = {
  __typename?: 'AggregateStockTransaction';
  _avg?: Maybe<StockTransactionAvgAggregate>;
  _count?: Maybe<StockTransactionCountAggregate>;
  _max?: Maybe<StockTransactionMaxAggregate>;
  _min?: Maybe<StockTransactionMinAggregate>;
  _sum?: Maybe<StockTransactionSumAggregate>;
};

export type AggregateStockTransactionItem = {
  __typename?: 'AggregateStockTransactionItem';
  _avg?: Maybe<StockTransactionItemAvgAggregate>;
  _count?: Maybe<StockTransactionItemCountAggregate>;
  _max?: Maybe<StockTransactionItemMaxAggregate>;
  _min?: Maybe<StockTransactionItemMinAggregate>;
  _sum?: Maybe<StockTransactionItemSumAggregate>;
};

export type AggregateStore = {
  __typename?: 'AggregateStore';
  _count?: Maybe<StoreCountAggregate>;
  _max?: Maybe<StoreMaxAggregate>;
  _min?: Maybe<StoreMinAggregate>;
};

export type AggregateSupplier = {
  __typename?: 'AggregateSupplier';
  _count?: Maybe<SupplierCountAggregate>;
  _max?: Maybe<SupplierMaxAggregate>;
  _min?: Maybe<SupplierMinAggregate>;
};

export type AggregateSystemData = {
  __typename?: 'AggregateSystemData';
  _count?: Maybe<SystemDataCountAggregate>;
  _max?: Maybe<SystemDataMaxAggregate>;
  _min?: Maybe<SystemDataMinAggregate>;
};

export type AggregateSystemLog = {
  __typename?: 'AggregateSystemLog';
  _count?: Maybe<SystemLogCountAggregate>;
  _max?: Maybe<SystemLogMaxAggregate>;
  _min?: Maybe<SystemLogMinAggregate>;
};

export type AggregateTaxSetting = {
  __typename?: 'AggregateTaxSetting';
  _avg?: Maybe<TaxSettingAvgAggregate>;
  _count?: Maybe<TaxSettingCountAggregate>;
  _max?: Maybe<TaxSettingMaxAggregate>;
  _min?: Maybe<TaxSettingMinAggregate>;
  _sum?: Maybe<TaxSettingSumAggregate>;
};

export type AggregateTransferOrder = {
  __typename?: 'AggregateTransferOrder';
  _avg?: Maybe<TransferOrderAvgAggregate>;
  _count?: Maybe<TransferOrderCountAggregate>;
  _max?: Maybe<TransferOrderMaxAggregate>;
  _min?: Maybe<TransferOrderMinAggregate>;
  _sum?: Maybe<TransferOrderSumAggregate>;
};

export type AggregateUser = {
  __typename?: 'AggregateUser';
  _count?: Maybe<UserCountAggregate>;
  _max?: Maybe<UserMaxAggregate>;
  _min?: Maybe<UserMinAggregate>;
};

export type AppVersion = {
  __typename?: 'AppVersion';
  app_id: Scalars['String']['output'];
  app_store_url: Scalars['String']['output'];
  app_url?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  min_version: Scalars['Int']['output'];
  play_store_url: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AppVersionAvgAggregate = {
  __typename?: 'AppVersionAvgAggregate';
  min_version?: Maybe<Scalars['Float']['output']>;
};

export type AppVersionAvgOrderByAggregateInput = {
  min_version?: InputMaybe<SortOrder>;
};

export type AppVersionCountAggregate = {
  __typename?: 'AppVersionCountAggregate';
  _all: Scalars['Int']['output'];
  app_id: Scalars['Int']['output'];
  app_store_url: Scalars['Int']['output'];
  app_url: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  min_version: Scalars['Int']['output'];
  play_store_url: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type AppVersionCountOrderByAggregateInput = {
  app_id?: InputMaybe<SortOrder>;
  app_store_url?: InputMaybe<SortOrder>;
  app_url?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  min_version?: InputMaybe<SortOrder>;
  play_store_url?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AppVersionCreateInput = {
  app_id: Scalars['String']['input'];
  app_store_url: Scalars['String']['input'];
  app_url?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  min_version?: InputMaybe<Scalars['Int']['input']>;
  play_store_url: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AppVersionCreateManyInput = {
  app_id: Scalars['String']['input'];
  app_store_url: Scalars['String']['input'];
  app_url?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  min_version?: InputMaybe<Scalars['Int']['input']>;
  play_store_url: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type AppVersionGroupBy = {
  __typename?: 'AppVersionGroupBy';
  _avg?: Maybe<AppVersionAvgAggregate>;
  _count?: Maybe<AppVersionCountAggregate>;
  _max?: Maybe<AppVersionMaxAggregate>;
  _min?: Maybe<AppVersionMinAggregate>;
  _sum?: Maybe<AppVersionSumAggregate>;
  app_id: Scalars['String']['output'];
  app_store_url: Scalars['String']['output'];
  app_url?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  min_version: Scalars['Int']['output'];
  play_store_url: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AppVersionMaxAggregate = {
  __typename?: 'AppVersionMaxAggregate';
  app_id?: Maybe<Scalars['String']['output']>;
  app_store_url?: Maybe<Scalars['String']['output']>;
  app_url?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  min_version?: Maybe<Scalars['Int']['output']>;
  play_store_url?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AppVersionMaxOrderByAggregateInput = {
  app_id?: InputMaybe<SortOrder>;
  app_store_url?: InputMaybe<SortOrder>;
  app_url?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  min_version?: InputMaybe<SortOrder>;
  play_store_url?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AppVersionMinAggregate = {
  __typename?: 'AppVersionMinAggregate';
  app_id?: Maybe<Scalars['String']['output']>;
  app_store_url?: Maybe<Scalars['String']['output']>;
  app_url?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  min_version?: Maybe<Scalars['Int']['output']>;
  play_store_url?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type AppVersionMinOrderByAggregateInput = {
  app_id?: InputMaybe<SortOrder>;
  app_store_url?: InputMaybe<SortOrder>;
  app_url?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  min_version?: InputMaybe<SortOrder>;
  play_store_url?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type AppVersionOrderByWithAggregationInput = {
  _avg?: InputMaybe<AppVersionAvgOrderByAggregateInput>;
  _count?: InputMaybe<AppVersionCountOrderByAggregateInput>;
  _max?: InputMaybe<AppVersionMaxOrderByAggregateInput>;
  _min?: InputMaybe<AppVersionMinOrderByAggregateInput>;
  _sum?: InputMaybe<AppVersionSumOrderByAggregateInput>;
  app_id?: InputMaybe<SortOrder>;
  app_store_url?: InputMaybe<SortOrder>;
  app_url?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  min_version?: InputMaybe<SortOrder>;
  play_store_url?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type AppVersionOrderByWithRelationInput = {
  app_id?: InputMaybe<SortOrder>;
  app_store_url?: InputMaybe<SortOrder>;
  app_url?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  min_version?: InputMaybe<SortOrder>;
  play_store_url?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum AppVersionScalarFieldEnum {
  AppId = 'app_id',
  AppStoreUrl = 'app_store_url',
  AppUrl = 'app_url',
  CreatedAt = 'created_at',
  Id = 'id',
  MinVersion = 'min_version',
  PlayStoreUrl = 'play_store_url',
  UpdatedAt = 'updated_at'
}

export type AppVersionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<AppVersionScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<AppVersionScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<AppVersionScalarWhereWithAggregatesInput>>;
  app_id?: InputMaybe<StringWithAggregatesFilter>;
  app_store_url?: InputMaybe<StringWithAggregatesFilter>;
  app_url?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  min_version?: InputMaybe<IntWithAggregatesFilter>;
  play_store_url?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type AppVersionSumAggregate = {
  __typename?: 'AppVersionSumAggregate';
  min_version?: Maybe<Scalars['Int']['output']>;
};

export type AppVersionSumOrderByAggregateInput = {
  min_version?: InputMaybe<SortOrder>;
};

export type AppVersionUpdateInput = {
  app_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  app_store_url?: InputMaybe<StringFieldUpdateOperationsInput>;
  app_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  min_version?: InputMaybe<IntFieldUpdateOperationsInput>;
  play_store_url?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AppVersionUpdateManyMutationInput = {
  app_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  app_store_url?: InputMaybe<StringFieldUpdateOperationsInput>;
  app_url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  min_version?: InputMaybe<IntFieldUpdateOperationsInput>;
  play_store_url?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type AppVersionWhereInput = {
  AND?: InputMaybe<Array<AppVersionWhereInput>>;
  NOT?: InputMaybe<Array<AppVersionWhereInput>>;
  OR?: InputMaybe<Array<AppVersionWhereInput>>;
  app_id?: InputMaybe<StringFilter>;
  app_store_url?: InputMaybe<StringFilter>;
  app_url?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  min_version?: InputMaybe<IntFilter>;
  play_store_url?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type AppVersionWhereUniqueInput = {
  AND?: InputMaybe<Array<AppVersionWhereInput>>;
  NOT?: InputMaybe<Array<AppVersionWhereInput>>;
  OR?: InputMaybe<Array<AppVersionWhereInput>>;
  app_id?: InputMaybe<Scalars['String']['input']>;
  app_store_url?: InputMaybe<StringFilter>;
  app_url?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  min_version?: InputMaybe<IntFilter>;
  play_store_url?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type BigIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['BigInt']['input']>;
  divide?: InputMaybe<Scalars['BigInt']['input']>;
  increment?: InputMaybe<Scalars['BigInt']['input']>;
  multiply?: InputMaybe<Scalars['BigInt']['input']>;
  set?: InputMaybe<Scalars['BigInt']['input']>;
};

export type BigIntFilter = {
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type BigIntNullableFilter = {
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type BigIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBigIntNullableFilter>;
  _min?: InputMaybe<NestedBigIntNullableFilter>;
  _sum?: InputMaybe<NestedBigIntNullableFilter>;
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type BigIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBigIntFilter>;
  _min?: InputMaybe<NestedBigIntFilter>;
  _sum?: InputMaybe<NestedBigIntFilter>;
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type BoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type BoolWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBoolFilter>;
  _min?: InputMaybe<NestedBoolFilter>;
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolWithAggregatesFilter>;
};

export type Business = {
  __typename?: 'Business';
  _count?: Maybe<BusinessCount>;
  active: Scalars['Boolean']['output'];
  addresses: Array<Address>;
  appointment_id?: Maybe<Scalars['String']['output']>;
  contact_info?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  currency: Currency;
  currency_code: Scalars['String']['output'];
  customers: Array<Customer>;
  daily_sales: Array<DailySale>;
  default_location?: Maybe<Location>;
  default_location_id?: Maybe<Scalars['String']['output']>;
  default_store?: Maybe<Store>;
  default_store_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Image>;
  image_id?: Maybe<Scalars['String']['output']>;
  locations: Array<Location>;
  metadata?: Maybe<Scalars['String']['output']>;
  modifiers: Array<ProductVariant>;
  name: Scalars['String']['output'];
  owner_id: Scalars['String']['output'];
  payment_methods: Array<PaymentMethod>;
  phone_number?: Maybe<Scalars['String']['output']>;
  product_categories: Array<ProductCategory>;
  product_stock_items: Array<ProductStockItem>;
  product_units: Array<ProductUnit>;
  products: Array<Product>;
  roles: Array<Role>;
  sale_addons: Array<SaleAddon>;
  sale_channels: Array<SaleChannel>;
  sales: Array<Sale>;
  stores: Array<Store>;
  suppliers: Array<Supplier>;
  taxes: Array<TaxSetting>;
  timezone: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  users: Array<User>;
};


export type BusinessAddressesArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type BusinessCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type BusinessDaily_SalesArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type BusinessDefault_LocationArgs = {
  where?: InputMaybe<LocationWhereInput>;
};


export type BusinessDefault_StoreArgs = {
  where?: InputMaybe<StoreWhereInput>;
};


export type BusinessImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type BusinessLocationsArgs = {
  cursor?: InputMaybe<LocationWhereUniqueInput>;
  distinct?: InputMaybe<Array<LocationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type BusinessModifiersArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type BusinessPayment_MethodsArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentMethodScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type BusinessProduct_CategoriesArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type BusinessProduct_Stock_ItemsArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type BusinessProduct_UnitsArgs = {
  cursor?: InputMaybe<ProductUnitWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductUnitScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type BusinessProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type BusinessRolesArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type BusinessSale_AddonsArgs = {
  cursor?: InputMaybe<SaleAddonWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type BusinessSale_ChannelsArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type BusinessSalesArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type BusinessStoresArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type BusinessSuppliersArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  distinct?: InputMaybe<Array<SupplierScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type BusinessTaxesArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TaxSettingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type BusinessUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export type BusinessCount = {
  __typename?: 'BusinessCount';
  addresses: Scalars['Int']['output'];
  customers: Scalars['Int']['output'];
  daily_sales: Scalars['Int']['output'];
  locations: Scalars['Int']['output'];
  modifiers: Scalars['Int']['output'];
  payment_methods: Scalars['Int']['output'];
  product_categories: Scalars['Int']['output'];
  product_stock_items: Scalars['Int']['output'];
  product_units: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
  roles: Scalars['Int']['output'];
  sale_addons: Scalars['Int']['output'];
  sale_channels: Scalars['Int']['output'];
  sales: Scalars['Int']['output'];
  stores: Scalars['Int']['output'];
  suppliers: Scalars['Int']['output'];
  taxes: Scalars['Int']['output'];
  users: Scalars['Int']['output'];
};


export type BusinessCountAddressesArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type BusinessCountCustomersArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type BusinessCountDaily_SalesArgs = {
  where?: InputMaybe<DailySaleWhereInput>;
};


export type BusinessCountLocationsArgs = {
  where?: InputMaybe<LocationWhereInput>;
};


export type BusinessCountModifiersArgs = {
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type BusinessCountPayment_MethodsArgs = {
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type BusinessCountProduct_CategoriesArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type BusinessCountProduct_Stock_ItemsArgs = {
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type BusinessCountProduct_UnitsArgs = {
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type BusinessCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type BusinessCountRolesArgs = {
  where?: InputMaybe<RoleWhereInput>;
};


export type BusinessCountSale_AddonsArgs = {
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type BusinessCountSale_ChannelsArgs = {
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type BusinessCountSalesArgs = {
  where?: InputMaybe<SaleWhereInput>;
};


export type BusinessCountStoresArgs = {
  where?: InputMaybe<StoreWhereInput>;
};


export type BusinessCountSuppliersArgs = {
  where?: InputMaybe<SupplierWhereInput>;
};


export type BusinessCountTaxesArgs = {
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type BusinessCountUsersArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type BusinessCountAggregate = {
  __typename?: 'BusinessCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  appointment_id: Scalars['Int']['output'];
  contact_info: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  currency_code: Scalars['Int']['output'];
  default_location_id: Scalars['Int']['output'];
  default_store_id: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  email: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image_id: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  owner_id: Scalars['Int']['output'];
  phone_number: Scalars['Int']['output'];
  timezone: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type BusinessCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  appointment_id?: InputMaybe<SortOrder>;
  contact_info?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency_code?: InputMaybe<SortOrder>;
  default_location_id?: InputMaybe<SortOrder>;
  default_store_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  owner_id?: InputMaybe<SortOrder>;
  phone_number?: InputMaybe<SortOrder>;
  timezone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type BusinessCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateManyCurrencyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_location_id?: InputMaybe<Scalars['String']['input']>;
  default_store_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  phone_number?: InputMaybe<Scalars['String']['input']>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BusinessCreateManyCurrencyInputEnvelope = {
  data: Array<BusinessCreateManyCurrencyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BusinessCreateManyImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency_code: Scalars['String']['input'];
  default_location_id?: InputMaybe<Scalars['String']['input']>;
  default_store_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  phone_number?: InputMaybe<Scalars['String']['input']>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BusinessCreateManyImageInputEnvelope = {
  data: Array<BusinessCreateManyImageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BusinessCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency_code: Scalars['String']['input'];
  default_location_id?: InputMaybe<Scalars['String']['input']>;
  default_store_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  phone_number?: InputMaybe<Scalars['String']['input']>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BusinessCreateNestedManyWithoutAddressesInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutAddressesInput>>;
};

export type BusinessCreateNestedManyWithoutCurrencyInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutCurrencyInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutCurrencyInput>>;
  createMany?: InputMaybe<BusinessCreateManyCurrencyInputEnvelope>;
};

export type BusinessCreateNestedManyWithoutImageInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutImageInput>>;
  createMany?: InputMaybe<BusinessCreateManyImageInputEnvelope>;
};

export type BusinessCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<BusinessCreateWithoutCustomersInput>;
};

export type BusinessCreateNestedOneWithoutDaily_SalesInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDaily_SalesInput>;
  create?: InputMaybe<BusinessCreateWithoutDaily_SalesInput>;
};

export type BusinessCreateNestedOneWithoutDefault_LocationInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDefault_LocationInput>;
  create?: InputMaybe<BusinessCreateWithoutDefault_LocationInput>;
};

export type BusinessCreateNestedOneWithoutDefault_StoreInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDefault_StoreInput>;
  create?: InputMaybe<BusinessCreateWithoutDefault_StoreInput>;
};

export type BusinessCreateNestedOneWithoutLocationsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutLocationsInput>;
  create?: InputMaybe<BusinessCreateWithoutLocationsInput>;
};

export type BusinessCreateNestedOneWithoutModifiersInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutModifiersInput>;
  create?: InputMaybe<BusinessCreateWithoutModifiersInput>;
};

export type BusinessCreateNestedOneWithoutPayment_MethodsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutPayment_MethodsInput>;
  create?: InputMaybe<BusinessCreateWithoutPayment_MethodsInput>;
};

export type BusinessCreateNestedOneWithoutProduct_CategoriesInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_CategoriesInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_CategoriesInput>;
};

export type BusinessCreateNestedOneWithoutProduct_Stock_ItemsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_Stock_ItemsInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_Stock_ItemsInput>;
};

export type BusinessCreateNestedOneWithoutProduct_UnitsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_UnitsInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_UnitsInput>;
};

export type BusinessCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<BusinessCreateWithoutProductsInput>;
};

export type BusinessCreateNestedOneWithoutRolesInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutRolesInput>;
  create?: InputMaybe<BusinessCreateWithoutRolesInput>;
};

export type BusinessCreateNestedOneWithoutSale_AddonsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSale_AddonsInput>;
  create?: InputMaybe<BusinessCreateWithoutSale_AddonsInput>;
};

export type BusinessCreateNestedOneWithoutSale_ChannelsInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSale_ChannelsInput>;
  create?: InputMaybe<BusinessCreateWithoutSale_ChannelsInput>;
};

export type BusinessCreateNestedOneWithoutSalesInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<BusinessCreateWithoutSalesInput>;
};

export type BusinessCreateNestedOneWithoutStoresInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutStoresInput>;
  create?: InputMaybe<BusinessCreateWithoutStoresInput>;
};

export type BusinessCreateNestedOneWithoutSuppliersInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSuppliersInput>;
  create?: InputMaybe<BusinessCreateWithoutSuppliersInput>;
};

export type BusinessCreateNestedOneWithoutTaxesInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutTaxesInput>;
  create?: InputMaybe<BusinessCreateWithoutTaxesInput>;
};

export type BusinessCreateNestedOneWithoutUsersInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<BusinessCreateWithoutUsersInput>;
};

export type BusinessCreateOrConnectWithoutAddressesInput = {
  create: BusinessCreateWithoutAddressesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutCurrencyInput = {
  create: BusinessCreateWithoutCurrencyInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutCustomersInput = {
  create: BusinessCreateWithoutCustomersInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutDaily_SalesInput = {
  create: BusinessCreateWithoutDaily_SalesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutDefault_LocationInput = {
  create: BusinessCreateWithoutDefault_LocationInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutDefault_StoreInput = {
  create: BusinessCreateWithoutDefault_StoreInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutImageInput = {
  create: BusinessCreateWithoutImageInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutLocationsInput = {
  create: BusinessCreateWithoutLocationsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutModifiersInput = {
  create: BusinessCreateWithoutModifiersInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutPayment_MethodsInput = {
  create: BusinessCreateWithoutPayment_MethodsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutProduct_CategoriesInput = {
  create: BusinessCreateWithoutProduct_CategoriesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutProduct_Stock_ItemsInput = {
  create: BusinessCreateWithoutProduct_Stock_ItemsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutProduct_UnitsInput = {
  create: BusinessCreateWithoutProduct_UnitsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutProductsInput = {
  create: BusinessCreateWithoutProductsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutRolesInput = {
  create: BusinessCreateWithoutRolesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutSale_AddonsInput = {
  create: BusinessCreateWithoutSale_AddonsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutSale_ChannelsInput = {
  create: BusinessCreateWithoutSale_ChannelsInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutSalesInput = {
  create: BusinessCreateWithoutSalesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutStoresInput = {
  create: BusinessCreateWithoutStoresInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutSuppliersInput = {
  create: BusinessCreateWithoutSuppliersInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutTaxesInput = {
  create: BusinessCreateWithoutTaxesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateOrConnectWithoutUsersInput = {
  create: BusinessCreateWithoutUsersInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessCreateWithoutAddressesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutCurrencyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutDaily_SalesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutDefault_LocationInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutDefault_StoreInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutLocationsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutModifiersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutPayment_MethodsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutProduct_CategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutProduct_Stock_ItemsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutProduct_UnitsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutRolesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutSale_AddonsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutSale_ChannelsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutSalesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutStoresInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutSuppliersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutTaxesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutBusinessInput>;
};

export type BusinessCreateWithoutUsersInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutBusinessesInput>;
  appointment_id?: InputMaybe<Scalars['String']['input']>;
  contact_info?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  currency: CurrencyCreateNestedOneWithoutBusinessesInput;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutBusinessInput>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutBusinessInput>;
  default_location?: InputMaybe<LocationCreateNestedOneWithoutIs_DefaultInput>;
  default_store?: InputMaybe<StoreCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutBusinessesInput>;
  locations?: InputMaybe<LocationCreateNestedManyWithoutBusinessInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  modifiers?: InputMaybe<ProductVariantCreateNestedManyWithoutBusinessInput>;
  name: Scalars['String']['input'];
  owner_id: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutBusinessInput>;
  phone_number?: InputMaybe<Scalars['String']['input']>;
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutBusinessInput>;
  product_stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutBusinessInput>;
  product_units?: InputMaybe<ProductUnitCreateNestedManyWithoutBusinessInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutBusinessInput>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutBusinessInput>;
  sale_addons?: InputMaybe<SaleAddonCreateNestedManyWithoutBusinessInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutBusinessInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutBusinessInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutBusinessInput>;
  suppliers?: InputMaybe<SupplierCreateNestedManyWithoutBusinessInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutBusinessInput>;
  timezone: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type BusinessGroupBy = {
  __typename?: 'BusinessGroupBy';
  _count?: Maybe<BusinessCountAggregate>;
  _max?: Maybe<BusinessMaxAggregate>;
  _min?: Maybe<BusinessMinAggregate>;
  active: Scalars['Boolean']['output'];
  appointment_id?: Maybe<Scalars['String']['output']>;
  contact_info?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  currency_code: Scalars['String']['output'];
  default_location_id?: Maybe<Scalars['String']['output']>;
  default_store_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image_id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  owner_id: Scalars['String']['output'];
  phone_number?: Maybe<Scalars['String']['output']>;
  timezone: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type BusinessListRelationFilter = {
  every?: InputMaybe<BusinessWhereInput>;
  none?: InputMaybe<BusinessWhereInput>;
  some?: InputMaybe<BusinessWhereInput>;
};

export type BusinessMaxAggregate = {
  __typename?: 'BusinessMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  appointment_id?: Maybe<Scalars['String']['output']>;
  contact_info?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  currency_code?: Maybe<Scalars['String']['output']>;
  default_location_id?: Maybe<Scalars['String']['output']>;
  default_store_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner_id?: Maybe<Scalars['String']['output']>;
  phone_number?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type BusinessMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  appointment_id?: InputMaybe<SortOrder>;
  contact_info?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency_code?: InputMaybe<SortOrder>;
  default_location_id?: InputMaybe<SortOrder>;
  default_store_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  owner_id?: InputMaybe<SortOrder>;
  phone_number?: InputMaybe<SortOrder>;
  timezone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type BusinessMinAggregate = {
  __typename?: 'BusinessMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  appointment_id?: Maybe<Scalars['String']['output']>;
  contact_info?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  currency_code?: Maybe<Scalars['String']['output']>;
  default_location_id?: Maybe<Scalars['String']['output']>;
  default_store_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  owner_id?: Maybe<Scalars['String']['output']>;
  phone_number?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type BusinessMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  appointment_id?: InputMaybe<SortOrder>;
  contact_info?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  currency_code?: InputMaybe<SortOrder>;
  default_location_id?: InputMaybe<SortOrder>;
  default_store_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  owner_id?: InputMaybe<SortOrder>;
  phone_number?: InputMaybe<SortOrder>;
  timezone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type BusinessNullableRelationFilter = {
  is?: InputMaybe<BusinessWhereInput>;
  isNot?: InputMaybe<BusinessWhereInput>;
};

export type BusinessOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BusinessOrderByWithAggregationInput = {
  _count?: InputMaybe<BusinessCountOrderByAggregateInput>;
  _max?: InputMaybe<BusinessMaxOrderByAggregateInput>;
  _min?: InputMaybe<BusinessMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  appointment_id?: InputMaybe<SortOrderInput>;
  contact_info?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  currency_code?: InputMaybe<SortOrder>;
  default_location_id?: InputMaybe<SortOrderInput>;
  default_store_id?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrderInput>;
  metadata?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  owner_id?: InputMaybe<SortOrder>;
  phone_number?: InputMaybe<SortOrderInput>;
  timezone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type BusinessOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  addresses?: InputMaybe<AddressOrderByRelationAggregateInput>;
  appointment_id?: InputMaybe<SortOrderInput>;
  contact_info?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  currency?: InputMaybe<CurrencyOrderByWithRelationInput>;
  currency_code?: InputMaybe<SortOrder>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  daily_sales?: InputMaybe<DailySaleOrderByRelationAggregateInput>;
  default_location?: InputMaybe<LocationOrderByWithRelationInput>;
  default_location_id?: InputMaybe<SortOrderInput>;
  default_store?: InputMaybe<StoreOrderByWithRelationInput>;
  default_store_id?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<ImageOrderByWithRelationInput>;
  image_id?: InputMaybe<SortOrderInput>;
  locations?: InputMaybe<LocationOrderByRelationAggregateInput>;
  metadata?: InputMaybe<SortOrderInput>;
  modifiers?: InputMaybe<ProductVariantOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  owner_id?: InputMaybe<SortOrder>;
  payment_methods?: InputMaybe<PaymentMethodOrderByRelationAggregateInput>;
  phone_number?: InputMaybe<SortOrderInput>;
  product_categories?: InputMaybe<ProductCategoryOrderByRelationAggregateInput>;
  product_stock_items?: InputMaybe<ProductStockItemOrderByRelationAggregateInput>;
  product_units?: InputMaybe<ProductUnitOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  roles?: InputMaybe<RoleOrderByRelationAggregateInput>;
  sale_addons?: InputMaybe<SaleAddonOrderByRelationAggregateInput>;
  sale_channels?: InputMaybe<SaleChannelOrderByRelationAggregateInput>;
  sales?: InputMaybe<SaleOrderByRelationAggregateInput>;
  stores?: InputMaybe<StoreOrderByRelationAggregateInput>;
  suppliers?: InputMaybe<SupplierOrderByRelationAggregateInput>;
  taxes?: InputMaybe<TaxSettingOrderByRelationAggregateInput>;
  timezone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  users?: InputMaybe<UserOrderByRelationAggregateInput>;
};

export type BusinessRelationFilter = {
  is?: InputMaybe<BusinessWhereInput>;
  isNot?: InputMaybe<BusinessWhereInput>;
};

export enum BusinessScalarFieldEnum {
  Active = 'active',
  AppointmentId = 'appointment_id',
  ContactInfo = 'contact_info',
  CreatedAt = 'created_at',
  CurrencyCode = 'currency_code',
  DefaultLocationId = 'default_location_id',
  DefaultStoreId = 'default_store_id',
  Description = 'description',
  Email = 'email',
  Id = 'id',
  ImageId = 'image_id',
  Metadata = 'metadata',
  Name = 'name',
  OwnerId = 'owner_id',
  PhoneNumber = 'phone_number',
  Timezone = 'timezone',
  UpdatedAt = 'updated_at'
}

export type BusinessScalarWhereInput = {
  AND?: InputMaybe<Array<BusinessScalarWhereInput>>;
  NOT?: InputMaybe<Array<BusinessScalarWhereInput>>;
  OR?: InputMaybe<Array<BusinessScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  appointment_id?: InputMaybe<StringNullableFilter>;
  contact_info?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  currency_code?: InputMaybe<StringFilter>;
  default_location_id?: InputMaybe<StringNullableFilter>;
  default_store_id?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  owner_id?: InputMaybe<StringFilter>;
  phone_number?: InputMaybe<StringNullableFilter>;
  timezone?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type BusinessScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<BusinessScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<BusinessScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<BusinessScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  appointment_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  contact_info?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  currency_code?: InputMaybe<StringWithAggregatesFilter>;
  default_location_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  default_store_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  owner_id?: InputMaybe<StringWithAggregatesFilter>;
  phone_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  timezone?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type BusinessUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type BusinessUpdateManyWithWhereWithoutAddressesInput = {
  data: BusinessUpdateManyMutationInput;
  where: BusinessScalarWhereInput;
};

export type BusinessUpdateManyWithWhereWithoutCurrencyInput = {
  data: BusinessUpdateManyMutationInput;
  where: BusinessScalarWhereInput;
};

export type BusinessUpdateManyWithWhereWithoutImageInput = {
  data: BusinessUpdateManyMutationInput;
  where: BusinessScalarWhereInput;
};

export type BusinessUpdateManyWithoutAddressesNestedInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutAddressesInput>>;
  delete?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BusinessScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  set?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  update?: InputMaybe<Array<BusinessUpdateWithWhereUniqueWithoutAddressesInput>>;
  updateMany?: InputMaybe<Array<BusinessUpdateManyWithWhereWithoutAddressesInput>>;
  upsert?: InputMaybe<Array<BusinessUpsertWithWhereUniqueWithoutAddressesInput>>;
};

export type BusinessUpdateManyWithoutCurrencyNestedInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutCurrencyInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutCurrencyInput>>;
  createMany?: InputMaybe<BusinessCreateManyCurrencyInputEnvelope>;
  delete?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BusinessScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  set?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  update?: InputMaybe<Array<BusinessUpdateWithWhereUniqueWithoutCurrencyInput>>;
  updateMany?: InputMaybe<Array<BusinessUpdateManyWithWhereWithoutCurrencyInput>>;
  upsert?: InputMaybe<Array<BusinessUpsertWithWhereUniqueWithoutCurrencyInput>>;
};

export type BusinessUpdateManyWithoutImageNestedInput = {
  connect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<BusinessCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<BusinessCreateWithoutImageInput>>;
  createMany?: InputMaybe<BusinessCreateManyImageInputEnvelope>;
  delete?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<BusinessScalarWhereInput>>;
  disconnect?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  set?: InputMaybe<Array<BusinessWhereUniqueInput>>;
  update?: InputMaybe<Array<BusinessUpdateWithWhereUniqueWithoutImageInput>>;
  updateMany?: InputMaybe<Array<BusinessUpdateManyWithWhereWithoutImageInput>>;
  upsert?: InputMaybe<Array<BusinessUpsertWithWhereUniqueWithoutImageInput>>;
};

export type BusinessUpdateOneRequiredWithoutCustomersNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<BusinessCreateWithoutCustomersInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutCustomersInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutCustomersInput>;
};

export type BusinessUpdateOneRequiredWithoutLocationsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutLocationsInput>;
  create?: InputMaybe<BusinessCreateWithoutLocationsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutLocationsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutLocationsInput>;
};

export type BusinessUpdateOneRequiredWithoutPayment_MethodsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutPayment_MethodsInput>;
  create?: InputMaybe<BusinessCreateWithoutPayment_MethodsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutPayment_MethodsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutPayment_MethodsInput>;
};

export type BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_CategoriesInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_CategoriesInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutProduct_CategoriesInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutProduct_CategoriesInput>;
};

export type BusinessUpdateOneRequiredWithoutProduct_Stock_ItemsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_Stock_ItemsInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_Stock_ItemsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutProduct_Stock_ItemsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutProduct_Stock_ItemsInput>;
};

export type BusinessUpdateOneRequiredWithoutProduct_UnitsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProduct_UnitsInput>;
  create?: InputMaybe<BusinessCreateWithoutProduct_UnitsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutProduct_UnitsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutProduct_UnitsInput>;
};

export type BusinessUpdateOneRequiredWithoutProductsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<BusinessCreateWithoutProductsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutProductsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutProductsInput>;
};

export type BusinessUpdateOneRequiredWithoutRolesNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutRolesInput>;
  create?: InputMaybe<BusinessCreateWithoutRolesInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutRolesInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutRolesInput>;
};

export type BusinessUpdateOneRequiredWithoutSale_AddonsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSale_AddonsInput>;
  create?: InputMaybe<BusinessCreateWithoutSale_AddonsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutSale_AddonsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutSale_AddonsInput>;
};

export type BusinessUpdateOneRequiredWithoutSale_ChannelsNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSale_ChannelsInput>;
  create?: InputMaybe<BusinessCreateWithoutSale_ChannelsInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutSale_ChannelsInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutSale_ChannelsInput>;
};

export type BusinessUpdateOneRequiredWithoutSalesNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<BusinessCreateWithoutSalesInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutSalesInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutSalesInput>;
};

export type BusinessUpdateOneRequiredWithoutStoresNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutStoresInput>;
  create?: InputMaybe<BusinessCreateWithoutStoresInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutStoresInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutStoresInput>;
};

export type BusinessUpdateOneRequiredWithoutSuppliersNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutSuppliersInput>;
  create?: InputMaybe<BusinessCreateWithoutSuppliersInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutSuppliersInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutSuppliersInput>;
};

export type BusinessUpdateOneRequiredWithoutTaxesNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutTaxesInput>;
  create?: InputMaybe<BusinessCreateWithoutTaxesInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutTaxesInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutTaxesInput>;
};

export type BusinessUpdateOneRequiredWithoutUsersNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<BusinessCreateWithoutUsersInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutUsersInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutUsersInput>;
};

export type BusinessUpdateOneWithoutDaily_SalesNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDaily_SalesInput>;
  create?: InputMaybe<BusinessCreateWithoutDaily_SalesInput>;
  delete?: InputMaybe<BusinessWhereInput>;
  disconnect?: InputMaybe<BusinessWhereInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutDaily_SalesInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutDaily_SalesInput>;
};

export type BusinessUpdateOneWithoutDefault_LocationNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDefault_LocationInput>;
  create?: InputMaybe<BusinessCreateWithoutDefault_LocationInput>;
  delete?: InputMaybe<BusinessWhereInput>;
  disconnect?: InputMaybe<BusinessWhereInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutDefault_LocationInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutDefault_LocationInput>;
};

export type BusinessUpdateOneWithoutDefault_StoreNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutDefault_StoreInput>;
  create?: InputMaybe<BusinessCreateWithoutDefault_StoreInput>;
  delete?: InputMaybe<BusinessWhereInput>;
  disconnect?: InputMaybe<BusinessWhereInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutDefault_StoreInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutDefault_StoreInput>;
};

export type BusinessUpdateOneWithoutModifiersNestedInput = {
  connect?: InputMaybe<BusinessWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BusinessCreateOrConnectWithoutModifiersInput>;
  create?: InputMaybe<BusinessCreateWithoutModifiersInput>;
  delete?: InputMaybe<BusinessWhereInput>;
  disconnect?: InputMaybe<BusinessWhereInput>;
  update?: InputMaybe<BusinessUpdateToOneWithWhereWithoutModifiersInput>;
  upsert?: InputMaybe<BusinessUpsertWithoutModifiersInput>;
};

export type BusinessUpdateToOneWithWhereWithoutCustomersInput = {
  data: BusinessUpdateWithoutCustomersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutDaily_SalesInput = {
  data: BusinessUpdateWithoutDaily_SalesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutDefault_LocationInput = {
  data: BusinessUpdateWithoutDefault_LocationInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutDefault_StoreInput = {
  data: BusinessUpdateWithoutDefault_StoreInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutLocationsInput = {
  data: BusinessUpdateWithoutLocationsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutModifiersInput = {
  data: BusinessUpdateWithoutModifiersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutPayment_MethodsInput = {
  data: BusinessUpdateWithoutPayment_MethodsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutProduct_CategoriesInput = {
  data: BusinessUpdateWithoutProduct_CategoriesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutProduct_Stock_ItemsInput = {
  data: BusinessUpdateWithoutProduct_Stock_ItemsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutProduct_UnitsInput = {
  data: BusinessUpdateWithoutProduct_UnitsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutProductsInput = {
  data: BusinessUpdateWithoutProductsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutRolesInput = {
  data: BusinessUpdateWithoutRolesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutSale_AddonsInput = {
  data: BusinessUpdateWithoutSale_AddonsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutSale_ChannelsInput = {
  data: BusinessUpdateWithoutSale_ChannelsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutSalesInput = {
  data: BusinessUpdateWithoutSalesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutStoresInput = {
  data: BusinessUpdateWithoutStoresInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutSuppliersInput = {
  data: BusinessUpdateWithoutSuppliersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutTaxesInput = {
  data: BusinessUpdateWithoutTaxesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateToOneWithWhereWithoutUsersInput = {
  data: BusinessUpdateWithoutUsersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpdateWithWhereUniqueWithoutAddressesInput = {
  data: BusinessUpdateWithoutAddressesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpdateWithWhereUniqueWithoutCurrencyInput = {
  data: BusinessUpdateWithoutCurrencyInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpdateWithWhereUniqueWithoutImageInput = {
  data: BusinessUpdateWithoutImageInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpdateWithoutAddressesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutCurrencyInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutCustomersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutDaily_SalesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutDefault_LocationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutDefault_StoreInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutImageInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutLocationsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutModifiersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutPayment_MethodsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutProduct_CategoriesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutProduct_Stock_ItemsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutProduct_UnitsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutProductsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutRolesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutSale_AddonsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutSale_ChannelsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutSalesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutStoresInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutSuppliersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutTaxesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutBusinessNestedInput>;
};

export type BusinessUpdateWithoutUsersInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutBusinessesNestedInput>;
  appointment_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  contact_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currency?: InputMaybe<CurrencyUpdateOneRequiredWithoutBusinessesNestedInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutBusinessNestedInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutBusinessNestedInput>;
  default_location?: InputMaybe<LocationUpdateOneWithoutIs_DefaultNestedInput>;
  default_store?: InputMaybe<StoreUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutBusinessesNestedInput>;
  locations?: InputMaybe<LocationUpdateManyWithoutBusinessNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modifiers?: InputMaybe<ProductVariantUpdateManyWithoutBusinessNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  owner_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutBusinessNestedInput>;
  phone_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutBusinessNestedInput>;
  product_stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutBusinessNestedInput>;
  product_units?: InputMaybe<ProductUnitUpdateManyWithoutBusinessNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBusinessNestedInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutBusinessNestedInput>;
  sale_addons?: InputMaybe<SaleAddonUpdateManyWithoutBusinessNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutBusinessNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutBusinessNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutBusinessNestedInput>;
  suppliers?: InputMaybe<SupplierUpdateManyWithoutBusinessNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutBusinessNestedInput>;
  timezone?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type BusinessUpsertWithWhereUniqueWithoutAddressesInput = {
  create: BusinessCreateWithoutAddressesInput;
  update: BusinessUpdateWithoutAddressesInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpsertWithWhereUniqueWithoutCurrencyInput = {
  create: BusinessCreateWithoutCurrencyInput;
  update: BusinessUpdateWithoutCurrencyInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpsertWithWhereUniqueWithoutImageInput = {
  create: BusinessCreateWithoutImageInput;
  update: BusinessUpdateWithoutImageInput;
  where: BusinessWhereUniqueInput;
};

export type BusinessUpsertWithoutCustomersInput = {
  create: BusinessCreateWithoutCustomersInput;
  update: BusinessUpdateWithoutCustomersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutDaily_SalesInput = {
  create: BusinessCreateWithoutDaily_SalesInput;
  update: BusinessUpdateWithoutDaily_SalesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutDefault_LocationInput = {
  create: BusinessCreateWithoutDefault_LocationInput;
  update: BusinessUpdateWithoutDefault_LocationInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutDefault_StoreInput = {
  create: BusinessCreateWithoutDefault_StoreInput;
  update: BusinessUpdateWithoutDefault_StoreInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutLocationsInput = {
  create: BusinessCreateWithoutLocationsInput;
  update: BusinessUpdateWithoutLocationsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutModifiersInput = {
  create: BusinessCreateWithoutModifiersInput;
  update: BusinessUpdateWithoutModifiersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutPayment_MethodsInput = {
  create: BusinessCreateWithoutPayment_MethodsInput;
  update: BusinessUpdateWithoutPayment_MethodsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutProduct_CategoriesInput = {
  create: BusinessCreateWithoutProduct_CategoriesInput;
  update: BusinessUpdateWithoutProduct_CategoriesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutProduct_Stock_ItemsInput = {
  create: BusinessCreateWithoutProduct_Stock_ItemsInput;
  update: BusinessUpdateWithoutProduct_Stock_ItemsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutProduct_UnitsInput = {
  create: BusinessCreateWithoutProduct_UnitsInput;
  update: BusinessUpdateWithoutProduct_UnitsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutProductsInput = {
  create: BusinessCreateWithoutProductsInput;
  update: BusinessUpdateWithoutProductsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutRolesInput = {
  create: BusinessCreateWithoutRolesInput;
  update: BusinessUpdateWithoutRolesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutSale_AddonsInput = {
  create: BusinessCreateWithoutSale_AddonsInput;
  update: BusinessUpdateWithoutSale_AddonsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutSale_ChannelsInput = {
  create: BusinessCreateWithoutSale_ChannelsInput;
  update: BusinessUpdateWithoutSale_ChannelsInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutSalesInput = {
  create: BusinessCreateWithoutSalesInput;
  update: BusinessUpdateWithoutSalesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutStoresInput = {
  create: BusinessCreateWithoutStoresInput;
  update: BusinessUpdateWithoutStoresInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutSuppliersInput = {
  create: BusinessCreateWithoutSuppliersInput;
  update: BusinessUpdateWithoutSuppliersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutTaxesInput = {
  create: BusinessCreateWithoutTaxesInput;
  update: BusinessUpdateWithoutTaxesInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessUpsertWithoutUsersInput = {
  create: BusinessCreateWithoutUsersInput;
  update: BusinessUpdateWithoutUsersInput;
  where?: InputMaybe<BusinessWhereInput>;
};

export type BusinessWhereInput = {
  AND?: InputMaybe<Array<BusinessWhereInput>>;
  NOT?: InputMaybe<Array<BusinessWhereInput>>;
  OR?: InputMaybe<Array<BusinessWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  appointment_id?: InputMaybe<StringNullableFilter>;
  contact_info?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  currency?: InputMaybe<CurrencyRelationFilter>;
  currency_code?: InputMaybe<StringFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  daily_sales?: InputMaybe<DailySaleListRelationFilter>;
  default_location?: InputMaybe<LocationNullableRelationFilter>;
  default_location_id?: InputMaybe<StringNullableFilter>;
  default_store?: InputMaybe<StoreNullableRelationFilter>;
  default_store_id?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  locations?: InputMaybe<LocationListRelationFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  modifiers?: InputMaybe<ProductVariantListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  owner_id?: InputMaybe<StringFilter>;
  payment_methods?: InputMaybe<PaymentMethodListRelationFilter>;
  phone_number?: InputMaybe<StringNullableFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  product_stock_items?: InputMaybe<ProductStockItemListRelationFilter>;
  product_units?: InputMaybe<ProductUnitListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  roles?: InputMaybe<RoleListRelationFilter>;
  sale_addons?: InputMaybe<SaleAddonListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  suppliers?: InputMaybe<SupplierListRelationFilter>;
  taxes?: InputMaybe<TaxSettingListRelationFilter>;
  timezone?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type BusinessWhereUniqueInput = {
  AND?: InputMaybe<Array<BusinessWhereInput>>;
  NOT?: InputMaybe<Array<BusinessWhereInput>>;
  OR?: InputMaybe<Array<BusinessWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  appointment_id?: InputMaybe<StringNullableFilter>;
  contact_info?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  currency?: InputMaybe<CurrencyRelationFilter>;
  currency_code?: InputMaybe<StringFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  daily_sales?: InputMaybe<DailySaleListRelationFilter>;
  default_location?: InputMaybe<LocationNullableRelationFilter>;
  default_location_id?: InputMaybe<Scalars['String']['input']>;
  default_store?: InputMaybe<StoreNullableRelationFilter>;
  default_store_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  locations?: InputMaybe<LocationListRelationFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  modifiers?: InputMaybe<ProductVariantListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  owner_id?: InputMaybe<Scalars['String']['input']>;
  payment_methods?: InputMaybe<PaymentMethodListRelationFilter>;
  phone_number?: InputMaybe<StringNullableFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  product_stock_items?: InputMaybe<ProductStockItemListRelationFilter>;
  product_units?: InputMaybe<ProductUnitListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  roles?: InputMaybe<RoleListRelationFilter>;
  sale_addons?: InputMaybe<SaleAddonListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  suppliers?: InputMaybe<SupplierListRelationFilter>;
  taxes?: InputMaybe<TaxSettingListRelationFilter>;
  timezone?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type CompositeAdjustment = {
  __typename?: 'CompositeAdjustment';
  _count?: Maybe<CompositeAdjustmentCount>;
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_outgoing: Scalars['Boolean']['output'];
  items: Array<StockTransactionItem>;
  note?: Maybe<Scalars['String']['output']>;
  seq: Scalars['Int']['output'];
  store: Store;
  store_id: Scalars['String']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user: User;
  user_id: Scalars['String']['output'];
};


export type CompositeAdjustmentItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type CompositeAdjustmentAvgAggregate = {
  __typename?: 'CompositeAdjustmentAvgAggregate';
  seq?: Maybe<Scalars['Float']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type CompositeAdjustmentAvgOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentCount = {
  __typename?: 'CompositeAdjustmentCount';
  items: Scalars['Int']['output'];
};


export type CompositeAdjustmentCountItemsArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type CompositeAdjustmentCountAggregate = {
  __typename?: 'CompositeAdjustmentCountAggregate';
  _all: Scalars['Int']['output'];
  adjustment_type: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_outgoing: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  total_qty: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type CompositeAdjustmentCountOrderByAggregateInput = {
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentCreateInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutC_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutComposite_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutComposite_AdjustmentsInput;
};

export type CompositeAdjustmentCreateManyInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type CompositeAdjustmentCreateManyStoreInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type CompositeAdjustmentCreateManyStoreInputEnvelope = {
  data: Array<CompositeAdjustmentCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CompositeAdjustmentCreateManyUserInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeAdjustmentCreateManyUserInputEnvelope = {
  data: Array<CompositeAdjustmentCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CompositeAdjustmentCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeAdjustmentCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<CompositeAdjustmentCreateWithoutStoreInput>>;
  createMany?: InputMaybe<CompositeAdjustmentCreateManyStoreInputEnvelope>;
};

export type CompositeAdjustmentCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeAdjustmentCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<CompositeAdjustmentCreateWithoutUserInput>>;
  createMany?: InputMaybe<CompositeAdjustmentCreateManyUserInputEnvelope>;
};

export type CompositeAdjustmentCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CompositeAdjustmentCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<CompositeAdjustmentCreateWithoutItemsInput>;
};

export type CompositeAdjustmentCreateOrConnectWithoutItemsInput = {
  create: CompositeAdjustmentCreateWithoutItemsInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentCreateOrConnectWithoutStoreInput = {
  create: CompositeAdjustmentCreateWithoutStoreInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentCreateOrConnectWithoutUserInput = {
  create: CompositeAdjustmentCreateWithoutUserInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentCreateWithoutItemsInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutComposite_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutComposite_AdjustmentsInput;
};

export type CompositeAdjustmentCreateWithoutStoreInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutC_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutComposite_AdjustmentsInput;
};

export type CompositeAdjustmentCreateWithoutUserInput = {
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutC_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutComposite_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeAdjustmentGroupBy = {
  __typename?: 'CompositeAdjustmentGroupBy';
  _avg?: Maybe<CompositeAdjustmentAvgAggregate>;
  _count?: Maybe<CompositeAdjustmentCountAggregate>;
  _max?: Maybe<CompositeAdjustmentMaxAggregate>;
  _min?: Maybe<CompositeAdjustmentMinAggregate>;
  _sum?: Maybe<CompositeAdjustmentSumAggregate>;
  adjustment_type: CompositeAdjustmentType;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_outgoing: Scalars['Boolean']['output'];
  note?: Maybe<Scalars['String']['output']>;
  seq: Scalars['Int']['output'];
  store_id: Scalars['String']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id: Scalars['String']['output'];
};

export type CompositeAdjustmentListRelationFilter = {
  every?: InputMaybe<CompositeAdjustmentWhereInput>;
  none?: InputMaybe<CompositeAdjustmentWhereInput>;
  some?: InputMaybe<CompositeAdjustmentWhereInput>;
};

export type CompositeAdjustmentMaxAggregate = {
  __typename?: 'CompositeAdjustmentMaxAggregate';
  adjustment_type?: Maybe<CompositeAdjustmentType>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_outgoing?: Maybe<Scalars['Boolean']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type CompositeAdjustmentMaxOrderByAggregateInput = {
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentMinAggregate = {
  __typename?: 'CompositeAdjustmentMinAggregate';
  adjustment_type?: Maybe<CompositeAdjustmentType>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_outgoing?: Maybe<Scalars['Boolean']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type CompositeAdjustmentMinOrderByAggregateInput = {
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentNullableRelationFilter = {
  is?: InputMaybe<CompositeAdjustmentWhereInput>;
  isNot?: InputMaybe<CompositeAdjustmentWhereInput>;
};

export type CompositeAdjustmentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentOrderByWithAggregationInput = {
  _avg?: InputMaybe<CompositeAdjustmentAvgOrderByAggregateInput>;
  _count?: InputMaybe<CompositeAdjustmentCountOrderByAggregateInput>;
  _max?: InputMaybe<CompositeAdjustmentMaxOrderByAggregateInput>;
  _min?: InputMaybe<CompositeAdjustmentMinOrderByAggregateInput>;
  _sum?: InputMaybe<CompositeAdjustmentSumOrderByAggregateInput>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user_id?: InputMaybe<SortOrder>;
};

export type CompositeAdjustmentOrderByWithRelationInput = {
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  items?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  note?: InputMaybe<SortOrderInput>;
  seq?: InputMaybe<SortOrder>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  user_id?: InputMaybe<SortOrder>;
};

export enum CompositeAdjustmentScalarFieldEnum {
  AdjustmentType = 'adjustment_type',
  BusinessId = 'business_id',
  Code = 'code',
  CreatedAt = 'created_at',
  Id = 'id',
  IsOutgoing = 'is_outgoing',
  Note = 'note',
  Seq = 'seq',
  StoreId = 'store_id',
  TotalQty = 'total_qty',
  UpdatedAt = 'updated_at',
  UserId = 'user_id'
}

export type CompositeAdjustmentScalarWhereInput = {
  AND?: InputMaybe<Array<CompositeAdjustmentScalarWhereInput>>;
  NOT?: InputMaybe<Array<CompositeAdjustmentScalarWhereInput>>;
  OR?: InputMaybe<Array<CompositeAdjustmentScalarWhereInput>>;
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_outgoing?: InputMaybe<BoolFilter>;
  note?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type CompositeAdjustmentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CompositeAdjustmentScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CompositeAdjustmentScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CompositeAdjustmentScalarWhereWithAggregatesInput>>;
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_outgoing?: InputMaybe<BoolWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  total_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringWithAggregatesFilter>;
};

export type CompositeAdjustmentSumAggregate = {
  __typename?: 'CompositeAdjustmentSumAggregate';
  seq?: Maybe<Scalars['Int']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type CompositeAdjustmentSumOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export enum CompositeAdjustmentType {
  Assembly = 'ASSEMBLY',
  Breakdown = 'BREAKDOWN'
}

export type CompositeAdjustmentUpdateInput = {
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutC_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
};

export type CompositeAdjustmentUpdateManyMutationInput = {
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeAdjustmentUpdateManyWithWhereWithoutStoreInput = {
  data: CompositeAdjustmentUpdateManyMutationInput;
  where: CompositeAdjustmentScalarWhereInput;
};

export type CompositeAdjustmentUpdateManyWithWhereWithoutUserInput = {
  data: CompositeAdjustmentUpdateManyMutationInput;
  where: CompositeAdjustmentScalarWhereInput;
};

export type CompositeAdjustmentUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeAdjustmentCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<CompositeAdjustmentCreateWithoutStoreInput>>;
  createMany?: InputMaybe<CompositeAdjustmentCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CompositeAdjustmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  set?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  update?: InputMaybe<Array<CompositeAdjustmentUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<CompositeAdjustmentUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<CompositeAdjustmentUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type CompositeAdjustmentUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeAdjustmentCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<CompositeAdjustmentCreateWithoutUserInput>>;
  createMany?: InputMaybe<CompositeAdjustmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CompositeAdjustmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  set?: InputMaybe<Array<CompositeAdjustmentWhereUniqueInput>>;
  update?: InputMaybe<Array<CompositeAdjustmentUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<CompositeAdjustmentUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<CompositeAdjustmentUpsertWithWhereUniqueWithoutUserInput>>;
};

export type CompositeAdjustmentUpdateOneWithoutItemsNestedInput = {
  connect?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CompositeAdjustmentCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<CompositeAdjustmentCreateWithoutItemsInput>;
  delete?: InputMaybe<CompositeAdjustmentWhereInput>;
  disconnect?: InputMaybe<CompositeAdjustmentWhereInput>;
  update?: InputMaybe<CompositeAdjustmentUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<CompositeAdjustmentUpsertWithoutItemsInput>;
};

export type CompositeAdjustmentUpdateToOneWithWhereWithoutItemsInput = {
  data: CompositeAdjustmentUpdateWithoutItemsInput;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};

export type CompositeAdjustmentUpdateWithWhereUniqueWithoutStoreInput = {
  data: CompositeAdjustmentUpdateWithoutStoreInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentUpdateWithWhereUniqueWithoutUserInput = {
  data: CompositeAdjustmentUpdateWithoutUserInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentUpdateWithoutItemsInput = {
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
};

export type CompositeAdjustmentUpdateWithoutStoreInput = {
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutC_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
};

export type CompositeAdjustmentUpdateWithoutUserInput = {
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutC_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeAdjustmentUpsertWithWhereUniqueWithoutStoreInput = {
  create: CompositeAdjustmentCreateWithoutStoreInput;
  update: CompositeAdjustmentUpdateWithoutStoreInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentUpsertWithWhereUniqueWithoutUserInput = {
  create: CompositeAdjustmentCreateWithoutUserInput;
  update: CompositeAdjustmentUpdateWithoutUserInput;
  where: CompositeAdjustmentWhereUniqueInput;
};

export type CompositeAdjustmentUpsertWithoutItemsInput = {
  create: CompositeAdjustmentCreateWithoutItemsInput;
  update: CompositeAdjustmentUpdateWithoutItemsInput;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};

export type CompositeAdjustmentWhereInput = {
  AND?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  NOT?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  OR?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_outgoing?: InputMaybe<BoolFilter>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type CompositeAdjustmentWhereUniqueInput = {
  AND?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  NOT?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  OR?: InputMaybe<Array<CompositeAdjustmentWhereInput>>;
  adjustment_type?: InputMaybe<EnumCompositeAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_outgoing?: InputMaybe<BoolFilter>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type CompositeItem = {
  __typename?: 'CompositeItem';
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  product: Product;
  product_id: Scalars['String']['output'];
  product_stock_item: ProductStockItem;
  product_stock_item_id: Scalars['String']['output'];
  qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CompositeItemAvgAggregate = {
  __typename?: 'CompositeItemAvgAggregate';
  qty?: Maybe<Scalars['Decimal']['output']>;
};

export type CompositeItemAvgOrderByAggregateInput = {
  qty?: InputMaybe<SortOrder>;
};

export type CompositeItemCountAggregate = {
  __typename?: 'CompositeItemCountAggregate';
  _all: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  product_id: Scalars['Int']['output'];
  product_stock_item_id: Scalars['Int']['output'];
  qty: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type CompositeItemCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CompositeItemCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product: ProductCreateNestedOneWithoutCompositesInput;
  product_stock_item: ProductStockItemCreateNestedOneWithoutComposite_ItemsInput;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product_id: Scalars['String']['input'];
  product_stock_item_id: Scalars['String']['input'];
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemCreateManyProductInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product_stock_item_id: Scalars['String']['input'];
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemCreateManyProductInputEnvelope = {
  data: Array<CompositeItemCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CompositeItemCreateManyProduct_Stock_ItemInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product_id: Scalars['String']['input'];
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemCreateManyProduct_Stock_ItemInputEnvelope = {
  data: Array<CompositeItemCreateManyProduct_Stock_ItemInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CompositeItemCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeItemCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<CompositeItemCreateWithoutProductInput>>;
  createMany?: InputMaybe<CompositeItemCreateManyProductInputEnvelope>;
};

export type CompositeItemCreateNestedManyWithoutProduct_Stock_ItemInput = {
  connect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeItemCreateOrConnectWithoutProduct_Stock_ItemInput>>;
  create?: InputMaybe<Array<CompositeItemCreateWithoutProduct_Stock_ItemInput>>;
  createMany?: InputMaybe<CompositeItemCreateManyProduct_Stock_ItemInputEnvelope>;
};

export type CompositeItemCreateOrConnectWithoutProductInput = {
  create: CompositeItemCreateWithoutProductInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemCreateOrConnectWithoutProduct_Stock_ItemInput = {
  create: CompositeItemCreateWithoutProduct_Stock_ItemInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemCreateWithoutProductInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product_stock_item: ProductStockItemCreateNestedOneWithoutComposite_ItemsInput;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemCreateWithoutProduct_Stock_ItemInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  product: ProductCreateNestedOneWithoutCompositesInput;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CompositeItemGroupBy = {
  __typename?: 'CompositeItemGroupBy';
  _avg?: Maybe<CompositeItemAvgAggregate>;
  _count?: Maybe<CompositeItemCountAggregate>;
  _max?: Maybe<CompositeItemMaxAggregate>;
  _min?: Maybe<CompositeItemMinAggregate>;
  _sum?: Maybe<CompositeItemSumAggregate>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  product_id: Scalars['String']['output'];
  product_stock_item_id: Scalars['String']['output'];
  qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CompositeItemListRelationFilter = {
  every?: InputMaybe<CompositeItemWhereInput>;
  none?: InputMaybe<CompositeItemWhereInput>;
  some?: InputMaybe<CompositeItemWhereInput>;
};

export type CompositeItemMaxAggregate = {
  __typename?: 'CompositeItemMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CompositeItemMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CompositeItemMinAggregate = {
  __typename?: 'CompositeItemMinAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CompositeItemMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CompositeItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CompositeItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<CompositeItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<CompositeItemCountOrderByAggregateInput>;
  _max?: InputMaybe<CompositeItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<CompositeItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<CompositeItemSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type CompositeItemOrderByWithRelationInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item?: InputMaybe<ProductStockItemOrderByWithRelationInput>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type CompositeItemProduct_IdProduct_Stock_Item_IdCompoundUniqueInput = {
  product_id: Scalars['String']['input'];
  product_stock_item_id: Scalars['String']['input'];
};

export enum CompositeItemScalarFieldEnum {
  CreatedAt = 'created_at',
  Id = 'id',
  ProductId = 'product_id',
  ProductStockItemId = 'product_stock_item_id',
  Qty = 'qty',
  UpdatedAt = 'updated_at'
}

export type CompositeItemScalarWhereInput = {
  AND?: InputMaybe<Array<CompositeItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<CompositeItemScalarWhereInput>>;
  OR?: InputMaybe<Array<CompositeItemScalarWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_stock_item_id?: InputMaybe<StringFilter>;
  qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type CompositeItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CompositeItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CompositeItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CompositeItemScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  product_id?: InputMaybe<StringWithAggregatesFilter>;
  product_stock_item_id?: InputMaybe<StringWithAggregatesFilter>;
  qty?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type CompositeItemSumAggregate = {
  __typename?: 'CompositeItemSumAggregate';
  qty?: Maybe<Scalars['Decimal']['output']>;
};

export type CompositeItemSumOrderByAggregateInput = {
  qty?: InputMaybe<SortOrder>;
};

export type CompositeItemUpdateInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutCompositesNestedInput>;
  product_stock_item?: InputMaybe<ProductStockItemUpdateOneRequiredWithoutComposite_ItemsNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeItemUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeItemUpdateManyWithWhereWithoutProductInput = {
  data: CompositeItemUpdateManyMutationInput;
  where: CompositeItemScalarWhereInput;
};

export type CompositeItemUpdateManyWithWhereWithoutProduct_Stock_ItemInput = {
  data: CompositeItemUpdateManyMutationInput;
  where: CompositeItemScalarWhereInput;
};

export type CompositeItemUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeItemCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<CompositeItemCreateWithoutProductInput>>;
  createMany?: InputMaybe<CompositeItemCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CompositeItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  set?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  update?: InputMaybe<Array<CompositeItemUpdateWithWhereUniqueWithoutProductInput>>;
  updateMany?: InputMaybe<Array<CompositeItemUpdateManyWithWhereWithoutProductInput>>;
  upsert?: InputMaybe<Array<CompositeItemUpsertWithWhereUniqueWithoutProductInput>>;
};

export type CompositeItemUpdateManyWithoutProduct_Stock_ItemNestedInput = {
  connect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CompositeItemCreateOrConnectWithoutProduct_Stock_ItemInput>>;
  create?: InputMaybe<Array<CompositeItemCreateWithoutProduct_Stock_ItemInput>>;
  createMany?: InputMaybe<CompositeItemCreateManyProduct_Stock_ItemInputEnvelope>;
  delete?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CompositeItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  set?: InputMaybe<Array<CompositeItemWhereUniqueInput>>;
  update?: InputMaybe<Array<CompositeItemUpdateWithWhereUniqueWithoutProduct_Stock_ItemInput>>;
  updateMany?: InputMaybe<Array<CompositeItemUpdateManyWithWhereWithoutProduct_Stock_ItemInput>>;
  upsert?: InputMaybe<Array<CompositeItemUpsertWithWhereUniqueWithoutProduct_Stock_ItemInput>>;
};

export type CompositeItemUpdateWithWhereUniqueWithoutProductInput = {
  data: CompositeItemUpdateWithoutProductInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemUpdateWithWhereUniqueWithoutProduct_Stock_ItemInput = {
  data: CompositeItemUpdateWithoutProduct_Stock_ItemInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemUpdateWithoutProductInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_stock_item?: InputMaybe<ProductStockItemUpdateOneRequiredWithoutComposite_ItemsNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeItemUpdateWithoutProduct_Stock_ItemInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutCompositesNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CompositeItemUpsertWithWhereUniqueWithoutProductInput = {
  create: CompositeItemCreateWithoutProductInput;
  update: CompositeItemUpdateWithoutProductInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemUpsertWithWhereUniqueWithoutProduct_Stock_ItemInput = {
  create: CompositeItemCreateWithoutProduct_Stock_ItemInput;
  update: CompositeItemUpdateWithoutProduct_Stock_ItemInput;
  where: CompositeItemWhereUniqueInput;
};

export type CompositeItemWhereInput = {
  AND?: InputMaybe<Array<CompositeItemWhereInput>>;
  NOT?: InputMaybe<Array<CompositeItemWhereInput>>;
  OR?: InputMaybe<Array<CompositeItemWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_stock_item?: InputMaybe<ProductStockItemRelationFilter>;
  product_stock_item_id?: InputMaybe<StringFilter>;
  qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type CompositeItemWhereUniqueInput = {
  AND?: InputMaybe<Array<CompositeItemWhereInput>>;
  NOT?: InputMaybe<Array<CompositeItemWhereInput>>;
  OR?: InputMaybe<Array<CompositeItemWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_id_product_stock_item_id?: InputMaybe<CompositeItemProduct_IdProduct_Stock_Item_IdCompoundUniqueInput>;
  product_stock_item?: InputMaybe<ProductStockItemRelationFilter>;
  product_stock_item_id?: InputMaybe<StringFilter>;
  qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type Currency = {
  __typename?: 'Currency';
  _count?: Maybe<CurrencyCount>;
  active: Scalars['Boolean']['output'];
  businesses: Array<Business>;
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  exchange_rate: Scalars['Decimal']['output'];
  name: Scalars['String']['output'];
  symbol: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type CurrencyBusinessesArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};

export type CurrencyAvgAggregate = {
  __typename?: 'CurrencyAvgAggregate';
  exchange_rate?: Maybe<Scalars['Decimal']['output']>;
};

export type CurrencyAvgOrderByAggregateInput = {
  exchange_rate?: InputMaybe<SortOrder>;
};

export type CurrencyCount = {
  __typename?: 'CurrencyCount';
  businesses: Scalars['Int']['output'];
};


export type CurrencyCountBusinessesArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};

export type CurrencyCountAggregate = {
  __typename?: 'CurrencyCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  exchange_rate: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  symbol: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type CurrencyCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  exchange_rate?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CurrencyCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutCurrencyInput>;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  exchange_rate?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  symbol: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CurrencyCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  exchange_rate?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  symbol: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CurrencyCreateNestedOneWithoutBusinessesInput = {
  connect?: InputMaybe<CurrencyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CurrencyCreateOrConnectWithoutBusinessesInput>;
  create?: InputMaybe<CurrencyCreateWithoutBusinessesInput>;
};

export type CurrencyCreateOrConnectWithoutBusinessesInput = {
  create: CurrencyCreateWithoutBusinessesInput;
  where: CurrencyWhereUniqueInput;
};

export type CurrencyCreateWithoutBusinessesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  exchange_rate?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  symbol: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CurrencyGroupBy = {
  __typename?: 'CurrencyGroupBy';
  _avg?: Maybe<CurrencyAvgAggregate>;
  _count?: Maybe<CurrencyCountAggregate>;
  _max?: Maybe<CurrencyMaxAggregate>;
  _min?: Maybe<CurrencyMinAggregate>;
  _sum?: Maybe<CurrencySumAggregate>;
  active: Scalars['Boolean']['output'];
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  exchange_rate: Scalars['Decimal']['output'];
  name: Scalars['String']['output'];
  symbol: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CurrencyMaxAggregate = {
  __typename?: 'CurrencyMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  exchange_rate?: Maybe<Scalars['Decimal']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  symbol?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CurrencyMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  exchange_rate?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CurrencyMinAggregate = {
  __typename?: 'CurrencyMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  exchange_rate?: Maybe<Scalars['Decimal']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  symbol?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type CurrencyMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  exchange_rate?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type CurrencyOrderByWithAggregationInput = {
  _avg?: InputMaybe<CurrencyAvgOrderByAggregateInput>;
  _count?: InputMaybe<CurrencyCountOrderByAggregateInput>;
  _max?: InputMaybe<CurrencyMaxOrderByAggregateInput>;
  _min?: InputMaybe<CurrencyMinOrderByAggregateInput>;
  _sum?: InputMaybe<CurrencySumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  exchange_rate?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type CurrencyOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  businesses?: InputMaybe<BusinessOrderByRelationAggregateInput>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  exchange_rate?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  symbol?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type CurrencyRelationFilter = {
  is?: InputMaybe<CurrencyWhereInput>;
  isNot?: InputMaybe<CurrencyWhereInput>;
};

export enum CurrencyScalarFieldEnum {
  Active = 'active',
  Code = 'code',
  CreatedAt = 'created_at',
  ExchangeRate = 'exchange_rate',
  Name = 'name',
  Symbol = 'symbol',
  UpdatedAt = 'updated_at'
}

export type CurrencyScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CurrencyScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CurrencyScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CurrencyScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  code?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  exchange_rate?: InputMaybe<DecimalWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  symbol?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type CurrencySumAggregate = {
  __typename?: 'CurrencySumAggregate';
  exchange_rate?: Maybe<Scalars['Decimal']['output']>;
};

export type CurrencySumOrderByAggregateInput = {
  exchange_rate?: InputMaybe<SortOrder>;
};

export type CurrencyUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  businesses?: InputMaybe<BusinessUpdateManyWithoutCurrencyNestedInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  exchange_rate?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  symbol?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CurrencyUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  exchange_rate?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  symbol?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CurrencyUpdateOneRequiredWithoutBusinessesNestedInput = {
  connect?: InputMaybe<CurrencyWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CurrencyCreateOrConnectWithoutBusinessesInput>;
  create?: InputMaybe<CurrencyCreateWithoutBusinessesInput>;
  update?: InputMaybe<CurrencyUpdateToOneWithWhereWithoutBusinessesInput>;
  upsert?: InputMaybe<CurrencyUpsertWithoutBusinessesInput>;
};

export type CurrencyUpdateToOneWithWhereWithoutBusinessesInput = {
  data: CurrencyUpdateWithoutBusinessesInput;
  where?: InputMaybe<CurrencyWhereInput>;
};

export type CurrencyUpdateWithoutBusinessesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  exchange_rate?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  symbol?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CurrencyUpsertWithoutBusinessesInput = {
  create: CurrencyCreateWithoutBusinessesInput;
  update: CurrencyUpdateWithoutBusinessesInput;
  where?: InputMaybe<CurrencyWhereInput>;
};

export type CurrencyWhereInput = {
  AND?: InputMaybe<Array<CurrencyWhereInput>>;
  NOT?: InputMaybe<Array<CurrencyWhereInput>>;
  OR?: InputMaybe<Array<CurrencyWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  exchange_rate?: InputMaybe<DecimalFilter>;
  name?: InputMaybe<StringFilter>;
  symbol?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type CurrencyWhereUniqueInput = {
  AND?: InputMaybe<Array<CurrencyWhereInput>>;
  NOT?: InputMaybe<Array<CurrencyWhereInput>>;
  OR?: InputMaybe<Array<CurrencyWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<DateTimeFilter>;
  exchange_rate?: InputMaybe<DecimalFilter>;
  name?: InputMaybe<StringFilter>;
  symbol?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type Customer = {
  __typename?: 'Customer';
  _count?: Maybe<CustomerCount>;
  active: Scalars['Boolean']['output'];
  addresses: Array<Address>;
  business: Business;
  business_id: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  default_address?: Maybe<Address>;
  default_address_id?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  identifier: Scalars['String']['output'];
  image?: Maybe<Image>;
  image_id?: Maybe<Scalars['String']['output']>;
  loyalty_point: Scalars['Decimal']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  sales: Array<Sale>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};


export type CustomerAddressesArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type CustomerDefault_AddressArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type CustomerImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type CustomerSalesArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};

export type CustomerAvgAggregate = {
  __typename?: 'CustomerAvgAggregate';
  loyalty_point?: Maybe<Scalars['Decimal']['output']>;
};

export type CustomerAvgOrderByAggregateInput = {
  loyalty_point?: InputMaybe<SortOrder>;
};

export type CustomerCount = {
  __typename?: 'CustomerCount';
  addresses: Scalars['Int']['output'];
  sales: Scalars['Int']['output'];
};


export type CustomerCountAddressesArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type CustomerCountSalesArgs = {
  where?: InputMaybe<SaleWhereInput>;
};

export type CustomerCountAggregate = {
  __typename?: 'CustomerCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  createdAt: Scalars['Int']['output'];
  default_address_id: Scalars['Int']['output'];
  email: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  identifier: Scalars['Int']['output'];
  image_id: Scalars['Int']['output'];
  loyalty_point: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  phone: Scalars['Int']['output'];
  updatedAt: Scalars['Int']['output'];
};

export type CustomerCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  default_address_id?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  loyalty_point?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type CustomerCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutCustomersInput>;
  business: BusinessCreateNestedOneWithoutCustomersInput;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address?: InputMaybe<AddressCreateNestedOneWithoutDefault_CustomerInput>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image?: InputMaybe<ImageCreateNestedOneWithoutCustomersInput>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address_id?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image_id?: InputMaybe<Scalars['String']['input']>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateManyBusinessInputEnvelope = {
  data: Array<CustomerCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CustomerCreateManyImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address_id?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateManyImageInputEnvelope = {
  data: Array<CustomerCreateManyImageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CustomerCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address_id?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image_id?: InputMaybe<Scalars['String']['input']>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateNestedManyWithoutAddressesInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutAddressesInput>>;
};

export type CustomerCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<CustomerCreateManyBusinessInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutImageInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutImageInput>>;
  createMany?: InputMaybe<CustomerCreateManyImageInputEnvelope>;
};

export type CustomerCreateNestedOneWithoutDefault_AddressInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutDefault_AddressInput>;
  create?: InputMaybe<CustomerCreateWithoutDefault_AddressInput>;
};

export type CustomerCreateNestedOneWithoutSalesInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<CustomerCreateWithoutSalesInput>;
};

export type CustomerCreateOrConnectWithoutAddressesInput = {
  create: CustomerCreateWithoutAddressesInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutBusinessInput = {
  create: CustomerCreateWithoutBusinessInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutDefault_AddressInput = {
  create: CustomerCreateWithoutDefault_AddressInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutImageInput = {
  create: CustomerCreateWithoutImageInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateOrConnectWithoutSalesInput = {
  create: CustomerCreateWithoutSalesInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerCreateWithoutAddressesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutCustomersInput;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address?: InputMaybe<AddressCreateNestedOneWithoutDefault_CustomerInput>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image?: InputMaybe<ImageCreateNestedOneWithoutCustomersInput>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutCustomersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address?: InputMaybe<AddressCreateNestedOneWithoutDefault_CustomerInput>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image?: InputMaybe<ImageCreateNestedOneWithoutCustomersInput>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateWithoutDefault_AddressInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutCustomersInput>;
  business: BusinessCreateNestedOneWithoutCustomersInput;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image?: InputMaybe<ImageCreateNestedOneWithoutCustomersInput>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateWithoutImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutCustomersInput>;
  business: BusinessCreateNestedOneWithoutCustomersInput;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address?: InputMaybe<AddressCreateNestedOneWithoutDefault_CustomerInput>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerCreateWithoutSalesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutCustomersInput>;
  business: BusinessCreateNestedOneWithoutCustomersInput;
  createdAt?: InputMaybe<Scalars['DateTime']['input']>;
  default_address?: InputMaybe<AddressCreateNestedOneWithoutDefault_CustomerInput>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier: Scalars['String']['input'];
  image?: InputMaybe<ImageCreateNestedOneWithoutCustomersInput>;
  loyalty_point?: InputMaybe<Scalars['Decimal']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  updatedAt?: InputMaybe<Scalars['DateTime']['input']>;
};

export type CustomerGroupBy = {
  __typename?: 'CustomerGroupBy';
  _avg?: Maybe<CustomerAvgAggregate>;
  _count?: Maybe<CustomerCountAggregate>;
  _max?: Maybe<CustomerMaxAggregate>;
  _min?: Maybe<CustomerMinAggregate>;
  _sum?: Maybe<CustomerSumAggregate>;
  active: Scalars['Boolean']['output'];
  business_id: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  default_address_id?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  identifier: Scalars['String']['output'];
  image_id?: Maybe<Scalars['String']['output']>;
  loyalty_point: Scalars['Decimal']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type CustomerIdentifierBusiness_IdCompoundUniqueInput = {
  business_id: Scalars['String']['input'];
  identifier: Scalars['String']['input'];
};

export type CustomerListRelationFilter = {
  every?: InputMaybe<CustomerWhereInput>;
  none?: InputMaybe<CustomerWhereInput>;
  some?: InputMaybe<CustomerWhereInput>;
};

export type CustomerMaxAggregate = {
  __typename?: 'CustomerMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  default_address_id?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  loyalty_point?: Maybe<Scalars['Decimal']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type CustomerMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  default_address_id?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  loyalty_point?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type CustomerMinAggregate = {
  __typename?: 'CustomerMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  default_address_id?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  loyalty_point?: Maybe<Scalars['Decimal']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type CustomerMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  default_address_id?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  loyalty_point?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type CustomerNullableRelationFilter = {
  is?: InputMaybe<CustomerWhereInput>;
  isNot?: InputMaybe<CustomerWhereInput>;
};

export type CustomerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerOrderByWithAggregationInput = {
  _avg?: InputMaybe<CustomerAvgOrderByAggregateInput>;
  _count?: InputMaybe<CustomerCountOrderByAggregateInput>;
  _max?: InputMaybe<CustomerMaxOrderByAggregateInput>;
  _min?: InputMaybe<CustomerMinOrderByAggregateInput>;
  _sum?: InputMaybe<CustomerSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  default_address_id?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrderInput>;
  loyalty_point?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrderInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export type CustomerOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  addresses?: InputMaybe<AddressOrderByRelationAggregateInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  default_address?: InputMaybe<AddressOrderByWithRelationInput>;
  default_address_id?: InputMaybe<SortOrderInput>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  image?: InputMaybe<ImageOrderByWithRelationInput>;
  image_id?: InputMaybe<SortOrderInput>;
  loyalty_point?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrderInput>;
  sales?: InputMaybe<SaleOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrderInput>;
};

export enum CustomerScalarFieldEnum {
  Active = 'active',
  BusinessId = 'business_id',
  CreatedAt = 'createdAt',
  DefaultAddressId = 'default_address_id',
  Email = 'email',
  Id = 'id',
  Identifier = 'identifier',
  ImageId = 'image_id',
  LoyaltyPoint = 'loyalty_point',
  Metadata = 'metadata',
  Name = 'name',
  Phone = 'phone',
  UpdatedAt = 'updatedAt'
}

export type CustomerScalarWhereInput = {
  AND?: InputMaybe<Array<CustomerScalarWhereInput>>;
  NOT?: InputMaybe<Array<CustomerScalarWhereInput>>;
  OR?: InputMaybe<Array<CustomerScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  default_address_id?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  identifier?: InputMaybe<StringFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  loyalty_point?: InputMaybe<DecimalFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type CustomerScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<CustomerScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<CustomerScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<CustomerScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  default_address_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  identifier?: InputMaybe<StringWithAggregatesFilter>;
  image_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  loyalty_point?: InputMaybe<DecimalWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type CustomerSumAggregate = {
  __typename?: 'CustomerSumAggregate';
  loyalty_point?: Maybe<Scalars['Decimal']['output']>;
};

export type CustomerSumOrderByAggregateInput = {
  loyalty_point?: InputMaybe<SortOrder>;
};

export type CustomerUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutCustomersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_address?: InputMaybe<AddressUpdateOneWithoutDefault_CustomerNestedInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutCustomersNestedInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateManyWithWhereWithoutAddressesInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutBusinessInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithWhereWithoutImageInput = {
  data: CustomerUpdateManyMutationInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpdateManyWithoutAddressesNestedInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutAddressesInput>>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<Array<CustomerUpdateWithWhereUniqueWithoutAddressesInput>>;
  updateMany?: InputMaybe<Array<CustomerUpdateManyWithWhereWithoutAddressesInput>>;
  upsert?: InputMaybe<Array<CustomerUpsertWithWhereUniqueWithoutAddressesInput>>;
};

export type CustomerUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<CustomerCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<Array<CustomerUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<CustomerUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<CustomerUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type CustomerUpdateManyWithoutImageNestedInput = {
  connect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<CustomerCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<CustomerCreateWithoutImageInput>>;
  createMany?: InputMaybe<CustomerCreateManyImageInputEnvelope>;
  delete?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<CustomerScalarWhereInput>>;
  disconnect?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  set?: InputMaybe<Array<CustomerWhereUniqueInput>>;
  update?: InputMaybe<Array<CustomerUpdateWithWhereUniqueWithoutImageInput>>;
  updateMany?: InputMaybe<Array<CustomerUpdateManyWithWhereWithoutImageInput>>;
  upsert?: InputMaybe<Array<CustomerUpsertWithWhereUniqueWithoutImageInput>>;
};

export type CustomerUpdateOneWithoutDefault_AddressNestedInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutDefault_AddressInput>;
  create?: InputMaybe<CustomerCreateWithoutDefault_AddressInput>;
  delete?: InputMaybe<CustomerWhereInput>;
  disconnect?: InputMaybe<CustomerWhereInput>;
  update?: InputMaybe<CustomerUpdateToOneWithWhereWithoutDefault_AddressInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutDefault_AddressInput>;
};

export type CustomerUpdateOneWithoutSalesNestedInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<CustomerCreateWithoutSalesInput>;
  delete?: InputMaybe<CustomerWhereInput>;
  disconnect?: InputMaybe<CustomerWhereInput>;
  update?: InputMaybe<CustomerUpdateToOneWithWhereWithoutSalesInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutSalesInput>;
};

export type CustomerUpdateToOneWithWhereWithoutDefault_AddressInput = {
  data: CustomerUpdateWithoutDefault_AddressInput;
  where?: InputMaybe<CustomerWhereInput>;
};

export type CustomerUpdateToOneWithWhereWithoutSalesInput = {
  data: CustomerUpdateWithoutSalesInput;
  where?: InputMaybe<CustomerWhereInput>;
};

export type CustomerUpdateWithWhereUniqueWithoutAddressesInput = {
  data: CustomerUpdateWithoutAddressesInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutBusinessInput = {
  data: CustomerUpdateWithoutBusinessInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithWhereUniqueWithoutImageInput = {
  data: CustomerUpdateWithoutImageInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpdateWithoutAddressesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_address?: InputMaybe<AddressUpdateOneWithoutDefault_CustomerNestedInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutCustomersNestedInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_address?: InputMaybe<AddressUpdateOneWithoutDefault_CustomerNestedInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutCustomersNestedInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutDefault_AddressInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutCustomersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutCustomersNestedInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutImageInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutCustomersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_address?: InputMaybe<AddressUpdateOneWithoutDefault_CustomerNestedInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutCustomerNestedInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutSalesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutCustomersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutCustomersNestedInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_address?: InputMaybe<AddressUpdateOneWithoutDefault_CustomerNestedInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutCustomersNestedInput>;
  loyalty_point?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithWhereUniqueWithoutAddressesInput = {
  create: CustomerCreateWithoutAddressesInput;
  update: CustomerUpdateWithoutAddressesInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutBusinessInput = {
  create: CustomerCreateWithoutBusinessInput;
  update: CustomerUpdateWithoutBusinessInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithWhereUniqueWithoutImageInput = {
  create: CustomerCreateWithoutImageInput;
  update: CustomerUpdateWithoutImageInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUpsertWithoutDefault_AddressInput = {
  create: CustomerCreateWithoutDefault_AddressInput;
  update: CustomerUpdateWithoutDefault_AddressInput;
  where?: InputMaybe<CustomerWhereInput>;
};

export type CustomerUpsertWithoutSalesInput = {
  create: CustomerCreateWithoutSalesInput;
  update: CustomerUpdateWithoutSalesInput;
  where?: InputMaybe<CustomerWhereInput>;
};

export type CustomerWhereInput = {
  AND?: InputMaybe<Array<CustomerWhereInput>>;
  NOT?: InputMaybe<Array<CustomerWhereInput>>;
  OR?: InputMaybe<Array<CustomerWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  default_address?: InputMaybe<AddressNullableRelationFilter>;
  default_address_id?: InputMaybe<StringNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  identifier?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  loyalty_point?: InputMaybe<DecimalFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type CustomerWhereUniqueInput = {
  AND?: InputMaybe<Array<CustomerWhereInput>>;
  NOT?: InputMaybe<Array<CustomerWhereInput>>;
  OR?: InputMaybe<Array<CustomerWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  default_address?: InputMaybe<AddressNullableRelationFilter>;
  default_address_id?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  identifier?: InputMaybe<StringFilter>;
  identifier_business_id?: InputMaybe<CustomerIdentifierBusiness_IdCompoundUniqueInput>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  loyalty_point?: InputMaybe<DecimalFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySale = {
  __typename?: 'DailySale';
  Business?: Maybe<Business>;
  _count?: Maybe<DailySaleCount>;
  addons: Array<DailySaleAddonItem>;
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  details: Array<DailySaleDetail>;
  gross_sale: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  items: Array<DailySaleItem>;
  net_sale: Scalars['Decimal']['output'];
  received_amount: Scalars['Decimal']['output'];
  refund_amount: Scalars['Decimal']['output'];
  sale_date: Scalars['DateTime']['output'];
  shipping_amount: Scalars['Decimal']['output'];
  store: Store;
  store_id: Scalars['String']['output'];
  total_customers: Scalars['Int']['output'];
  total_discount: Scalars['Decimal']['output'];
  total_sale: Scalars['Decimal']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type DailySaleBusinessArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type DailySaleAddonsArgs = {
  cursor?: InputMaybe<DailySaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type DailySaleDetailsArgs = {
  cursor?: InputMaybe<DailySaleDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type DailySaleItemsArgs = {
  cursor?: InputMaybe<DailySaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};

export type DailySaleAddonItem = {
  __typename?: 'DailySaleAddonItem';
  applicable_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale: DailySale;
  daily_sale_id: Scalars['String']['output'];
  item_id: Scalars['String']['output'];
  item_name: Scalars['String']['output'];
  item_type: SaleAddonType;
  quantity: Scalars['Int']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleAddonItemAvgAggregate = {
  __typename?: 'DailySaleAddonItemAvgAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleAddonItemAvgOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemCountAggregate = {
  __typename?: 'DailySaleAddonItemCountAggregate';
  _all: Scalars['Int']['output'];
  applicable_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  daily_sale_id: Scalars['Int']['output'];
  item_id: Scalars['Int']['output'];
  item_name: Scalars['Int']['output'];
  item_type: Scalars['Int']['output'];
  quantity: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type DailySaleAddonItemCountOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemCreateInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale: DailySaleCreateNestedOneWithoutAddonsInput;
  item_id: Scalars['String']['input'];
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleAddonItemCreateManyDaily_SaleInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  item_id: Scalars['String']['input'];
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleAddonItemCreateManyDaily_SaleInputEnvelope = {
  data: Array<DailySaleAddonItemCreateManyDaily_SaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailySaleAddonItemCreateManyInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale_id: Scalars['String']['input'];
  item_id: Scalars['String']['input'];
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput = {
  connect?: InputMaybe<Array<DailySaleAddonItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleAddonItemCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleAddonItemCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleAddonItemCreateManyDaily_SaleInputEnvelope>;
};

export type DailySaleAddonItemCreateOrConnectWithoutDaily_SaleInput = {
  create: DailySaleAddonItemCreateWithoutDaily_SaleInput;
  where: DailySaleAddonItemWhereUniqueInput;
};

export type DailySaleAddonItemCreateWithoutDaily_SaleInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  item_id: Scalars['String']['input'];
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleAddonItemDaily_Sale_IdItem_TypeItem_IdCompoundUniqueInput = {
  daily_sale_id: Scalars['String']['input'];
  item_id: Scalars['String']['input'];
  item_type: SaleAddonType;
};

export type DailySaleAddonItemGroupBy = {
  __typename?: 'DailySaleAddonItemGroupBy';
  _avg?: Maybe<DailySaleAddonItemAvgAggregate>;
  _count?: Maybe<DailySaleAddonItemCountAggregate>;
  _max?: Maybe<DailySaleAddonItemMaxAggregate>;
  _min?: Maybe<DailySaleAddonItemMinAggregate>;
  _sum?: Maybe<DailySaleAddonItemSumAggregate>;
  applicable_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale_id: Scalars['String']['output'];
  item_id: Scalars['String']['output'];
  item_name: Scalars['String']['output'];
  item_type: SaleAddonType;
  quantity: Scalars['Int']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleAddonItemListRelationFilter = {
  every?: InputMaybe<DailySaleAddonItemWhereInput>;
  none?: InputMaybe<DailySaleAddonItemWhereInput>;
  some?: InputMaybe<DailySaleAddonItemWhereInput>;
};

export type DailySaleAddonItemMaxAggregate = {
  __typename?: 'DailySaleAddonItemMaxAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  item_id?: Maybe<Scalars['String']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<SaleAddonType>;
  quantity?: Maybe<Scalars['Int']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleAddonItemMaxOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemMinAggregate = {
  __typename?: 'DailySaleAddonItemMinAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  item_id?: Maybe<Scalars['String']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<SaleAddonType>;
  quantity?: Maybe<Scalars['Int']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleAddonItemMinOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<DailySaleAddonItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<DailySaleAddonItemCountOrderByAggregateInput>;
  _max?: InputMaybe<DailySaleAddonItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<DailySaleAddonItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<DailySaleAddonItemSumOrderByAggregateInput>;
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type DailySaleAddonItemOrderByWithRelationInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale?: InputMaybe<DailySaleOrderByWithRelationInput>;
  daily_sale_id?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum DailySaleAddonItemScalarFieldEnum {
  ApplicableAmount = 'applicable_amount',
  CreatedAt = 'created_at',
  DailySaleId = 'daily_sale_id',
  ItemId = 'item_id',
  ItemName = 'item_name',
  ItemType = 'item_type',
  Quantity = 'quantity',
  TotalAmount = 'total_amount',
  UpdatedAt = 'updated_at'
}

export type DailySaleAddonItemScalarWhereInput = {
  AND?: InputMaybe<Array<DailySaleAddonItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleAddonItemScalarWhereInput>>;
  OR?: InputMaybe<Array<DailySaleAddonItemScalarWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  item_id?: InputMaybe<StringFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleAddonItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DailySaleAddonItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DailySaleAddonItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DailySaleAddonItemScalarWhereWithAggregatesInput>>;
  applicable_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  daily_sale_id?: InputMaybe<StringWithAggregatesFilter>;
  item_id?: InputMaybe<StringWithAggregatesFilter>;
  item_name?: InputMaybe<StringWithAggregatesFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type DailySaleAddonItemSumAggregate = {
  __typename?: 'DailySaleAddonItemSumAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleAddonItemSumOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type DailySaleAddonItemUpdateInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sale?: InputMaybe<DailySaleUpdateOneRequiredWithoutAddonsNestedInput>;
  item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleAddonItemUpdateManyMutationInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleAddonItemUpdateManyWithWhereWithoutDaily_SaleInput = {
  data: DailySaleAddonItemUpdateManyMutationInput;
  where: DailySaleAddonItemScalarWhereInput;
};

export type DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput = {
  connect?: InputMaybe<Array<DailySaleAddonItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleAddonItemCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleAddonItemCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleAddonItemCreateManyDaily_SaleInputEnvelope>;
  delete?: InputMaybe<Array<DailySaleAddonItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailySaleAddonItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailySaleAddonItemWhereUniqueInput>>;
  set?: InputMaybe<Array<DailySaleAddonItemWhereUniqueInput>>;
  update?: InputMaybe<Array<DailySaleAddonItemUpdateWithWhereUniqueWithoutDaily_SaleInput>>;
  updateMany?: InputMaybe<Array<DailySaleAddonItemUpdateManyWithWhereWithoutDaily_SaleInput>>;
  upsert?: InputMaybe<Array<DailySaleAddonItemUpsertWithWhereUniqueWithoutDaily_SaleInput>>;
};

export type DailySaleAddonItemUpdateWithWhereUniqueWithoutDaily_SaleInput = {
  data: DailySaleAddonItemUpdateWithoutDaily_SaleInput;
  where: DailySaleAddonItemWhereUniqueInput;
};

export type DailySaleAddonItemUpdateWithoutDaily_SaleInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleAddonItemUpsertWithWhereUniqueWithoutDaily_SaleInput = {
  create: DailySaleAddonItemCreateWithoutDaily_SaleInput;
  update: DailySaleAddonItemUpdateWithoutDaily_SaleInput;
  where: DailySaleAddonItemWhereUniqueInput;
};

export type DailySaleAddonItemWhereInput = {
  AND?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  OR?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  item_id?: InputMaybe<StringFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleAddonItemWhereUniqueInput = {
  AND?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  OR?: InputMaybe<Array<DailySaleAddonItemWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  daily_sale_id_item_type_item_id?: InputMaybe<DailySaleAddonItemDaily_Sale_IdItem_TypeItem_IdCompoundUniqueInput>;
  item_id?: InputMaybe<StringFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleAvgAggregate = {
  __typename?: 'DailySaleAvgAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  total_customers?: Maybe<Scalars['Float']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Float']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleAvgOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
};

export type DailySaleCount = {
  __typename?: 'DailySaleCount';
  addons: Scalars['Int']['output'];
  details: Scalars['Int']['output'];
  items: Scalars['Int']['output'];
};


export type DailySaleCountAddonsArgs = {
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type DailySaleCountDetailsArgs = {
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type DailySaleCountItemsArgs = {
  where?: InputMaybe<DailySaleItemWhereInput>;
};

export type DailySaleCountAggregate = {
  __typename?: 'DailySaleCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  charge_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  gross_sale: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  net_sale: Scalars['Int']['output'];
  received_amount: Scalars['Int']['output'];
  refund_amount: Scalars['Int']['output'];
  sale_date: Scalars['Int']['output'];
  shipping_amount: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  total_customers: Scalars['Int']['output'];
  total_discount: Scalars['Int']['output'];
  total_sale: Scalars['Int']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type DailySaleCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleCreateInput = {
  Business?: InputMaybe<BusinessCreateNestedOneWithoutDaily_SalesInput>;
  addons?: InputMaybe<DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  details?: InputMaybe<DailySaleDetailCreateNestedManyWithoutDaily_SaleInput>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemCreateNestedManyWithoutDaily_SaleInput>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutDaily_SalesInput;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateManyBusinessInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateManyBusinessInputEnvelope = {
  data: Array<DailySaleCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailySaleCreateManyInput = {
  business_id?: InputMaybe<Scalars['String']['input']>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateManyStoreInput = {
  business_id?: InputMaybe<Scalars['String']['input']>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateManyStoreInputEnvelope = {
  data: Array<DailySaleCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailySaleCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<DailySaleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<DailySaleCreateManyBusinessInputEnvelope>;
};

export type DailySaleCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<DailySaleCreateWithoutStoreInput>>;
  createMany?: InputMaybe<DailySaleCreateManyStoreInputEnvelope>;
};

export type DailySaleCreateNestedOneWithoutAddonsInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutAddonsInput>;
  create?: InputMaybe<DailySaleCreateWithoutAddonsInput>;
};

export type DailySaleCreateNestedOneWithoutDetailsInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutDetailsInput>;
  create?: InputMaybe<DailySaleCreateWithoutDetailsInput>;
};

export type DailySaleCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<DailySaleCreateWithoutItemsInput>;
};

export type DailySaleCreateOrConnectWithoutAddonsInput = {
  create: DailySaleCreateWithoutAddonsInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleCreateOrConnectWithoutBusinessInput = {
  create: DailySaleCreateWithoutBusinessInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleCreateOrConnectWithoutDetailsInput = {
  create: DailySaleCreateWithoutDetailsInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleCreateOrConnectWithoutItemsInput = {
  create: DailySaleCreateWithoutItemsInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleCreateOrConnectWithoutStoreInput = {
  create: DailySaleCreateWithoutStoreInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleCreateWithoutAddonsInput = {
  Business?: InputMaybe<BusinessCreateNestedOneWithoutDaily_SalesInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  details?: InputMaybe<DailySaleDetailCreateNestedManyWithoutDaily_SaleInput>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemCreateNestedManyWithoutDaily_SaleInput>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutDaily_SalesInput;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateWithoutBusinessInput = {
  addons?: InputMaybe<DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  details?: InputMaybe<DailySaleDetailCreateNestedManyWithoutDaily_SaleInput>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemCreateNestedManyWithoutDaily_SaleInput>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutDaily_SalesInput;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateWithoutDetailsInput = {
  Business?: InputMaybe<BusinessCreateNestedOneWithoutDaily_SalesInput>;
  addons?: InputMaybe<DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemCreateNestedManyWithoutDaily_SaleInput>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutDaily_SalesInput;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateWithoutItemsInput = {
  Business?: InputMaybe<BusinessCreateNestedOneWithoutDaily_SalesInput>;
  addons?: InputMaybe<DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  details?: InputMaybe<DailySaleDetailCreateNestedManyWithoutDaily_SaleInput>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutDaily_SalesInput;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleCreateWithoutStoreInput = {
  Business?: InputMaybe<BusinessCreateNestedOneWithoutDaily_SalesInput>;
  addons?: InputMaybe<DailySaleAddonItemCreateNestedManyWithoutDaily_SaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  details?: InputMaybe<DailySaleDetailCreateNestedManyWithoutDaily_SaleInput>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemCreateNestedManyWithoutDaily_SaleInput>;
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_date: Scalars['DateTime']['input'];
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_customers?: InputMaybe<Scalars['Int']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleDetail = {
  __typename?: 'DailySaleDetail';
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale: DailySale;
  daily_sale_id: Scalars['String']['output'];
  gross_sale: Scalars['Decimal']['output'];
  identifier: Scalars['String']['output'];
  net_sale: Scalars['Decimal']['output'];
  received_amount: Scalars['Decimal']['output'];
  refund_amount: Scalars['Decimal']['output'];
  total_discount: Scalars['Decimal']['output'];
  total_sale: Scalars['Decimal']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Decimal']['output'];
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleDetailAvgAggregate = {
  __typename?: 'DailySaleDetailAvgAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Float']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleDetailAvgOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
};

export type DailySaleDetailCountAggregate = {
  __typename?: 'DailySaleDetailCountAggregate';
  _all: Scalars['Int']['output'];
  charge_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  daily_sale_id: Scalars['Int']['output'];
  gross_sale: Scalars['Int']['output'];
  identifier: Scalars['Int']['output'];
  net_sale: Scalars['Int']['output'];
  received_amount: Scalars['Int']['output'];
  refund_amount: Scalars['Int']['output'];
  total_discount: Scalars['Int']['output'];
  total_sale: Scalars['Int']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Int']['output'];
  type: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type DailySaleDetailCountOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleDetailCreateInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale: DailySaleCreateNestedOneWithoutDetailsInput;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  identifier: Scalars['String']['input'];
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  type: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleDetailCreateManyDaily_SaleInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  identifier: Scalars['String']['input'];
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  type: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleDetailCreateManyDaily_SaleInputEnvelope = {
  data: Array<DailySaleDetailCreateManyDaily_SaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailySaleDetailCreateManyInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale_id: Scalars['String']['input'];
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  identifier: Scalars['String']['input'];
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  type: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleDetailCreateNestedManyWithoutDaily_SaleInput = {
  connect?: InputMaybe<Array<DailySaleDetailWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleDetailCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleDetailCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleDetailCreateManyDaily_SaleInputEnvelope>;
};

export type DailySaleDetailCreateOrConnectWithoutDaily_SaleInput = {
  create: DailySaleDetailCreateWithoutDaily_SaleInput;
  where: DailySaleDetailWhereUniqueInput;
};

export type DailySaleDetailCreateWithoutDaily_SaleInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  gross_sale?: InputMaybe<Scalars['Decimal']['input']>;
  identifier: Scalars['String']['input'];
  net_sale?: InputMaybe<Scalars['Decimal']['input']>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_discount?: InputMaybe<Scalars['Decimal']['input']>;
  total_sale?: InputMaybe<Scalars['Decimal']['input']>;
  total_sales?: InputMaybe<Scalars['Int']['input']>;
  total_tax?: InputMaybe<Scalars['Decimal']['input']>;
  type: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleDetailDaily_Sale_IdTypeIdentifierCompoundUniqueInput = {
  daily_sale_id: Scalars['String']['input'];
  identifier: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type DailySaleDetailGroupBy = {
  __typename?: 'DailySaleDetailGroupBy';
  _avg?: Maybe<DailySaleDetailAvgAggregate>;
  _count?: Maybe<DailySaleDetailCountAggregate>;
  _max?: Maybe<DailySaleDetailMaxAggregate>;
  _min?: Maybe<DailySaleDetailMinAggregate>;
  _sum?: Maybe<DailySaleDetailSumAggregate>;
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale_id: Scalars['String']['output'];
  gross_sale: Scalars['Decimal']['output'];
  identifier: Scalars['String']['output'];
  net_sale: Scalars['Decimal']['output'];
  received_amount: Scalars['Decimal']['output'];
  refund_amount: Scalars['Decimal']['output'];
  total_discount: Scalars['Decimal']['output'];
  total_sale: Scalars['Decimal']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Decimal']['output'];
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleDetailListRelationFilter = {
  every?: InputMaybe<DailySaleDetailWhereInput>;
  none?: InputMaybe<DailySaleDetailWhereInput>;
  some?: InputMaybe<DailySaleDetailWhereInput>;
};

export type DailySaleDetailMaxAggregate = {
  __typename?: 'DailySaleDetailMaxAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleDetailMaxOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleDetailMinAggregate = {
  __typename?: 'DailySaleDetailMinAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  identifier?: Maybe<Scalars['String']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleDetailMinOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleDetailOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DailySaleDetailOrderByWithAggregationInput = {
  _avg?: InputMaybe<DailySaleDetailAvgOrderByAggregateInput>;
  _count?: InputMaybe<DailySaleDetailCountOrderByAggregateInput>;
  _max?: InputMaybe<DailySaleDetailMaxOrderByAggregateInput>;
  _min?: InputMaybe<DailySaleDetailMinOrderByAggregateInput>;
  _sum?: InputMaybe<DailySaleDetailSumOrderByAggregateInput>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type DailySaleDetailOrderByWithRelationInput = {
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale?: InputMaybe<DailySaleOrderByWithRelationInput>;
  daily_sale_id?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  identifier?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum DailySaleDetailScalarFieldEnum {
  ChargeAmount = 'charge_amount',
  CreatedAt = 'created_at',
  DailySaleId = 'daily_sale_id',
  GrossSale = 'gross_sale',
  Identifier = 'identifier',
  NetSale = 'net_sale',
  ReceivedAmount = 'received_amount',
  RefundAmount = 'refund_amount',
  TotalDiscount = 'total_discount',
  TotalSale = 'total_sale',
  TotalSales = 'total_sales',
  TotalTax = 'total_tax',
  Type = 'type',
  UpdatedAt = 'updated_at'
}

export type DailySaleDetailScalarWhereInput = {
  AND?: InputMaybe<Array<DailySaleDetailScalarWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleDetailScalarWhereInput>>;
  OR?: InputMaybe<Array<DailySaleDetailScalarWhereInput>>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  gross_sale?: InputMaybe<DecimalFilter>;
  identifier?: InputMaybe<StringFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleDetailScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DailySaleDetailScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DailySaleDetailScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DailySaleDetailScalarWhereWithAggregatesInput>>;
  charge_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  daily_sale_id?: InputMaybe<StringWithAggregatesFilter>;
  gross_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  identifier?: InputMaybe<StringWithAggregatesFilter>;
  net_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  received_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  refund_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_discount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  total_sales?: InputMaybe<IntWithAggregatesFilter>;
  total_tax?: InputMaybe<DecimalWithAggregatesFilter>;
  type?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type DailySaleDetailSumAggregate = {
  __typename?: 'DailySaleDetailSumAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleDetailSumOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
};

export type DailySaleDetailUpdateInput = {
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sale?: InputMaybe<DailySaleUpdateOneRequiredWithoutDetailsNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleDetailUpdateManyMutationInput = {
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleDetailUpdateManyWithWhereWithoutDaily_SaleInput = {
  data: DailySaleDetailUpdateManyMutationInput;
  where: DailySaleDetailScalarWhereInput;
};

export type DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput = {
  connect?: InputMaybe<Array<DailySaleDetailWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleDetailCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleDetailCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleDetailCreateManyDaily_SaleInputEnvelope>;
  delete?: InputMaybe<Array<DailySaleDetailWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailySaleDetailScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailySaleDetailWhereUniqueInput>>;
  set?: InputMaybe<Array<DailySaleDetailWhereUniqueInput>>;
  update?: InputMaybe<Array<DailySaleDetailUpdateWithWhereUniqueWithoutDaily_SaleInput>>;
  updateMany?: InputMaybe<Array<DailySaleDetailUpdateManyWithWhereWithoutDaily_SaleInput>>;
  upsert?: InputMaybe<Array<DailySaleDetailUpsertWithWhereUniqueWithoutDaily_SaleInput>>;
};

export type DailySaleDetailUpdateWithWhereUniqueWithoutDaily_SaleInput = {
  data: DailySaleDetailUpdateWithoutDaily_SaleInput;
  where: DailySaleDetailWhereUniqueInput;
};

export type DailySaleDetailUpdateWithoutDaily_SaleInput = {
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  identifier?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleDetailUpsertWithWhereUniqueWithoutDaily_SaleInput = {
  create: DailySaleDetailCreateWithoutDaily_SaleInput;
  update: DailySaleDetailUpdateWithoutDaily_SaleInput;
  where: DailySaleDetailWhereUniqueInput;
};

export type DailySaleDetailWhereInput = {
  AND?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  OR?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  gross_sale?: InputMaybe<DecimalFilter>;
  identifier?: InputMaybe<StringFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleDetailWhereUniqueInput = {
  AND?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  OR?: InputMaybe<Array<DailySaleDetailWhereInput>>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  daily_sale_id_type_identifier?: InputMaybe<DailySaleDetailDaily_Sale_IdTypeIdentifierCompoundUniqueInput>;
  gross_sale?: InputMaybe<DecimalFilter>;
  identifier?: InputMaybe<StringFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleGroupBy = {
  __typename?: 'DailySaleGroupBy';
  _avg?: Maybe<DailySaleAvgAggregate>;
  _count?: Maybe<DailySaleCountAggregate>;
  _max?: Maybe<DailySaleMaxAggregate>;
  _min?: Maybe<DailySaleMinAggregate>;
  _sum?: Maybe<DailySaleSumAggregate>;
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  gross_sale: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  net_sale: Scalars['Decimal']['output'];
  received_amount: Scalars['Decimal']['output'];
  refund_amount: Scalars['Decimal']['output'];
  sale_date: Scalars['DateTime']['output'];
  shipping_amount: Scalars['Decimal']['output'];
  store_id: Scalars['String']['output'];
  total_customers: Scalars['Int']['output'];
  total_discount: Scalars['Decimal']['output'];
  total_sale: Scalars['Decimal']['output'];
  total_sales: Scalars['Int']['output'];
  total_tax: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleItem = {
  __typename?: 'DailySaleItem';
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale: DailySale;
  daily_sale_id: Scalars['String']['output'];
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  item_name: Scalars['String']['output'];
  net_amount: Scalars['Decimal']['output'];
  optional_amount: Scalars['Decimal']['output'];
  quantity: Scalars['Int']['output'];
  selling_price: Scalars['Decimal']['output'];
  stock_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleItemAvgAggregate = {
  __typename?: 'DailySaleItemAvgAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleItemAvgOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type DailySaleItemCountAggregate = {
  __typename?: 'DailySaleItemCountAggregate';
  _all: Scalars['Int']['output'];
  cost_price: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  daily_sale_id: Scalars['Int']['output'];
  discount_amount: Scalars['Int']['output'];
  gross_amount: Scalars['Int']['output'];
  item_name: Scalars['Int']['output'];
  net_amount: Scalars['Int']['output'];
  optional_amount: Scalars['Int']['output'];
  quantity: Scalars['Int']['output'];
  selling_price: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  tax_amount: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type DailySaleItemCountOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleItemCreateInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale: DailySaleCreateNestedOneWithoutItemsInput;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  item_name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleItemCreateManyDaily_SaleInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  item_name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleItemCreateManyDaily_SaleInputEnvelope = {
  data: Array<DailySaleItemCreateManyDaily_SaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailySaleItemCreateManyInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sale_id: Scalars['String']['input'];
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  item_name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleItemCreateNestedManyWithoutDaily_SaleInput = {
  connect?: InputMaybe<Array<DailySaleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleItemCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleItemCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleItemCreateManyDaily_SaleInputEnvelope>;
};

export type DailySaleItemCreateOrConnectWithoutDaily_SaleInput = {
  create: DailySaleItemCreateWithoutDaily_SaleInput;
  where: DailySaleItemWhereUniqueInput;
};

export type DailySaleItemCreateWithoutDaily_SaleInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  item_name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DailySaleItemDaily_Sale_IdStock_IdCompoundUniqueInput = {
  daily_sale_id: Scalars['String']['input'];
  stock_id: Scalars['String']['input'];
};

export type DailySaleItemGroupBy = {
  __typename?: 'DailySaleItemGroupBy';
  _avg?: Maybe<DailySaleItemAvgAggregate>;
  _count?: Maybe<DailySaleItemCountAggregate>;
  _max?: Maybe<DailySaleItemMaxAggregate>;
  _min?: Maybe<DailySaleItemMinAggregate>;
  _sum?: Maybe<DailySaleItemSumAggregate>;
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  daily_sale_id: Scalars['String']['output'];
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  item_name: Scalars['String']['output'];
  net_amount: Scalars['Decimal']['output'];
  optional_amount: Scalars['Decimal']['output'];
  quantity: Scalars['Int']['output'];
  selling_price: Scalars['Decimal']['output'];
  stock_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleItemListRelationFilter = {
  every?: InputMaybe<DailySaleItemWhereInput>;
  none?: InputMaybe<DailySaleItemWhereInput>;
  some?: InputMaybe<DailySaleItemWhereInput>;
};

export type DailySaleItemMaxAggregate = {
  __typename?: 'DailySaleItemMaxAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleItemMaxOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleItemMinAggregate = {
  __typename?: 'DailySaleItemMinAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  daily_sale_id?: Maybe<Scalars['String']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleItemMinOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DailySaleItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<DailySaleItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<DailySaleItemCountOrderByAggregateInput>;
  _max?: InputMaybe<DailySaleItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<DailySaleItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<DailySaleItemSumOrderByAggregateInput>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type DailySaleItemOrderByWithRelationInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  daily_sale?: InputMaybe<DailySaleOrderByWithRelationInput>;
  daily_sale_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum DailySaleItemScalarFieldEnum {
  CostPrice = 'cost_price',
  CreatedAt = 'created_at',
  DailySaleId = 'daily_sale_id',
  DiscountAmount = 'discount_amount',
  GrossAmount = 'gross_amount',
  ItemName = 'item_name',
  NetAmount = 'net_amount',
  OptionalAmount = 'optional_amount',
  Quantity = 'quantity',
  SellingPrice = 'selling_price',
  StockId = 'stock_id',
  TaxAmount = 'tax_amount',
  TotalAmount = 'total_amount',
  UpdatedAt = 'updated_at'
}

export type DailySaleItemScalarWhereInput = {
  AND?: InputMaybe<Array<DailySaleItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleItemScalarWhereInput>>;
  OR?: InputMaybe<Array<DailySaleItemScalarWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  item_name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DailySaleItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DailySaleItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DailySaleItemScalarWhereWithAggregatesInput>>;
  cost_price?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  daily_sale_id?: InputMaybe<StringWithAggregatesFilter>;
  discount_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  gross_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  item_name?: InputMaybe<StringWithAggregatesFilter>;
  net_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  optional_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  selling_price?: InputMaybe<DecimalWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  tax_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type DailySaleItemSumAggregate = {
  __typename?: 'DailySaleItemSumAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleItemSumOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type DailySaleItemUpdateInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sale?: InputMaybe<DailySaleUpdateOneRequiredWithoutItemsNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleItemUpdateManyMutationInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleItemUpdateManyWithWhereWithoutDaily_SaleInput = {
  data: DailySaleItemUpdateManyMutationInput;
  where: DailySaleItemScalarWhereInput;
};

export type DailySaleItemUpdateManyWithoutDaily_SaleNestedInput = {
  connect?: InputMaybe<Array<DailySaleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleItemCreateOrConnectWithoutDaily_SaleInput>>;
  create?: InputMaybe<Array<DailySaleItemCreateWithoutDaily_SaleInput>>;
  createMany?: InputMaybe<DailySaleItemCreateManyDaily_SaleInputEnvelope>;
  delete?: InputMaybe<Array<DailySaleItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailySaleItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailySaleItemWhereUniqueInput>>;
  set?: InputMaybe<Array<DailySaleItemWhereUniqueInput>>;
  update?: InputMaybe<Array<DailySaleItemUpdateWithWhereUniqueWithoutDaily_SaleInput>>;
  updateMany?: InputMaybe<Array<DailySaleItemUpdateManyWithWhereWithoutDaily_SaleInput>>;
  upsert?: InputMaybe<Array<DailySaleItemUpsertWithWhereUniqueWithoutDaily_SaleInput>>;
};

export type DailySaleItemUpdateWithWhereUniqueWithoutDaily_SaleInput = {
  data: DailySaleItemUpdateWithoutDaily_SaleInput;
  where: DailySaleItemWhereUniqueInput;
};

export type DailySaleItemUpdateWithoutDaily_SaleInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleItemUpsertWithWhereUniqueWithoutDaily_SaleInput = {
  create: DailySaleItemCreateWithoutDaily_SaleInput;
  update: DailySaleItemUpdateWithoutDaily_SaleInput;
  where: DailySaleItemWhereUniqueInput;
};

export type DailySaleItemWhereInput = {
  AND?: InputMaybe<Array<DailySaleItemWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleItemWhereInput>>;
  OR?: InputMaybe<Array<DailySaleItemWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  item_name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleItemWhereUniqueInput = {
  AND?: InputMaybe<Array<DailySaleItemWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleItemWhereInput>>;
  OR?: InputMaybe<Array<DailySaleItemWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sale?: InputMaybe<DailySaleRelationFilter>;
  daily_sale_id?: InputMaybe<StringFilter>;
  daily_sale_id_stock_id?: InputMaybe<DailySaleItemDaily_Sale_IdStock_IdCompoundUniqueInput>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  item_name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleListRelationFilter = {
  every?: InputMaybe<DailySaleWhereInput>;
  none?: InputMaybe<DailySaleWhereInput>;
  some?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleMaxAggregate = {
  __typename?: 'DailySaleMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  sale_date?: Maybe<Scalars['DateTime']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_customers?: Maybe<Scalars['Int']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleMinAggregate = {
  __typename?: 'DailySaleMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  sale_date?: Maybe<Scalars['DateTime']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_customers?: Maybe<Scalars['Int']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type DailySaleMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type DailySaleOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DailySaleOrderByWithAggregationInput = {
  _avg?: InputMaybe<DailySaleAvgOrderByAggregateInput>;
  _count?: InputMaybe<DailySaleCountOrderByAggregateInput>;
  _max?: InputMaybe<DailySaleMaxOrderByAggregateInput>;
  _min?: InputMaybe<DailySaleMinOrderByAggregateInput>;
  _sum?: InputMaybe<DailySaleSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrderInput>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type DailySaleOrderByWithRelationInput = {
  Business?: InputMaybe<BusinessOrderByWithRelationInput>;
  addons?: InputMaybe<DailySaleAddonItemOrderByRelationAggregateInput>;
  business_id?: InputMaybe<SortOrderInput>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  details?: InputMaybe<DailySaleDetailOrderByRelationAggregateInput>;
  gross_sale?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<DailySaleItemOrderByRelationAggregateInput>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type DailySaleRelationFilter = {
  is?: InputMaybe<DailySaleWhereInput>;
  isNot?: InputMaybe<DailySaleWhereInput>;
};

export enum DailySaleScalarFieldEnum {
  BusinessId = 'business_id',
  ChargeAmount = 'charge_amount',
  CreatedAt = 'created_at',
  GrossSale = 'gross_sale',
  Id = 'id',
  NetSale = 'net_sale',
  ReceivedAmount = 'received_amount',
  RefundAmount = 'refund_amount',
  SaleDate = 'sale_date',
  ShippingAmount = 'shipping_amount',
  StoreId = 'store_id',
  TotalCustomers = 'total_customers',
  TotalDiscount = 'total_discount',
  TotalSale = 'total_sale',
  TotalSales = 'total_sales',
  TotalTax = 'total_tax',
  UpdatedAt = 'updated_at'
}

export type DailySaleScalarWhereInput = {
  AND?: InputMaybe<Array<DailySaleScalarWhereInput>>;
  NOT?: InputMaybe<Array<DailySaleScalarWhereInput>>;
  OR?: InputMaybe<Array<DailySaleScalarWhereInput>>;
  business_id?: InputMaybe<StringNullableFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  gross_sale?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_customers?: InputMaybe<IntFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DailySaleScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DailySaleScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DailySaleScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  charge_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  gross_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  net_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  received_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  refund_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  sale_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  shipping_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  total_customers?: InputMaybe<IntWithAggregatesFilter>;
  total_discount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_sale?: InputMaybe<DecimalWithAggregatesFilter>;
  total_sales?: InputMaybe<IntWithAggregatesFilter>;
  total_tax?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type DailySaleStore_IdSale_DateCompoundUniqueInput = {
  sale_date: Scalars['DateTime']['input'];
  store_id: Scalars['String']['input'];
};

export type DailySaleSumAggregate = {
  __typename?: 'DailySaleSumAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_sale?: Maybe<Scalars['Decimal']['output']>;
  net_sale?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  total_customers?: Maybe<Scalars['Int']['output']>;
  total_discount?: Maybe<Scalars['Decimal']['output']>;
  total_sale?: Maybe<Scalars['Decimal']['output']>;
  total_sales?: Maybe<Scalars['Int']['output']>;
  total_tax?: Maybe<Scalars['Decimal']['output']>;
};

export type DailySaleSumOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  gross_sale?: InputMaybe<SortOrder>;
  net_sale?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  total_customers?: InputMaybe<SortOrder>;
  total_discount?: InputMaybe<SortOrder>;
  total_sale?: InputMaybe<SortOrder>;
  total_sales?: InputMaybe<SortOrder>;
  total_tax?: InputMaybe<SortOrder>;
};

export type DailySaleUpdateInput = {
  Business?: InputMaybe<BusinessUpdateOneWithoutDaily_SalesNestedInput>;
  addons?: InputMaybe<DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<DailySaleItemUpdateManyWithoutDaily_SaleNestedInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutDaily_SalesNestedInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateManyMutationInput = {
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateManyWithWhereWithoutBusinessInput = {
  data: DailySaleUpdateManyMutationInput;
  where: DailySaleScalarWhereInput;
};

export type DailySaleUpdateManyWithWhereWithoutStoreInput = {
  data: DailySaleUpdateManyMutationInput;
  where: DailySaleScalarWhereInput;
};

export type DailySaleUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<DailySaleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<DailySaleCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailySaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  set?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  update?: InputMaybe<Array<DailySaleUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<DailySaleUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<DailySaleUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type DailySaleUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailySaleCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<DailySaleCreateWithoutStoreInput>>;
  createMany?: InputMaybe<DailySaleCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailySaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  set?: InputMaybe<Array<DailySaleWhereUniqueInput>>;
  update?: InputMaybe<Array<DailySaleUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<DailySaleUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<DailySaleUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type DailySaleUpdateOneRequiredWithoutAddonsNestedInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutAddonsInput>;
  create?: InputMaybe<DailySaleCreateWithoutAddonsInput>;
  update?: InputMaybe<DailySaleUpdateToOneWithWhereWithoutAddonsInput>;
  upsert?: InputMaybe<DailySaleUpsertWithoutAddonsInput>;
};

export type DailySaleUpdateOneRequiredWithoutDetailsNestedInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutDetailsInput>;
  create?: InputMaybe<DailySaleCreateWithoutDetailsInput>;
  update?: InputMaybe<DailySaleUpdateToOneWithWhereWithoutDetailsInput>;
  upsert?: InputMaybe<DailySaleUpsertWithoutDetailsInput>;
};

export type DailySaleUpdateOneRequiredWithoutItemsNestedInput = {
  connect?: InputMaybe<DailySaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DailySaleCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<DailySaleCreateWithoutItemsInput>;
  update?: InputMaybe<DailySaleUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<DailySaleUpsertWithoutItemsInput>;
};

export type DailySaleUpdateToOneWithWhereWithoutAddonsInput = {
  data: DailySaleUpdateWithoutAddonsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleUpdateToOneWithWhereWithoutDetailsInput = {
  data: DailySaleUpdateWithoutDetailsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleUpdateToOneWithWhereWithoutItemsInput = {
  data: DailySaleUpdateWithoutItemsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleUpdateWithWhereUniqueWithoutBusinessInput = {
  data: DailySaleUpdateWithoutBusinessInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleUpdateWithWhereUniqueWithoutStoreInput = {
  data: DailySaleUpdateWithoutStoreInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleUpdateWithoutAddonsInput = {
  Business?: InputMaybe<BusinessUpdateOneWithoutDaily_SalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<DailySaleItemUpdateManyWithoutDaily_SaleNestedInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutDaily_SalesNestedInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateWithoutBusinessInput = {
  addons?: InputMaybe<DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<DailySaleItemUpdateManyWithoutDaily_SaleNestedInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutDaily_SalesNestedInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateWithoutDetailsInput = {
  Business?: InputMaybe<BusinessUpdateOneWithoutDaily_SalesNestedInput>;
  addons?: InputMaybe<DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<DailySaleItemUpdateManyWithoutDaily_SaleNestedInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutDaily_SalesNestedInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateWithoutItemsInput = {
  Business?: InputMaybe<BusinessUpdateOneWithoutDaily_SalesNestedInput>;
  addons?: InputMaybe<DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutDaily_SalesNestedInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpdateWithoutStoreInput = {
  Business?: InputMaybe<BusinessUpdateOneWithoutDaily_SalesNestedInput>;
  addons?: InputMaybe<DailySaleAddonItemUpdateManyWithoutDaily_SaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<DailySaleDetailUpdateManyWithoutDaily_SaleNestedInput>;
  gross_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<DailySaleItemUpdateManyWithoutDaily_SaleNestedInput>;
  net_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_customers?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_discount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sale?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_sales?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_tax?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type DailySaleUpsertWithWhereUniqueWithoutBusinessInput = {
  create: DailySaleCreateWithoutBusinessInput;
  update: DailySaleUpdateWithoutBusinessInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleUpsertWithWhereUniqueWithoutStoreInput = {
  create: DailySaleCreateWithoutStoreInput;
  update: DailySaleUpdateWithoutStoreInput;
  where: DailySaleWhereUniqueInput;
};

export type DailySaleUpsertWithoutAddonsInput = {
  create: DailySaleCreateWithoutAddonsInput;
  update: DailySaleUpdateWithoutAddonsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleUpsertWithoutDetailsInput = {
  create: DailySaleCreateWithoutDetailsInput;
  update: DailySaleUpdateWithoutDetailsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleUpsertWithoutItemsInput = {
  create: DailySaleCreateWithoutItemsInput;
  update: DailySaleUpdateWithoutItemsInput;
  where?: InputMaybe<DailySaleWhereInput>;
};

export type DailySaleWhereInput = {
  AND?: InputMaybe<Array<DailySaleWhereInput>>;
  Business?: InputMaybe<BusinessNullableRelationFilter>;
  NOT?: InputMaybe<Array<DailySaleWhereInput>>;
  OR?: InputMaybe<Array<DailySaleWhereInput>>;
  addons?: InputMaybe<DailySaleAddonItemListRelationFilter>;
  business_id?: InputMaybe<StringNullableFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  details?: InputMaybe<DailySaleDetailListRelationFilter>;
  gross_sale?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<DailySaleItemListRelationFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_customers?: InputMaybe<IntFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailySaleWhereUniqueInput = {
  AND?: InputMaybe<Array<DailySaleWhereInput>>;
  Business?: InputMaybe<BusinessNullableRelationFilter>;
  NOT?: InputMaybe<Array<DailySaleWhereInput>>;
  OR?: InputMaybe<Array<DailySaleWhereInput>>;
  addons?: InputMaybe<DailySaleAddonItemListRelationFilter>;
  business_id?: InputMaybe<StringNullableFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  details?: InputMaybe<DailySaleDetailListRelationFilter>;
  gross_sale?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<DailySaleItemListRelationFilter>;
  net_sale?: InputMaybe<DecimalFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  store_id_sale_date?: InputMaybe<DailySaleStore_IdSale_DateCompoundUniqueInput>;
  total_customers?: InputMaybe<IntFilter>;
  total_discount?: InputMaybe<DecimalFilter>;
  total_sale?: InputMaybe<DecimalFilter>;
  total_sales?: InputMaybe<IntFilter>;
  total_tax?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type DailyStock = {
  __typename?: 'DailyStock';
  adjusted_qty_in: Scalars['Decimal']['output'];
  adjusted_qty_out: Scalars['Decimal']['output'];
  business_id: Scalars['String']['output'];
  committed_qty: Scalars['Decimal']['output'];
  current_qty: Scalars['Decimal']['output'];
  id: Scalars['BigInt']['output'];
  opening_qty: Scalars['Decimal']['output'];
  order_qty: Scalars['Decimal']['output'];
  received_qty: Scalars['Decimal']['output'];
  sale_qty: Scalars['Decimal']['output'];
  stock: ProductStock;
  stock_date: Scalars['DateTime']['output'];
  stock_id: Scalars['String']['output'];
  store_id: Scalars['String']['output'];
  transfer_qty_in: Scalars['Decimal']['output'];
  transfer_qty_out: Scalars['Decimal']['output'];
};

export type DailyStockAvgAggregate = {
  __typename?: 'DailyStockAvgAggregate';
  adjusted_qty_in?: Maybe<Scalars['Decimal']['output']>;
  adjusted_qty_out?: Maybe<Scalars['Decimal']['output']>;
  committed_qty?: Maybe<Scalars['Decimal']['output']>;
  current_qty?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  opening_qty?: Maybe<Scalars['Decimal']['output']>;
  order_qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  sale_qty?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_in?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_out?: Maybe<Scalars['Decimal']['output']>;
};

export type DailyStockAvgOrderByAggregateInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockCountAggregate = {
  __typename?: 'DailyStockCountAggregate';
  _all: Scalars['Int']['output'];
  adjusted_qty_in: Scalars['Int']['output'];
  adjusted_qty_out: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  committed_qty: Scalars['Int']['output'];
  current_qty: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  opening_qty: Scalars['Int']['output'];
  order_qty: Scalars['Int']['output'];
  received_qty: Scalars['Int']['output'];
  sale_qty: Scalars['Int']['output'];
  stock_date: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  transfer_qty_in: Scalars['Int']['output'];
  transfer_qty_out: Scalars['Int']['output'];
};

export type DailyStockCountOrderByAggregateInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockCreateInput = {
  adjusted_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  adjusted_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  committed_qty?: InputMaybe<Scalars['Decimal']['input']>;
  current_qty?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  opening_qty?: InputMaybe<Scalars['Decimal']['input']>;
  order_qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  sale_qty?: InputMaybe<Scalars['Decimal']['input']>;
  stock: ProductStockCreateNestedOneWithoutDaily_StocksInput;
  stock_date: Scalars['DateTime']['input'];
  store_id: Scalars['String']['input'];
  transfer_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  transfer_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DailyStockCreateManyInput = {
  adjusted_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  adjusted_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  committed_qty?: InputMaybe<Scalars['Decimal']['input']>;
  current_qty?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  opening_qty?: InputMaybe<Scalars['Decimal']['input']>;
  order_qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  sale_qty?: InputMaybe<Scalars['Decimal']['input']>;
  stock_date: Scalars['DateTime']['input'];
  stock_id: Scalars['String']['input'];
  store_id: Scalars['String']['input'];
  transfer_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  transfer_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DailyStockCreateManyStockInput = {
  adjusted_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  adjusted_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  committed_qty?: InputMaybe<Scalars['Decimal']['input']>;
  current_qty?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  opening_qty?: InputMaybe<Scalars['Decimal']['input']>;
  order_qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  sale_qty?: InputMaybe<Scalars['Decimal']['input']>;
  stock_date: Scalars['DateTime']['input'];
  store_id: Scalars['String']['input'];
  transfer_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  transfer_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DailyStockCreateManyStockInputEnvelope = {
  data: Array<DailyStockCreateManyStockInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type DailyStockCreateNestedManyWithoutStockInput = {
  connect?: InputMaybe<Array<DailyStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailyStockCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<DailyStockCreateWithoutStockInput>>;
  createMany?: InputMaybe<DailyStockCreateManyStockInputEnvelope>;
};

export type DailyStockCreateOrConnectWithoutStockInput = {
  create: DailyStockCreateWithoutStockInput;
  where: DailyStockWhereUniqueInput;
};

export type DailyStockCreateWithoutStockInput = {
  adjusted_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  adjusted_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  committed_qty?: InputMaybe<Scalars['Decimal']['input']>;
  current_qty?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  opening_qty?: InputMaybe<Scalars['Decimal']['input']>;
  order_qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  sale_qty?: InputMaybe<Scalars['Decimal']['input']>;
  stock_date: Scalars['DateTime']['input'];
  store_id: Scalars['String']['input'];
  transfer_qty_in?: InputMaybe<Scalars['Decimal']['input']>;
  transfer_qty_out?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DailyStockGroupBy = {
  __typename?: 'DailyStockGroupBy';
  _avg?: Maybe<DailyStockAvgAggregate>;
  _count?: Maybe<DailyStockCountAggregate>;
  _max?: Maybe<DailyStockMaxAggregate>;
  _min?: Maybe<DailyStockMinAggregate>;
  _sum?: Maybe<DailyStockSumAggregate>;
  adjusted_qty_in: Scalars['Decimal']['output'];
  adjusted_qty_out: Scalars['Decimal']['output'];
  business_id: Scalars['String']['output'];
  committed_qty: Scalars['Decimal']['output'];
  current_qty: Scalars['Decimal']['output'];
  id: Scalars['BigInt']['output'];
  opening_qty: Scalars['Decimal']['output'];
  order_qty: Scalars['Decimal']['output'];
  received_qty: Scalars['Decimal']['output'];
  sale_qty: Scalars['Decimal']['output'];
  stock_date: Scalars['DateTime']['output'];
  stock_id: Scalars['String']['output'];
  store_id: Scalars['String']['output'];
  transfer_qty_in: Scalars['Decimal']['output'];
  transfer_qty_out: Scalars['Decimal']['output'];
};

export type DailyStockListRelationFilter = {
  every?: InputMaybe<DailyStockWhereInput>;
  none?: InputMaybe<DailyStockWhereInput>;
  some?: InputMaybe<DailyStockWhereInput>;
};

export type DailyStockMaxAggregate = {
  __typename?: 'DailyStockMaxAggregate';
  adjusted_qty_in?: Maybe<Scalars['Decimal']['output']>;
  adjusted_qty_out?: Maybe<Scalars['Decimal']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  committed_qty?: Maybe<Scalars['Decimal']['output']>;
  current_qty?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  opening_qty?: Maybe<Scalars['Decimal']['output']>;
  order_qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  sale_qty?: Maybe<Scalars['Decimal']['output']>;
  stock_date?: Maybe<Scalars['DateTime']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  transfer_qty_in?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_out?: Maybe<Scalars['Decimal']['output']>;
};

export type DailyStockMaxOrderByAggregateInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockMinAggregate = {
  __typename?: 'DailyStockMinAggregate';
  adjusted_qty_in?: Maybe<Scalars['Decimal']['output']>;
  adjusted_qty_out?: Maybe<Scalars['Decimal']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  committed_qty?: Maybe<Scalars['Decimal']['output']>;
  current_qty?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  opening_qty?: Maybe<Scalars['Decimal']['output']>;
  order_qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  sale_qty?: Maybe<Scalars['Decimal']['output']>;
  stock_date?: Maybe<Scalars['DateTime']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  transfer_qty_in?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_out?: Maybe<Scalars['Decimal']['output']>;
};

export type DailyStockMinOrderByAggregateInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DailyStockOrderByWithAggregationInput = {
  _avg?: InputMaybe<DailyStockAvgOrderByAggregateInput>;
  _count?: InputMaybe<DailyStockCountOrderByAggregateInput>;
  _max?: InputMaybe<DailyStockMaxOrderByAggregateInput>;
  _min?: InputMaybe<DailyStockMinOrderByAggregateInput>;
  _sum?: InputMaybe<DailyStockSumOrderByAggregateInput>;
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockOrderByWithRelationInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  stock?: InputMaybe<ProductStockOrderByWithRelationInput>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export enum DailyStockScalarFieldEnum {
  AdjustedQtyIn = 'adjusted_qty_in',
  AdjustedQtyOut = 'adjusted_qty_out',
  BusinessId = 'business_id',
  CommittedQty = 'committed_qty',
  CurrentQty = 'current_qty',
  Id = 'id',
  OpeningQty = 'opening_qty',
  OrderQty = 'order_qty',
  ReceivedQty = 'received_qty',
  SaleQty = 'sale_qty',
  StockDate = 'stock_date',
  StockId = 'stock_id',
  StoreId = 'store_id',
  TransferQtyIn = 'transfer_qty_in',
  TransferQtyOut = 'transfer_qty_out'
}

export type DailyStockScalarWhereInput = {
  AND?: InputMaybe<Array<DailyStockScalarWhereInput>>;
  NOT?: InputMaybe<Array<DailyStockScalarWhereInput>>;
  OR?: InputMaybe<Array<DailyStockScalarWhereInput>>;
  adjusted_qty_in?: InputMaybe<DecimalFilter>;
  adjusted_qty_out?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  committed_qty?: InputMaybe<DecimalFilter>;
  current_qty?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<BigIntFilter>;
  opening_qty?: InputMaybe<DecimalFilter>;
  order_qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  sale_qty?: InputMaybe<DecimalFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_id?: InputMaybe<StringFilter>;
  store_id?: InputMaybe<StringFilter>;
  transfer_qty_in?: InputMaybe<DecimalFilter>;
  transfer_qty_out?: InputMaybe<DecimalFilter>;
};

export type DailyStockScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<DailyStockScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<DailyStockScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<DailyStockScalarWhereWithAggregatesInput>>;
  adjusted_qty_in?: InputMaybe<DecimalWithAggregatesFilter>;
  adjusted_qty_out?: InputMaybe<DecimalWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  committed_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  current_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  opening_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  order_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  received_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  sale_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  stock_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  transfer_qty_in?: InputMaybe<DecimalWithAggregatesFilter>;
  transfer_qty_out?: InputMaybe<DecimalWithAggregatesFilter>;
};

export type DailyStockStock_DateStock_IdCompoundUniqueInput = {
  stock_date: Scalars['DateTime']['input'];
  stock_id: Scalars['String']['input'];
};

export type DailyStockSumAggregate = {
  __typename?: 'DailyStockSumAggregate';
  adjusted_qty_in?: Maybe<Scalars['Decimal']['output']>;
  adjusted_qty_out?: Maybe<Scalars['Decimal']['output']>;
  committed_qty?: Maybe<Scalars['Decimal']['output']>;
  current_qty?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  opening_qty?: Maybe<Scalars['Decimal']['output']>;
  order_qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  sale_qty?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_in?: Maybe<Scalars['Decimal']['output']>;
  transfer_qty_out?: Maybe<Scalars['Decimal']['output']>;
};

export type DailyStockSumOrderByAggregateInput = {
  adjusted_qty_in?: InputMaybe<SortOrder>;
  adjusted_qty_out?: InputMaybe<SortOrder>;
  committed_qty?: InputMaybe<SortOrder>;
  current_qty?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  opening_qty?: InputMaybe<SortOrder>;
  order_qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  sale_qty?: InputMaybe<SortOrder>;
  transfer_qty_in?: InputMaybe<SortOrder>;
  transfer_qty_out?: InputMaybe<SortOrder>;
};

export type DailyStockUpdateInput = {
  adjusted_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  adjusted_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  committed_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  current_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  opening_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  order_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock?: InputMaybe<ProductStockUpdateOneRequiredWithoutDaily_StocksNestedInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  transfer_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transfer_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type DailyStockUpdateManyMutationInput = {
  adjusted_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  adjusted_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  committed_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  current_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  opening_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  order_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  transfer_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transfer_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type DailyStockUpdateManyWithWhereWithoutStockInput = {
  data: DailyStockUpdateManyMutationInput;
  where: DailyStockScalarWhereInput;
};

export type DailyStockUpdateManyWithoutStockNestedInput = {
  connect?: InputMaybe<Array<DailyStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<DailyStockCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<DailyStockCreateWithoutStockInput>>;
  createMany?: InputMaybe<DailyStockCreateManyStockInputEnvelope>;
  delete?: InputMaybe<Array<DailyStockWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<DailyStockScalarWhereInput>>;
  disconnect?: InputMaybe<Array<DailyStockWhereUniqueInput>>;
  set?: InputMaybe<Array<DailyStockWhereUniqueInput>>;
  update?: InputMaybe<Array<DailyStockUpdateWithWhereUniqueWithoutStockInput>>;
  updateMany?: InputMaybe<Array<DailyStockUpdateManyWithWhereWithoutStockInput>>;
  upsert?: InputMaybe<Array<DailyStockUpsertWithWhereUniqueWithoutStockInput>>;
};

export type DailyStockUpdateWithWhereUniqueWithoutStockInput = {
  data: DailyStockUpdateWithoutStockInput;
  where: DailyStockWhereUniqueInput;
};

export type DailyStockUpdateWithoutStockInput = {
  adjusted_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  adjusted_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  committed_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  current_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  opening_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  order_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  transfer_qty_in?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transfer_qty_out?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type DailyStockUpsertWithWhereUniqueWithoutStockInput = {
  create: DailyStockCreateWithoutStockInput;
  update: DailyStockUpdateWithoutStockInput;
  where: DailyStockWhereUniqueInput;
};

export type DailyStockWhereInput = {
  AND?: InputMaybe<Array<DailyStockWhereInput>>;
  NOT?: InputMaybe<Array<DailyStockWhereInput>>;
  OR?: InputMaybe<Array<DailyStockWhereInput>>;
  adjusted_qty_in?: InputMaybe<DecimalFilter>;
  adjusted_qty_out?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  committed_qty?: InputMaybe<DecimalFilter>;
  current_qty?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<BigIntFilter>;
  opening_qty?: InputMaybe<DecimalFilter>;
  order_qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  sale_qty?: InputMaybe<DecimalFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_id?: InputMaybe<StringFilter>;
  store_id?: InputMaybe<StringFilter>;
  transfer_qty_in?: InputMaybe<DecimalFilter>;
  transfer_qty_out?: InputMaybe<DecimalFilter>;
};

export type DailyStockWhereUniqueInput = {
  AND?: InputMaybe<Array<DailyStockWhereInput>>;
  NOT?: InputMaybe<Array<DailyStockWhereInput>>;
  OR?: InputMaybe<Array<DailyStockWhereInput>>;
  adjusted_qty_in?: InputMaybe<DecimalFilter>;
  adjusted_qty_out?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  committed_qty?: InputMaybe<DecimalFilter>;
  current_qty?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  opening_qty?: InputMaybe<DecimalFilter>;
  order_qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  sale_qty?: InputMaybe<DecimalFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_date_stock_id?: InputMaybe<DailyStockStock_DateStock_IdCompoundUniqueInput>;
  stock_id?: InputMaybe<StringFilter>;
  store_id?: InputMaybe<StringFilter>;
  transfer_qty_in?: InputMaybe<DecimalFilter>;
  transfer_qty_out?: InputMaybe<DecimalFilter>;
};

export type DateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']['input']>;
};

export type DateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type DateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type DateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type DecimalFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Decimal']['input']>;
  divide?: InputMaybe<Scalars['Decimal']['input']>;
  increment?: InputMaybe<Scalars['Decimal']['input']>;
  multiply?: InputMaybe<Scalars['Decimal']['input']>;
  set?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DecimalFilter = {
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type DecimalWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDecimalFilter>;
  _min?: InputMaybe<NestedDecimalFilter>;
  _sum?: InputMaybe<NestedDecimalFilter>;
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type EnumCompositeAdjustmentTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<CompositeAdjustmentType>;
};

export type EnumCompositeAdjustmentTypeFilter = {
  equals?: InputMaybe<CompositeAdjustmentType>;
  in?: InputMaybe<Array<CompositeAdjustmentType>>;
  not?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  notIn?: InputMaybe<Array<CompositeAdjustmentType>>;
};

export type EnumCompositeAdjustmentTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  _min?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  equals?: InputMaybe<CompositeAdjustmentType>;
  in?: InputMaybe<Array<CompositeAdjustmentType>>;
  not?: InputMaybe<NestedEnumCompositeAdjustmentTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<CompositeAdjustmentType>>;
};

export type EnumPaymentStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<PaymentStatus>;
};

export type EnumPaymentStatusFilter = {
  equals?: InputMaybe<PaymentStatus>;
  in?: InputMaybe<Array<PaymentStatus>>;
  not?: InputMaybe<NestedEnumPaymentStatusFilter>;
  notIn?: InputMaybe<Array<PaymentStatus>>;
};

export type EnumPaymentStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPaymentStatusFilter>;
  _min?: InputMaybe<NestedEnumPaymentStatusFilter>;
  equals?: InputMaybe<PaymentStatus>;
  in?: InputMaybe<Array<PaymentStatus>>;
  not?: InputMaybe<NestedEnumPaymentStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<PaymentStatus>>;
};

export type EnumProductTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<ProductType>;
};

export type EnumProductTypeFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<ProductType>>;
  not?: InputMaybe<NestedEnumProductTypeFilter>;
  notIn?: InputMaybe<Array<ProductType>>;
};

export type EnumProductTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumProductTypeFilter>;
  _min?: InputMaybe<NestedEnumProductTypeFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<ProductType>>;
  not?: InputMaybe<NestedEnumProductTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<ProductType>>;
};

export type EnumPurchaseOrderStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<PurchaseOrderStatus>;
};

export type EnumPurchaseOrderStatusFilter = {
  equals?: InputMaybe<PurchaseOrderStatus>;
  in?: InputMaybe<Array<PurchaseOrderStatus>>;
  not?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  notIn?: InputMaybe<Array<PurchaseOrderStatus>>;
};

export type EnumPurchaseOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  equals?: InputMaybe<PurchaseOrderStatus>;
  in?: InputMaybe<Array<PurchaseOrderStatus>>;
  not?: InputMaybe<NestedEnumPurchaseOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<PurchaseOrderStatus>>;
};

export type EnumSaleAddonTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<SaleAddonType>;
};

export type EnumSaleAddonTypeFilter = {
  equals?: InputMaybe<SaleAddonType>;
  in?: InputMaybe<Array<SaleAddonType>>;
  not?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  notIn?: InputMaybe<Array<SaleAddonType>>;
};

export type EnumSaleAddonTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  _min?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  equals?: InputMaybe<SaleAddonType>;
  in?: InputMaybe<Array<SaleAddonType>>;
  not?: InputMaybe<NestedEnumSaleAddonTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<SaleAddonType>>;
};

export type EnumSaleStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<SaleStatus>;
};

export type EnumSaleStatusFilter = {
  equals?: InputMaybe<SaleStatus>;
  in?: InputMaybe<Array<SaleStatus>>;
  not?: InputMaybe<NestedEnumSaleStatusFilter>;
  notIn?: InputMaybe<Array<SaleStatus>>;
};

export type EnumSaleStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSaleStatusFilter>;
  _min?: InputMaybe<NestedEnumSaleStatusFilter>;
  equals?: InputMaybe<SaleStatus>;
  in?: InputMaybe<Array<SaleStatus>>;
  not?: InputMaybe<NestedEnumSaleStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<SaleStatus>>;
};

export type EnumStockAdjustmentTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<StockAdjustmentType>;
};

export type EnumStockAdjustmentTypeFilter = {
  equals?: InputMaybe<StockAdjustmentType>;
  in?: InputMaybe<Array<StockAdjustmentType>>;
  not?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  notIn?: InputMaybe<Array<StockAdjustmentType>>;
};

export type EnumStockAdjustmentTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  _min?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  equals?: InputMaybe<StockAdjustmentType>;
  in?: InputMaybe<Array<StockAdjustmentType>>;
  not?: InputMaybe<NestedEnumStockAdjustmentTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockAdjustmentType>>;
};

export type EnumStockHistoryRefTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<StockHistoryRefType>;
};

export type EnumStockHistoryRefTypeFilter = {
  equals?: InputMaybe<StockHistoryRefType>;
  in?: InputMaybe<Array<StockHistoryRefType>>;
  not?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  notIn?: InputMaybe<Array<StockHistoryRefType>>;
};

export type EnumStockHistoryRefTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  _min?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  equals?: InputMaybe<StockHistoryRefType>;
  in?: InputMaybe<Array<StockHistoryRefType>>;
  not?: InputMaybe<NestedEnumStockHistoryRefTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockHistoryRefType>>;
};

export type EnumStockTransactionItemRefTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<StockTransactionItemRefType>;
};

export type EnumStockTransactionItemRefTypeFilter = {
  equals?: InputMaybe<StockTransactionItemRefType>;
  in?: InputMaybe<Array<StockTransactionItemRefType>>;
  not?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  notIn?: InputMaybe<Array<StockTransactionItemRefType>>;
};

export type EnumStockTransactionItemRefTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  _min?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  equals?: InputMaybe<StockTransactionItemRefType>;
  in?: InputMaybe<Array<StockTransactionItemRefType>>;
  not?: InputMaybe<NestedEnumStockTransactionItemRefTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockTransactionItemRefType>>;
};

export type EnumStockTransactionTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<StockTransactionType>;
};

export type EnumStockTransactionTypeFilter = {
  equals?: InputMaybe<StockTransactionType>;
  in?: InputMaybe<Array<StockTransactionType>>;
  not?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  notIn?: InputMaybe<Array<StockTransactionType>>;
};

export type EnumStockTransactionTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  _min?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  equals?: InputMaybe<StockTransactionType>;
  in?: InputMaybe<Array<StockTransactionType>>;
  not?: InputMaybe<NestedEnumStockTransactionTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockTransactionType>>;
};

export type EnumTaxCalculationMethodFieldUpdateOperationsInput = {
  set?: InputMaybe<TaxCalculationMethod>;
};

export type EnumTaxCalculationMethodFilter = {
  equals?: InputMaybe<TaxCalculationMethod>;
  in?: InputMaybe<Array<TaxCalculationMethod>>;
  not?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  notIn?: InputMaybe<Array<TaxCalculationMethod>>;
};

export type EnumTaxCalculationMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  _min?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  equals?: InputMaybe<TaxCalculationMethod>;
  in?: InputMaybe<Array<TaxCalculationMethod>>;
  not?: InputMaybe<NestedEnumTaxCalculationMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TaxCalculationMethod>>;
};

export type EnumTaxationMethodFieldUpdateOperationsInput = {
  set?: InputMaybe<TaxationMethod>;
};

export type EnumTaxationMethodFilter = {
  equals?: InputMaybe<TaxationMethod>;
  in?: InputMaybe<Array<TaxationMethod>>;
  not?: InputMaybe<NestedEnumTaxationMethodFilter>;
  notIn?: InputMaybe<Array<TaxationMethod>>;
};

export type EnumTaxationMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTaxationMethodFilter>;
  _min?: InputMaybe<NestedEnumTaxationMethodFilter>;
  equals?: InputMaybe<TaxationMethod>;
  in?: InputMaybe<Array<TaxationMethod>>;
  not?: InputMaybe<NestedEnumTaxationMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TaxationMethod>>;
};

export type EnumTransferOrderStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<TransferOrderStatus>;
};

export type EnumTransferOrderStatusFilter = {
  equals?: InputMaybe<TransferOrderStatus>;
  in?: InputMaybe<Array<TransferOrderStatus>>;
  not?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  notIn?: InputMaybe<Array<TransferOrderStatus>>;
};

export type EnumTransferOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  equals?: InputMaybe<TransferOrderStatus>;
  in?: InputMaybe<Array<TransferOrderStatus>>;
  not?: InputMaybe<NestedEnumTransferOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TransferOrderStatus>>;
};

export type Image = {
  __typename?: 'Image';
  _count?: Maybe<ImageCount>;
  businesses: Array<Business>;
  created_at: Scalars['DateTime']['output'];
  customers: Array<Customer>;
  id: Scalars['String']['output'];
  image: Scalars['String']['output'];
  product_categories: Array<ProductCategory>;
  product_images: Array<Product>;
  products: Array<Product>;
  thumbnail?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  users: Array<User>;
};


export type ImageBusinessesArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type ImageCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type ImageProduct_CategoriesArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ImageProduct_ImagesArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type ImageProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type ImageUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export type ImageCount = {
  __typename?: 'ImageCount';
  businesses: Scalars['Int']['output'];
  customers: Scalars['Int']['output'];
  product_categories: Scalars['Int']['output'];
  product_images: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
  users: Scalars['Int']['output'];
};


export type ImageCountBusinessesArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type ImageCountCustomersArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type ImageCountProduct_CategoriesArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ImageCountProduct_ImagesArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type ImageCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type ImageCountUsersArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type ImageCountAggregate = {
  __typename?: 'ImageCountAggregate';
  _all: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image: Scalars['Int']['output'];
  thumbnail: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ImageCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ImageCreateInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ImageCreateNestedManyWithoutProduct_ImagesInput = {
  connect?: InputMaybe<Array<ImageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ImageCreateOrConnectWithoutProduct_ImagesInput>>;
  create?: InputMaybe<Array<ImageCreateWithoutProduct_ImagesInput>>;
};

export type ImageCreateNestedOneWithoutBusinessesInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutBusinessesInput>;
  create?: InputMaybe<ImageCreateWithoutBusinessesInput>;
};

export type ImageCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<ImageCreateWithoutCustomersInput>;
};

export type ImageCreateNestedOneWithoutProduct_CategoriesInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutProduct_CategoriesInput>;
  create?: InputMaybe<ImageCreateWithoutProduct_CategoriesInput>;
};

export type ImageCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ImageCreateWithoutProductsInput>;
};

export type ImageCreateNestedOneWithoutUsersInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<ImageCreateWithoutUsersInput>;
};

export type ImageCreateOrConnectWithoutBusinessesInput = {
  create: ImageCreateWithoutBusinessesInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateOrConnectWithoutCustomersInput = {
  create: ImageCreateWithoutCustomersInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateOrConnectWithoutProduct_CategoriesInput = {
  create: ImageCreateWithoutProduct_CategoriesInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateOrConnectWithoutProduct_ImagesInput = {
  create: ImageCreateWithoutProduct_ImagesInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateOrConnectWithoutProductsInput = {
  create: ImageCreateWithoutProductsInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateOrConnectWithoutUsersInput = {
  create: ImageCreateWithoutUsersInput;
  where: ImageWhereUniqueInput;
};

export type ImageCreateWithoutBusinessesInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateWithoutCustomersInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateWithoutProduct_CategoriesInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateWithoutProduct_ImagesInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateWithoutProductsInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutImageInput>;
};

export type ImageCreateWithoutUsersInput = {
  businesses?: InputMaybe<BusinessCreateNestedManyWithoutImageInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutImageInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  image: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutImageInput>;
  product_images?: InputMaybe<ProductCreateNestedManyWithoutImagesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutImageInput>;
  thumbnail?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ImageGroupBy = {
  __typename?: 'ImageGroupBy';
  _count?: Maybe<ImageCountAggregate>;
  _max?: Maybe<ImageMaxAggregate>;
  _min?: Maybe<ImageMinAggregate>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  image: Scalars['String']['output'];
  thumbnail?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ImageListRelationFilter = {
  every?: InputMaybe<ImageWhereInput>;
  none?: InputMaybe<ImageWhereInput>;
  some?: InputMaybe<ImageWhereInput>;
};

export type ImageMaxAggregate = {
  __typename?: 'ImageMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  thumbnail?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ImageMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ImageMinAggregate = {
  __typename?: 'ImageMinAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  thumbnail?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ImageMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ImageNullableRelationFilter = {
  is?: InputMaybe<ImageWhereInput>;
  isNot?: InputMaybe<ImageWhereInput>;
};

export type ImageOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ImageOrderByWithAggregationInput = {
  _count?: InputMaybe<ImageCountOrderByAggregateInput>;
  _max?: InputMaybe<ImageMaxOrderByAggregateInput>;
  _min?: InputMaybe<ImageMinOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  thumbnail?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ImageOrderByWithRelationInput = {
  businesses?: InputMaybe<BusinessOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  product_categories?: InputMaybe<ProductCategoryOrderByRelationAggregateInput>;
  product_images?: InputMaybe<ProductOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  thumbnail?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
  users?: InputMaybe<UserOrderByRelationAggregateInput>;
};

export enum ImageScalarFieldEnum {
  CreatedAt = 'created_at',
  Id = 'id',
  Image = 'image',
  Thumbnail = 'thumbnail',
  UpdatedAt = 'updated_at'
}

export type ImageScalarWhereInput = {
  AND?: InputMaybe<Array<ImageScalarWhereInput>>;
  NOT?: InputMaybe<Array<ImageScalarWhereInput>>;
  OR?: InputMaybe<Array<ImageScalarWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ImageScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ImageScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ImageScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ImageScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image?: InputMaybe<StringWithAggregatesFilter>;
  thumbnail?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ImageUpdateInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ImageUpdateManyWithWhereWithoutProduct_ImagesInput = {
  data: ImageUpdateManyMutationInput;
  where: ImageScalarWhereInput;
};

export type ImageUpdateManyWithoutProduct_ImagesNestedInput = {
  connect?: InputMaybe<Array<ImageWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ImageCreateOrConnectWithoutProduct_ImagesInput>>;
  create?: InputMaybe<Array<ImageCreateWithoutProduct_ImagesInput>>;
  delete?: InputMaybe<Array<ImageWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ImageScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ImageWhereUniqueInput>>;
  set?: InputMaybe<Array<ImageWhereUniqueInput>>;
  update?: InputMaybe<Array<ImageUpdateWithWhereUniqueWithoutProduct_ImagesInput>>;
  updateMany?: InputMaybe<Array<ImageUpdateManyWithWhereWithoutProduct_ImagesInput>>;
  upsert?: InputMaybe<Array<ImageUpsertWithWhereUniqueWithoutProduct_ImagesInput>>;
};

export type ImageUpdateOneWithoutBusinessesNestedInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutBusinessesInput>;
  create?: InputMaybe<ImageCreateWithoutBusinessesInput>;
  delete?: InputMaybe<ImageWhereInput>;
  disconnect?: InputMaybe<ImageWhereInput>;
  update?: InputMaybe<ImageUpdateToOneWithWhereWithoutBusinessesInput>;
  upsert?: InputMaybe<ImageUpsertWithoutBusinessesInput>;
};

export type ImageUpdateOneWithoutCustomersNestedInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<ImageCreateWithoutCustomersInput>;
  delete?: InputMaybe<ImageWhereInput>;
  disconnect?: InputMaybe<ImageWhereInput>;
  update?: InputMaybe<ImageUpdateToOneWithWhereWithoutCustomersInput>;
  upsert?: InputMaybe<ImageUpsertWithoutCustomersInput>;
};

export type ImageUpdateOneWithoutProduct_CategoriesNestedInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutProduct_CategoriesInput>;
  create?: InputMaybe<ImageCreateWithoutProduct_CategoriesInput>;
  delete?: InputMaybe<ImageWhereInput>;
  disconnect?: InputMaybe<ImageWhereInput>;
  update?: InputMaybe<ImageUpdateToOneWithWhereWithoutProduct_CategoriesInput>;
  upsert?: InputMaybe<ImageUpsertWithoutProduct_CategoriesInput>;
};

export type ImageUpdateOneWithoutProductsNestedInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ImageCreateWithoutProductsInput>;
  delete?: InputMaybe<ImageWhereInput>;
  disconnect?: InputMaybe<ImageWhereInput>;
  update?: InputMaybe<ImageUpdateToOneWithWhereWithoutProductsInput>;
  upsert?: InputMaybe<ImageUpsertWithoutProductsInput>;
};

export type ImageUpdateOneWithoutUsersNestedInput = {
  connect?: InputMaybe<ImageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ImageCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<ImageCreateWithoutUsersInput>;
  delete?: InputMaybe<ImageWhereInput>;
  disconnect?: InputMaybe<ImageWhereInput>;
  update?: InputMaybe<ImageUpdateToOneWithWhereWithoutUsersInput>;
  upsert?: InputMaybe<ImageUpsertWithoutUsersInput>;
};

export type ImageUpdateToOneWithWhereWithoutBusinessesInput = {
  data: ImageUpdateWithoutBusinessesInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpdateToOneWithWhereWithoutCustomersInput = {
  data: ImageUpdateWithoutCustomersInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpdateToOneWithWhereWithoutProduct_CategoriesInput = {
  data: ImageUpdateWithoutProduct_CategoriesInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpdateToOneWithWhereWithoutProductsInput = {
  data: ImageUpdateWithoutProductsInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpdateToOneWithWhereWithoutUsersInput = {
  data: ImageUpdateWithoutUsersInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpdateWithWhereUniqueWithoutProduct_ImagesInput = {
  data: ImageUpdateWithoutProduct_ImagesInput;
  where: ImageWhereUniqueInput;
};

export type ImageUpdateWithoutBusinessesInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateWithoutCustomersInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateWithoutProduct_CategoriesInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateWithoutProduct_ImagesInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateWithoutProductsInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutImageNestedInput>;
};

export type ImageUpdateWithoutUsersInput = {
  businesses?: InputMaybe<BusinessUpdateManyWithoutImageNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutImageNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutImageNestedInput>;
  product_images?: InputMaybe<ProductUpdateManyWithoutImagesNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutImageNestedInput>;
  thumbnail?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ImageUpsertWithWhereUniqueWithoutProduct_ImagesInput = {
  create: ImageCreateWithoutProduct_ImagesInput;
  update: ImageUpdateWithoutProduct_ImagesInput;
  where: ImageWhereUniqueInput;
};

export type ImageUpsertWithoutBusinessesInput = {
  create: ImageCreateWithoutBusinessesInput;
  update: ImageUpdateWithoutBusinessesInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpsertWithoutCustomersInput = {
  create: ImageCreateWithoutCustomersInput;
  update: ImageUpdateWithoutCustomersInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpsertWithoutProduct_CategoriesInput = {
  create: ImageCreateWithoutProduct_CategoriesInput;
  update: ImageUpdateWithoutProduct_CategoriesInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpsertWithoutProductsInput = {
  create: ImageCreateWithoutProductsInput;
  update: ImageUpdateWithoutProductsInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageUpsertWithoutUsersInput = {
  create: ImageCreateWithoutUsersInput;
  update: ImageUpdateWithoutUsersInput;
  where?: InputMaybe<ImageWhereInput>;
};

export type ImageWhereInput = {
  AND?: InputMaybe<Array<ImageWhereInput>>;
  NOT?: InputMaybe<Array<ImageWhereInput>>;
  OR?: InputMaybe<Array<ImageWhereInput>>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  product_images?: InputMaybe<ProductListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type ImageWhereUniqueInput = {
  AND?: InputMaybe<Array<ImageWhereInput>>;
  NOT?: InputMaybe<Array<ImageWhereInput>>;
  OR?: InputMaybe<Array<ImageWhereInput>>;
  businesses?: InputMaybe<BusinessListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<StringFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  product_images?: InputMaybe<ProductListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  thumbnail?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']['input']>;
  divide?: InputMaybe<Scalars['Int']['input']>;
  increment?: InputMaybe<Scalars['Int']['input']>;
  multiply?: InputMaybe<Scalars['Int']['input']>;
  set?: InputMaybe<Scalars['Int']['input']>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type IntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type InventorySummaryResult = {
  __typename?: 'InventorySummaryResult';
  details: Array<DailyStock>;
  product: Product;
};

export type InventoryValuation = {
  __typename?: 'InventoryValuation';
  closing_stock: Scalars['String']['output'];
  closing_stock_value: Scalars['String']['output'];
  details: Array<InventoryValuationDetail>;
  opening_stock: Scalars['String']['output'];
  opening_stock_value: Scalars['String']['output'];
  stock_id: Scalars['String']['output'];
  stock_name: Scalars['String']['output'];
  store_id: Scalars['String']['output'];
  store_name: Scalars['String']['output'];
};

export type InventoryValuationDetail = {
  __typename?: 'InventoryValuationDetail';
  asset_value: Scalars['String']['output'];
  closing_qty: Scalars['String']['output'];
  qty: Scalars['String']['output'];
  stock_id: Scalars['String']['output'];
  transaction_date: Scalars['DateTime']['output'];
  transaction_description?: Maybe<Scalars['String']['output']>;
  unit_cost: Scalars['String']['output'];
};

export type InventoryValuationResult = {
  __typename?: 'InventoryValuationResult';
  product: Product;
  valuations: Array<InventoryValuation>;
};

export type InventoryValuationSummaryResult = {
  __typename?: 'InventoryValuationSummaryResult';
  details: Array<StockHistory>;
  product: Product;
};

export type Location = {
  __typename?: 'Location';
  _count?: Maybe<LocationCount>;
  address?: Maybe<Address>;
  address_id?: Maybe<Scalars['String']['output']>;
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_default?: Maybe<Business>;
  name: Scalars['String']['output'];
  stores: Array<Store>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type LocationAddressArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type LocationIs_DefaultArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type LocationStoresArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};

export type LocationCount = {
  __typename?: 'LocationCount';
  stores: Scalars['Int']['output'];
};


export type LocationCountStoresArgs = {
  where?: InputMaybe<StoreWhereInput>;
};

export type LocationCountAggregate = {
  __typename?: 'LocationCountAggregate';
  _all: Scalars['Int']['output'];
  address_id: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type LocationCountOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type LocationCreateInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutLocationInput>;
  business: BusinessCreateNestedOneWithoutLocationsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_LocationInput>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutLocationInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateManyBusinessInput = {
  address_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateManyBusinessInputEnvelope = {
  data: Array<LocationCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocationCreateManyInput = {
  address_id?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<LocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<LocationCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<LocationCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<LocationCreateManyBusinessInputEnvelope>;
};

export type LocationCreateNestedOneWithoutAddressInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<LocationCreateWithoutAddressInput>;
};

export type LocationCreateNestedOneWithoutIs_DefaultInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<LocationCreateWithoutIs_DefaultInput>;
};

export type LocationCreateNestedOneWithoutStoresInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutStoresInput>;
  create?: InputMaybe<LocationCreateWithoutStoresInput>;
};

export type LocationCreateOrConnectWithoutAddressInput = {
  create: LocationCreateWithoutAddressInput;
  where: LocationWhereUniqueInput;
};

export type LocationCreateOrConnectWithoutBusinessInput = {
  create: LocationCreateWithoutBusinessInput;
  where: LocationWhereUniqueInput;
};

export type LocationCreateOrConnectWithoutIs_DefaultInput = {
  create: LocationCreateWithoutIs_DefaultInput;
  where: LocationWhereUniqueInput;
};

export type LocationCreateOrConnectWithoutStoresInput = {
  create: LocationCreateWithoutStoresInput;
  where: LocationWhereUniqueInput;
};

export type LocationCreateWithoutAddressInput = {
  business: BusinessCreateNestedOneWithoutLocationsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_LocationInput>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutLocationInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateWithoutBusinessInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutLocationInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_LocationInput>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutLocationInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateWithoutIs_DefaultInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutLocationInput>;
  business: BusinessCreateNestedOneWithoutLocationsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutLocationInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationCreateWithoutStoresInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutLocationInput>;
  business: BusinessCreateNestedOneWithoutLocationsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_LocationInput>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type LocationGroupBy = {
  __typename?: 'LocationGroupBy';
  _count?: Maybe<LocationCountAggregate>;
  _max?: Maybe<LocationMaxAggregate>;
  _min?: Maybe<LocationMinAggregate>;
  address_id?: Maybe<Scalars['String']['output']>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type LocationListRelationFilter = {
  every?: InputMaybe<LocationWhereInput>;
  none?: InputMaybe<LocationWhereInput>;
  some?: InputMaybe<LocationWhereInput>;
};

export type LocationMaxAggregate = {
  __typename?: 'LocationMaxAggregate';
  address_id?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type LocationMaxOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type LocationMinAggregate = {
  __typename?: 'LocationMinAggregate';
  address_id?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type LocationMinOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type LocationNullableRelationFilter = {
  is?: InputMaybe<LocationWhereInput>;
  isNot?: InputMaybe<LocationWhereInput>;
};

export type LocationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type LocationOrderByWithAggregationInput = {
  _count?: InputMaybe<LocationCountOrderByAggregateInput>;
  _max?: InputMaybe<LocationMaxOrderByAggregateInput>;
  _min?: InputMaybe<LocationMinOrderByAggregateInput>;
  address_id?: InputMaybe<SortOrderInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type LocationOrderByWithRelationInput = {
  address?: InputMaybe<AddressOrderByWithRelationInput>;
  address_id?: InputMaybe<SortOrderInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<BusinessOrderByWithRelationInput>;
  name?: InputMaybe<SortOrder>;
  stores?: InputMaybe<StoreOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type LocationRelationFilter = {
  is?: InputMaybe<LocationWhereInput>;
  isNot?: InputMaybe<LocationWhereInput>;
};

export enum LocationScalarFieldEnum {
  AddressId = 'address_id',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updated_at'
}

export type LocationScalarWhereInput = {
  AND?: InputMaybe<Array<LocationScalarWhereInput>>;
  NOT?: InputMaybe<Array<LocationScalarWhereInput>>;
  OR?: InputMaybe<Array<LocationScalarWhereInput>>;
  address_id?: InputMaybe<StringNullableFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type LocationScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<LocationScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<LocationScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<LocationScalarWhereWithAggregatesInput>>;
  address_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type LocationUpdateInput = {
  address?: InputMaybe<AddressUpdateOneWithoutLocationNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutLocationsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_LocationNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutLocationNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpdateManyWithWhereWithoutBusinessInput = {
  data: LocationUpdateManyMutationInput;
  where: LocationScalarWhereInput;
};

export type LocationUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<LocationWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<LocationCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<LocationCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<LocationCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<LocationWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<LocationScalarWhereInput>>;
  disconnect?: InputMaybe<Array<LocationWhereUniqueInput>>;
  set?: InputMaybe<Array<LocationWhereUniqueInput>>;
  update?: InputMaybe<Array<LocationUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<LocationUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<LocationUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type LocationUpdateOneRequiredWithoutStoresNestedInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutStoresInput>;
  create?: InputMaybe<LocationCreateWithoutStoresInput>;
  update?: InputMaybe<LocationUpdateToOneWithWhereWithoutStoresInput>;
  upsert?: InputMaybe<LocationUpsertWithoutStoresInput>;
};

export type LocationUpdateOneWithoutAddressNestedInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<LocationCreateWithoutAddressInput>;
  delete?: InputMaybe<LocationWhereInput>;
  disconnect?: InputMaybe<LocationWhereInput>;
  update?: InputMaybe<LocationUpdateToOneWithWhereWithoutAddressInput>;
  upsert?: InputMaybe<LocationUpsertWithoutAddressInput>;
};

export type LocationUpdateOneWithoutIs_DefaultNestedInput = {
  connect?: InputMaybe<LocationWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LocationCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<LocationCreateWithoutIs_DefaultInput>;
  delete?: InputMaybe<LocationWhereInput>;
  disconnect?: InputMaybe<LocationWhereInput>;
  update?: InputMaybe<LocationUpdateToOneWithWhereWithoutIs_DefaultInput>;
  upsert?: InputMaybe<LocationUpsertWithoutIs_DefaultInput>;
};

export type LocationUpdateToOneWithWhereWithoutAddressInput = {
  data: LocationUpdateWithoutAddressInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationUpdateToOneWithWhereWithoutIs_DefaultInput = {
  data: LocationUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationUpdateToOneWithWhereWithoutStoresInput = {
  data: LocationUpdateWithoutStoresInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationUpdateWithWhereUniqueWithoutBusinessInput = {
  data: LocationUpdateWithoutBusinessInput;
  where: LocationWhereUniqueInput;
};

export type LocationUpdateWithoutAddressInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutLocationsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_LocationNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutLocationNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpdateWithoutBusinessInput = {
  address?: InputMaybe<AddressUpdateOneWithoutLocationNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_LocationNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutLocationNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpdateWithoutIs_DefaultInput = {
  address?: InputMaybe<AddressUpdateOneWithoutLocationNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutLocationsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutLocationNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpdateWithoutStoresInput = {
  address?: InputMaybe<AddressUpdateOneWithoutLocationNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutLocationsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_LocationNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type LocationUpsertWithWhereUniqueWithoutBusinessInput = {
  create: LocationCreateWithoutBusinessInput;
  update: LocationUpdateWithoutBusinessInput;
  where: LocationWhereUniqueInput;
};

export type LocationUpsertWithoutAddressInput = {
  create: LocationCreateWithoutAddressInput;
  update: LocationUpdateWithoutAddressInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationUpsertWithoutIs_DefaultInput = {
  create: LocationCreateWithoutIs_DefaultInput;
  update: LocationUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationUpsertWithoutStoresInput = {
  create: LocationCreateWithoutStoresInput;
  update: LocationUpdateWithoutStoresInput;
  where?: InputMaybe<LocationWhereInput>;
};

export type LocationWhereInput = {
  AND?: InputMaybe<Array<LocationWhereInput>>;
  NOT?: InputMaybe<Array<LocationWhereInput>>;
  OR?: InputMaybe<Array<LocationWhereInput>>;
  address?: InputMaybe<AddressNullableRelationFilter>;
  address_id?: InputMaybe<StringNullableFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BusinessNullableRelationFilter>;
  name?: InputMaybe<StringFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type LocationWhereUniqueInput = {
  AND?: InputMaybe<Array<LocationWhereInput>>;
  NOT?: InputMaybe<Array<LocationWhereInput>>;
  OR?: InputMaybe<Array<LocationWhereInput>>;
  address?: InputMaybe<AddressNullableRelationFilter>;
  address_id?: InputMaybe<Scalars['String']['input']>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessNullableRelationFilter>;
  name?: InputMaybe<StringFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type Mutation = {
  __typename?: 'Mutation';
  createManyAddress: AffectedRowsOutput;
  createManyAppVersion: AffectedRowsOutput;
  createManyBusiness: AffectedRowsOutput;
  createManyCompositeAdjustment: AffectedRowsOutput;
  createManyCompositeItem: AffectedRowsOutput;
  createManyCurrency: AffectedRowsOutput;
  createManyCustomer: AffectedRowsOutput;
  createManyDailySale: AffectedRowsOutput;
  createManyDailySaleAddonItem: AffectedRowsOutput;
  createManyDailySaleDetail: AffectedRowsOutput;
  createManyDailySaleItem: AffectedRowsOutput;
  createManyDailyStock: AffectedRowsOutput;
  createManyImage: AffectedRowsOutput;
  createManyLocation: AffectedRowsOutput;
  createManyPaymentAccount: AffectedRowsOutput;
  createManyPaymentDetail: AffectedRowsOutput;
  createManyPaymentMethod: AffectedRowsOutput;
  createManyPermission: AffectedRowsOutput;
  createManyProduct: AffectedRowsOutput;
  createManyProductCategory: AffectedRowsOutput;
  createManyProductStock: AffectedRowsOutput;
  createManyProductStockItem: AffectedRowsOutput;
  createManyProductUnit: AffectedRowsOutput;
  createManyProductVariant: AffectedRowsOutput;
  createManyProductVariantAttribute: AffectedRowsOutput;
  createManyPurchaseOrder: AffectedRowsOutput;
  createManyRole: AffectedRowsOutput;
  createManySale: AffectedRowsOutput;
  createManySaleAddon: AffectedRowsOutput;
  createManySaleAddonItem: AffectedRowsOutput;
  createManySaleChannel: AffectedRowsOutput;
  createManySaleItem: AffectedRowsOutput;
  createManySaleItemStock: AffectedRowsOutput;
  createManySequenceData: AffectedRowsOutput;
  createManyStockAdjustment: AffectedRowsOutput;
  createManyStockHistory: AffectedRowsOutput;
  createManyStockTransaction: AffectedRowsOutput;
  createManyStockTransactionItem: AffectedRowsOutput;
  createManyStore: AffectedRowsOutput;
  createManySupplier: AffectedRowsOutput;
  createManySystemData: AffectedRowsOutput;
  createManySystemLog: AffectedRowsOutput;
  createManyTaxSetting: AffectedRowsOutput;
  createManyTransferOrder: AffectedRowsOutput;
  createManyUser: AffectedRowsOutput;
  createOneAddress: Address;
  createOneAppVersion: AppVersion;
  createOneBusiness: Business;
  createOneCompositeAdjustment: CompositeAdjustment;
  createOneCompositeAdjustment2?: Maybe<CompositeAdjustment>;
  createOneCompositeItem: CompositeItem;
  createOneCurrency: Currency;
  createOneCustomer?: Maybe<Customer>;
  createOneDailySale: DailySale;
  createOneDailySaleAddonItem: DailySaleAddonItem;
  createOneDailySaleDetail: DailySaleDetail;
  createOneDailySaleItem: DailySaleItem;
  createOneDailyStock: DailyStock;
  createOneImage: Image;
  createOneLocation: Location;
  createOnePaymentAccount: PaymentAccount;
  createOnePaymentDetail: PaymentDetail;
  createOnePaymentMethod: PaymentMethod;
  createOnePermission: Permission;
  createOneProduct: Product;
  createOneProduct2?: Maybe<Product>;
  createOneProductCategory: ProductCategory;
  createOneProductStock: ProductStock;
  createOneProductStockItem: ProductStockItem;
  createOneProductUnit: ProductUnit;
  createOneProductVariant: ProductVariant;
  createOneProductVariantAttribute: ProductVariantAttribute;
  createOnePurchaseOrder: PurchaseOrder;
  createOnePurchaseOrder2?: Maybe<PurchaseOrder>;
  createOneRole: Role;
  createOneSale: Sale;
  createOneSale2?: Maybe<Sale>;
  createOneSaleAddon: SaleAddon;
  createOneSaleAddonItem: SaleAddonItem;
  createOneSaleChannel: SaleChannel;
  createOneSaleItem: SaleItem;
  createOneSaleItemStock: SaleItemStock;
  createOneSequenceData: SequenceData;
  createOneStockAdjustment: StockAdjustment;
  createOneStockAdjustment2?: Maybe<StockAdjustment>;
  createOneStockHistory: StockHistory;
  createOneStockTransaction: StockTransaction;
  createOneStockTransactionItem: StockTransactionItem;
  createOneStore: Store;
  createOneSupplier: Supplier;
  createOneSystemData: SystemData;
  createOneSystemLog: SystemLog;
  createOneTaxSetting: TaxSetting;
  createOneTransferOrder: TransferOrder;
  createOneTransferOrder2?: Maybe<TransferOrder>;
  createOneUser: User;
  deleteManyAddress: AffectedRowsOutput;
  deleteManyAppVersion: AffectedRowsOutput;
  deleteManyBusiness: AffectedRowsOutput;
  deleteManyCompositeAdjustment: AffectedRowsOutput;
  deleteManyCompositeItem: AffectedRowsOutput;
  deleteManyCurrency: AffectedRowsOutput;
  deleteManyCustomer: AffectedRowsOutput;
  deleteManyDailySale: AffectedRowsOutput;
  deleteManyDailySaleAddonItem: AffectedRowsOutput;
  deleteManyDailySaleDetail: AffectedRowsOutput;
  deleteManyDailySaleItem: AffectedRowsOutput;
  deleteManyDailyStock: AffectedRowsOutput;
  deleteManyImage: AffectedRowsOutput;
  deleteManyLocation: AffectedRowsOutput;
  deleteManyPaymentAccount: AffectedRowsOutput;
  deleteManyPaymentDetail: AffectedRowsOutput;
  deleteManyPaymentMethod: AffectedRowsOutput;
  deleteManyPermission: AffectedRowsOutput;
  deleteManyProduct: AffectedRowsOutput;
  deleteManyProductCategory: AffectedRowsOutput;
  deleteManyProductStock: AffectedRowsOutput;
  deleteManyProductStockItem: AffectedRowsOutput;
  deleteManyProductUnit: AffectedRowsOutput;
  deleteManyProductVariant: AffectedRowsOutput;
  deleteManyProductVariantAttribute: AffectedRowsOutput;
  deleteManyPurchaseOrder: AffectedRowsOutput;
  deleteManyRole: AffectedRowsOutput;
  deleteManySale: AffectedRowsOutput;
  deleteManySaleAddon: AffectedRowsOutput;
  deleteManySaleAddonItem: AffectedRowsOutput;
  deleteManySaleChannel: AffectedRowsOutput;
  deleteManySaleItem: AffectedRowsOutput;
  deleteManySaleItemStock: AffectedRowsOutput;
  deleteManySequenceData: AffectedRowsOutput;
  deleteManyStockAdjustment: AffectedRowsOutput;
  deleteManyStockHistory: AffectedRowsOutput;
  deleteManyStockTransaction: AffectedRowsOutput;
  deleteManyStockTransactionItem: AffectedRowsOutput;
  deleteManyStore: AffectedRowsOutput;
  deleteManySupplier: AffectedRowsOutput;
  deleteManySystemData: AffectedRowsOutput;
  deleteManySystemLog: AffectedRowsOutput;
  deleteManyTaxSetting: AffectedRowsOutput;
  deleteManyTransferOrder: AffectedRowsOutput;
  deleteManyUser: AffectedRowsOutput;
  deleteOneAddress?: Maybe<Address>;
  deleteOneAppVersion?: Maybe<AppVersion>;
  deleteOneBusiness?: Maybe<Business>;
  deleteOneCompositeAdjustment?: Maybe<CompositeAdjustment>;
  deleteOneCompositeItem?: Maybe<CompositeItem>;
  deleteOneCurrency?: Maybe<Currency>;
  deleteOneCustomer?: Maybe<Customer>;
  deleteOneDailySale?: Maybe<DailySale>;
  deleteOneDailySaleAddonItem?: Maybe<DailySaleAddonItem>;
  deleteOneDailySaleDetail?: Maybe<DailySaleDetail>;
  deleteOneDailySaleItem?: Maybe<DailySaleItem>;
  deleteOneDailyStock?: Maybe<DailyStock>;
  deleteOneImage?: Maybe<Image>;
  deleteOneLocation?: Maybe<Location>;
  deleteOnePaymentAccount?: Maybe<PaymentAccount>;
  deleteOnePaymentDetail?: Maybe<PaymentDetail>;
  deleteOnePaymentMethod?: Maybe<PaymentMethod>;
  deleteOnePermission?: Maybe<Permission>;
  deleteOneProduct?: Maybe<Product>;
  deleteOneProductCategory?: Maybe<ProductCategory>;
  deleteOneProductStock?: Maybe<ProductStock>;
  deleteOneProductStockItem?: Maybe<ProductStockItem>;
  deleteOneProductUnit?: Maybe<ProductUnit>;
  deleteOneProductVariant?: Maybe<ProductVariant>;
  deleteOneProductVariantAttribute?: Maybe<ProductVariantAttribute>;
  deleteOnePurchaseOrder?: Maybe<PurchaseOrder>;
  deleteOneRole?: Maybe<Role>;
  deleteOneSale?: Maybe<Sale>;
  deleteOneSaleAddon?: Maybe<SaleAddon>;
  deleteOneSaleAddonItem?: Maybe<SaleAddonItem>;
  deleteOneSaleChannel?: Maybe<SaleChannel>;
  deleteOneSaleItem?: Maybe<SaleItem>;
  deleteOneSaleItemStock?: Maybe<SaleItemStock>;
  deleteOneSequenceData?: Maybe<SequenceData>;
  deleteOneStockAdjustment?: Maybe<StockAdjustment>;
  deleteOneStockHistory?: Maybe<StockHistory>;
  deleteOneStockTransaction?: Maybe<StockTransaction>;
  deleteOneStockTransactionItem?: Maybe<StockTransactionItem>;
  deleteOneStore?: Maybe<Store>;
  deleteOneSupplier?: Maybe<Supplier>;
  deleteOneSystemData?: Maybe<SystemData>;
  deleteOneSystemLog?: Maybe<SystemLog>;
  deleteOneTaxSetting?: Maybe<TaxSetting>;
  deleteOneTransferOrder?: Maybe<TransferOrder>;
  deleteOneTransferOrder2?: Maybe<TransferOrder>;
  deleteOneUser?: Maybe<User>;
  updateManyAddress: AffectedRowsOutput;
  updateManyAppVersion: AffectedRowsOutput;
  updateManyBusiness: AffectedRowsOutput;
  updateManyCompositeAdjustment: AffectedRowsOutput;
  updateManyCompositeItem: AffectedRowsOutput;
  updateManyCurrency: AffectedRowsOutput;
  updateManyCustomer: AffectedRowsOutput;
  updateManyDailySale: AffectedRowsOutput;
  updateManyDailySaleAddonItem: AffectedRowsOutput;
  updateManyDailySaleDetail: AffectedRowsOutput;
  updateManyDailySaleItem: AffectedRowsOutput;
  updateManyDailyStock: AffectedRowsOutput;
  updateManyImage: AffectedRowsOutput;
  updateManyLocation: AffectedRowsOutput;
  updateManyPaymentAccount: AffectedRowsOutput;
  updateManyPaymentDetail: AffectedRowsOutput;
  updateManyPaymentMethod: AffectedRowsOutput;
  updateManyPermission: AffectedRowsOutput;
  updateManyProduct: AffectedRowsOutput;
  updateManyProductCategory: AffectedRowsOutput;
  updateManyProductStock: AffectedRowsOutput;
  updateManyProductStockItem: AffectedRowsOutput;
  updateManyProductUnit: AffectedRowsOutput;
  updateManyProductVariant: AffectedRowsOutput;
  updateManyProductVariantAttribute: AffectedRowsOutput;
  updateManyPurchaseOrder: AffectedRowsOutput;
  updateManyRole: AffectedRowsOutput;
  updateManySale: AffectedRowsOutput;
  updateManySaleAddon: AffectedRowsOutput;
  updateManySaleAddonItem: AffectedRowsOutput;
  updateManySaleChannel: AffectedRowsOutput;
  updateManySaleItem: AffectedRowsOutput;
  updateManySaleItemStock: AffectedRowsOutput;
  updateManySequenceData: AffectedRowsOutput;
  updateManyStockAdjustment: AffectedRowsOutput;
  updateManyStockHistory: AffectedRowsOutput;
  updateManyStockTransaction: AffectedRowsOutput;
  updateManyStockTransactionItem: AffectedRowsOutput;
  updateManyStore: AffectedRowsOutput;
  updateManySupplier: AffectedRowsOutput;
  updateManySystemData: AffectedRowsOutput;
  updateManySystemLog: AffectedRowsOutput;
  updateManyTaxSetting: AffectedRowsOutput;
  updateManyTransferOrder: AffectedRowsOutput;
  updateManyUser: AffectedRowsOutput;
  updateOneAddress?: Maybe<Address>;
  updateOneAppVersion?: Maybe<AppVersion>;
  updateOneBusiness?: Maybe<Business>;
  updateOneCompositeAdjustment?: Maybe<CompositeAdjustment>;
  updateOneCompositeItem?: Maybe<CompositeItem>;
  updateOneCurrency?: Maybe<Currency>;
  updateOneCustomer?: Maybe<Customer>;
  updateOneDailySale?: Maybe<DailySale>;
  updateOneDailySaleAddonItem?: Maybe<DailySaleAddonItem>;
  updateOneDailySaleDetail?: Maybe<DailySaleDetail>;
  updateOneDailySaleItem?: Maybe<DailySaleItem>;
  updateOneDailyStock?: Maybe<DailyStock>;
  updateOneImage?: Maybe<Image>;
  updateOneLocation?: Maybe<Location>;
  updateOnePaymentAccount?: Maybe<PaymentAccount>;
  updateOnePaymentDetail?: Maybe<PaymentDetail>;
  updateOnePaymentMethod?: Maybe<PaymentMethod>;
  updateOnePermission?: Maybe<Permission>;
  updateOneProduct?: Maybe<Product>;
  updateOneProduct2?: Maybe<Product>;
  updateOneProductCategory?: Maybe<ProductCategory>;
  updateOneProductStock?: Maybe<ProductStock>;
  updateOneProductStockItem?: Maybe<ProductStockItem>;
  updateOneProductUnit?: Maybe<ProductUnit>;
  updateOneProductVariant?: Maybe<ProductVariant>;
  updateOneProductVariantAttribute?: Maybe<ProductVariantAttribute>;
  updateOnePurchaseOrder?: Maybe<PurchaseOrder>;
  updateOnePurchaseOrder2?: Maybe<PurchaseOrder>;
  updateOneRole?: Maybe<Role>;
  updateOneSale?: Maybe<Sale>;
  updateOneSale2?: Maybe<Sale>;
  updateOneSaleAddon?: Maybe<SaleAddon>;
  updateOneSaleAddonItem?: Maybe<SaleAddonItem>;
  updateOneSaleChannel?: Maybe<SaleChannel>;
  updateOneSaleItem?: Maybe<SaleItem>;
  updateOneSaleItemStock?: Maybe<SaleItemStock>;
  updateOneSequenceData?: Maybe<SequenceData>;
  updateOneStockAdjustment?: Maybe<StockAdjustment>;
  updateOneStockHistory?: Maybe<StockHistory>;
  updateOneStockTransaction?: Maybe<StockTransaction>;
  updateOneStockTransactionItem?: Maybe<StockTransactionItem>;
  updateOneStore?: Maybe<Store>;
  updateOneSupplier?: Maybe<Supplier>;
  updateOneSystemData?: Maybe<SystemData>;
  updateOneSystemLog?: Maybe<SystemLog>;
  updateOneTaxSetting?: Maybe<TaxSetting>;
  updateOneTransferOrder?: Maybe<TransferOrder>;
  updateOneTransferOrder2?: Maybe<TransferOrder>;
  updateOneUser?: Maybe<User>;
  uploadManyFile?: Maybe<Array<UploadResult>>;
  uploadOneFile?: Maybe<UploadResult>;
  upsertOneAddress: Address;
  upsertOneAppVersion: AppVersion;
  upsertOneBusiness: Business;
  upsertOneCompositeAdjustment: CompositeAdjustment;
  upsertOneCompositeItem: CompositeItem;
  upsertOneCurrency: Currency;
  upsertOneCustomer: Customer;
  upsertOneDailySale: DailySale;
  upsertOneDailySaleAddonItem: DailySaleAddonItem;
  upsertOneDailySaleDetail: DailySaleDetail;
  upsertOneDailySaleItem: DailySaleItem;
  upsertOneDailyStock: DailyStock;
  upsertOneImage: Image;
  upsertOneLocation: Location;
  upsertOnePaymentAccount: PaymentAccount;
  upsertOnePaymentDetail: PaymentDetail;
  upsertOnePaymentMethod: PaymentMethod;
  upsertOnePermission: Permission;
  upsertOneProduct: Product;
  upsertOneProductCategory: ProductCategory;
  upsertOneProductStock: ProductStock;
  upsertOneProductStockItem: ProductStockItem;
  upsertOneProductUnit: ProductUnit;
  upsertOneProductVariant: ProductVariant;
  upsertOneProductVariantAttribute: ProductVariantAttribute;
  upsertOnePurchaseOrder: PurchaseOrder;
  upsertOneRole: Role;
  upsertOneSale: Sale;
  upsertOneSaleAddon: SaleAddon;
  upsertOneSaleAddonItem: SaleAddonItem;
  upsertOneSaleChannel: SaleChannel;
  upsertOneSaleItem: SaleItem;
  upsertOneSaleItemStock: SaleItemStock;
  upsertOneSequenceData: SequenceData;
  upsertOneStockAdjustment: StockAdjustment;
  upsertOneStockHistory: StockHistory;
  upsertOneStockTransaction: StockTransaction;
  upsertOneStockTransactionItem: StockTransactionItem;
  upsertOneStore: Store;
  upsertOneSupplier: Supplier;
  upsertOneSystemData: SystemData;
  upsertOneSystemLog: SystemLog;
  upsertOneTaxSetting: TaxSetting;
  upsertOneTransferOrder: TransferOrder;
  upsertOneUser: User;
};


export type MutationCreateManyAddressArgs = {
  data: Array<AddressCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyAppVersionArgs = {
  data: Array<AppVersionCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyBusinessArgs = {
  data: Array<BusinessCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyCompositeAdjustmentArgs = {
  data: Array<CompositeAdjustmentCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyCompositeItemArgs = {
  data: Array<CompositeItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyCurrencyArgs = {
  data: Array<CurrencyCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyCustomerArgs = {
  data: Array<CustomerCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyDailySaleArgs = {
  data: Array<DailySaleCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyDailySaleAddonItemArgs = {
  data: Array<DailySaleAddonItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyDailySaleDetailArgs = {
  data: Array<DailySaleDetailCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyDailySaleItemArgs = {
  data: Array<DailySaleItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyDailyStockArgs = {
  data: Array<DailyStockCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyImageArgs = {
  data: Array<ImageCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyLocationArgs = {
  data: Array<LocationCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyPaymentAccountArgs = {
  data: Array<PaymentAccountCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyPaymentDetailArgs = {
  data: Array<PaymentDetailCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyPaymentMethodArgs = {
  data: Array<PaymentMethodCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyPermissionArgs = {
  data: Array<PermissionCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductArgs = {
  data: Array<ProductCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductCategoryArgs = {
  data: Array<ProductCategoryCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductStockArgs = {
  data: Array<ProductStockCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductStockItemArgs = {
  data: Array<ProductStockItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductUnitArgs = {
  data: Array<ProductUnitCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductVariantArgs = {
  data: Array<ProductVariantCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyProductVariantAttributeArgs = {
  data: Array<ProductVariantAttributeCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyPurchaseOrderArgs = {
  data: Array<PurchaseOrderCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyRoleArgs = {
  data: Array<RoleCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleArgs = {
  data: Array<SaleCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleAddonArgs = {
  data: Array<SaleAddonCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleAddonItemArgs = {
  data: Array<SaleAddonItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleChannelArgs = {
  data: Array<SaleChannelCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleItemArgs = {
  data: Array<SaleItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySaleItemStockArgs = {
  data: Array<SaleItemStockCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySequenceDataArgs = {
  data: Array<SequenceDataCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyStockAdjustmentArgs = {
  data: Array<StockAdjustmentCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyStockHistoryArgs = {
  data: Array<StockHistoryCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyStockTransactionArgs = {
  data: Array<StockTransactionCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyStockTransactionItemArgs = {
  data: Array<StockTransactionItemCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyStoreArgs = {
  data: Array<StoreCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySupplierArgs = {
  data: Array<SupplierCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySystemDataArgs = {
  data: Array<SystemDataCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManySystemLogArgs = {
  data: Array<SystemLogCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyTaxSettingArgs = {
  data: Array<TaxSettingCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyTransferOrderArgs = {
  data: Array<TransferOrderCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateManyUserArgs = {
  data: Array<UserCreateManyInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};


export type MutationCreateOneAddressArgs = {
  data: AddressCreateInput;
};


export type MutationCreateOneAppVersionArgs = {
  data: AppVersionCreateInput;
};


export type MutationCreateOneBusinessArgs = {
  data: BusinessCreateInput;
};


export type MutationCreateOneCompositeAdjustmentArgs = {
  data: CompositeAdjustmentCreateInput;
};


export type MutationCreateOneCompositeAdjustment2Args = {
  data: CompositeAdjustmentCreateInput;
};


export type MutationCreateOneCompositeItemArgs = {
  data: CompositeItemCreateInput;
};


export type MutationCreateOneCurrencyArgs = {
  data: CurrencyCreateInput;
};


export type MutationCreateOneCustomerArgs = {
  data: CustomerCreateInput;
};


export type MutationCreateOneDailySaleArgs = {
  data: DailySaleCreateInput;
};


export type MutationCreateOneDailySaleAddonItemArgs = {
  data: DailySaleAddonItemCreateInput;
};


export type MutationCreateOneDailySaleDetailArgs = {
  data: DailySaleDetailCreateInput;
};


export type MutationCreateOneDailySaleItemArgs = {
  data: DailySaleItemCreateInput;
};


export type MutationCreateOneDailyStockArgs = {
  data: DailyStockCreateInput;
};


export type MutationCreateOneImageArgs = {
  data: ImageCreateInput;
};


export type MutationCreateOneLocationArgs = {
  data: LocationCreateInput;
};


export type MutationCreateOnePaymentAccountArgs = {
  data: PaymentAccountCreateInput;
};


export type MutationCreateOnePaymentDetailArgs = {
  data: PaymentDetailCreateInput;
};


export type MutationCreateOnePaymentMethodArgs = {
  data: PaymentMethodCreateInput;
};


export type MutationCreateOnePermissionArgs = {
  data: PermissionCreateInput;
};


export type MutationCreateOneProductArgs = {
  data: ProductCreateInput;
};


export type MutationCreateOneProduct2Args = {
  data: ProductCreateInput;
};


export type MutationCreateOneProductCategoryArgs = {
  data: ProductCategoryCreateInput;
};


export type MutationCreateOneProductStockArgs = {
  data: ProductStockCreateInput;
};


export type MutationCreateOneProductStockItemArgs = {
  data: ProductStockItemCreateInput;
};


export type MutationCreateOneProductUnitArgs = {
  data: ProductUnitCreateInput;
};


export type MutationCreateOneProductVariantArgs = {
  data: ProductVariantCreateInput;
};


export type MutationCreateOneProductVariantAttributeArgs = {
  data: ProductVariantAttributeCreateInput;
};


export type MutationCreateOnePurchaseOrderArgs = {
  data: PurchaseOrderCreateInput;
};


export type MutationCreateOnePurchaseOrder2Args = {
  data: PurchaseOrderCreateInput;
};


export type MutationCreateOneRoleArgs = {
  data: RoleCreateInput;
};


export type MutationCreateOneSaleArgs = {
  data: SaleCreateInput;
};


export type MutationCreateOneSale2Args = {
  data: SaleCreateInput;
};


export type MutationCreateOneSaleAddonArgs = {
  data: SaleAddonCreateInput;
};


export type MutationCreateOneSaleAddonItemArgs = {
  data: SaleAddonItemCreateInput;
};


export type MutationCreateOneSaleChannelArgs = {
  data: SaleChannelCreateInput;
};


export type MutationCreateOneSaleItemArgs = {
  data: SaleItemCreateInput;
};


export type MutationCreateOneSaleItemStockArgs = {
  data: SaleItemStockCreateInput;
};


export type MutationCreateOneSequenceDataArgs = {
  data: SequenceDataCreateInput;
};


export type MutationCreateOneStockAdjustmentArgs = {
  data: StockAdjustmentCreateInput;
};


export type MutationCreateOneStockAdjustment2Args = {
  data: StockAdjustmentCreateInput;
};


export type MutationCreateOneStockHistoryArgs = {
  data: StockHistoryCreateInput;
};


export type MutationCreateOneStockTransactionArgs = {
  data: StockTransactionCreateInput;
};


export type MutationCreateOneStockTransactionItemArgs = {
  data: StockTransactionItemCreateInput;
};


export type MutationCreateOneStoreArgs = {
  data: StoreCreateInput;
};


export type MutationCreateOneSupplierArgs = {
  data: SupplierCreateInput;
};


export type MutationCreateOneSystemDataArgs = {
  data: SystemDataCreateInput;
};


export type MutationCreateOneSystemLogArgs = {
  data: SystemLogCreateInput;
};


export type MutationCreateOneTaxSettingArgs = {
  data: TaxSettingCreateInput;
};


export type MutationCreateOneTransferOrderArgs = {
  data: TransferOrderCreateInput;
};


export type MutationCreateOneTransferOrder2Args = {
  data: TransferOrderCreateInput;
};


export type MutationCreateOneUserArgs = {
  data: UserCreateInput;
};


export type MutationDeleteManyAddressArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type MutationDeleteManyAppVersionArgs = {
  where?: InputMaybe<AppVersionWhereInput>;
};


export type MutationDeleteManyBusinessArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type MutationDeleteManyCompositeAdjustmentArgs = {
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type MutationDeleteManyCompositeItemArgs = {
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type MutationDeleteManyCurrencyArgs = {
  where?: InputMaybe<CurrencyWhereInput>;
};


export type MutationDeleteManyCustomerArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationDeleteManyDailySaleArgs = {
  where?: InputMaybe<DailySaleWhereInput>;
};


export type MutationDeleteManyDailySaleAddonItemArgs = {
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type MutationDeleteManyDailySaleDetailArgs = {
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type MutationDeleteManyDailySaleItemArgs = {
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type MutationDeleteManyDailyStockArgs = {
  where?: InputMaybe<DailyStockWhereInput>;
};


export type MutationDeleteManyImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type MutationDeleteManyLocationArgs = {
  where?: InputMaybe<LocationWhereInput>;
};


export type MutationDeleteManyPaymentAccountArgs = {
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type MutationDeleteManyPaymentDetailArgs = {
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type MutationDeleteManyPaymentMethodArgs = {
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type MutationDeleteManyPermissionArgs = {
  where?: InputMaybe<PermissionWhereInput>;
};


export type MutationDeleteManyProductArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationDeleteManyProductCategoryArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type MutationDeleteManyProductStockArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};


export type MutationDeleteManyProductStockItemArgs = {
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type MutationDeleteManyProductUnitArgs = {
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type MutationDeleteManyProductVariantArgs = {
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type MutationDeleteManyProductVariantAttributeArgs = {
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type MutationDeleteManyPurchaseOrderArgs = {
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type MutationDeleteManyRoleArgs = {
  where?: InputMaybe<RoleWhereInput>;
};


export type MutationDeleteManySaleArgs = {
  where?: InputMaybe<SaleWhereInput>;
};


export type MutationDeleteManySaleAddonArgs = {
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type MutationDeleteManySaleAddonItemArgs = {
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type MutationDeleteManySaleChannelArgs = {
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type MutationDeleteManySaleItemArgs = {
  where?: InputMaybe<SaleItemWhereInput>;
};


export type MutationDeleteManySaleItemStockArgs = {
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type MutationDeleteManySequenceDataArgs = {
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type MutationDeleteManyStockAdjustmentArgs = {
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type MutationDeleteManyStockHistoryArgs = {
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type MutationDeleteManyStockTransactionArgs = {
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type MutationDeleteManyStockTransactionItemArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type MutationDeleteManyStoreArgs = {
  where?: InputMaybe<StoreWhereInput>;
};


export type MutationDeleteManySupplierArgs = {
  where?: InputMaybe<SupplierWhereInput>;
};


export type MutationDeleteManySystemDataArgs = {
  where?: InputMaybe<SystemDataWhereInput>;
};


export type MutationDeleteManySystemLogArgs = {
  where?: InputMaybe<SystemLogWhereInput>;
};


export type MutationDeleteManyTaxSettingArgs = {
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type MutationDeleteManyTransferOrderArgs = {
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type MutationDeleteManyUserArgs = {
  where?: InputMaybe<UserWhereInput>;
};


export type MutationDeleteOneAddressArgs = {
  where: AddressWhereUniqueInput;
};


export type MutationDeleteOneAppVersionArgs = {
  where: AppVersionWhereUniqueInput;
};


export type MutationDeleteOneBusinessArgs = {
  where: BusinessWhereUniqueInput;
};


export type MutationDeleteOneCompositeAdjustmentArgs = {
  where: CompositeAdjustmentWhereUniqueInput;
};


export type MutationDeleteOneCompositeItemArgs = {
  where: CompositeItemWhereUniqueInput;
};


export type MutationDeleteOneCurrencyArgs = {
  where: CurrencyWhereUniqueInput;
};


export type MutationDeleteOneCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type MutationDeleteOneDailySaleArgs = {
  where: DailySaleWhereUniqueInput;
};


export type MutationDeleteOneDailySaleAddonItemArgs = {
  where: DailySaleAddonItemWhereUniqueInput;
};


export type MutationDeleteOneDailySaleDetailArgs = {
  where: DailySaleDetailWhereUniqueInput;
};


export type MutationDeleteOneDailySaleItemArgs = {
  where: DailySaleItemWhereUniqueInput;
};


export type MutationDeleteOneDailyStockArgs = {
  where: DailyStockWhereUniqueInput;
};


export type MutationDeleteOneImageArgs = {
  where: ImageWhereUniqueInput;
};


export type MutationDeleteOneLocationArgs = {
  where: LocationWhereUniqueInput;
};


export type MutationDeleteOnePaymentAccountArgs = {
  where: PaymentAccountWhereUniqueInput;
};


export type MutationDeleteOnePaymentDetailArgs = {
  where: PaymentDetailWhereUniqueInput;
};


export type MutationDeleteOnePaymentMethodArgs = {
  where: PaymentMethodWhereUniqueInput;
};


export type MutationDeleteOnePermissionArgs = {
  where: PermissionWhereUniqueInput;
};


export type MutationDeleteOneProductArgs = {
  where: ProductWhereUniqueInput;
};


export type MutationDeleteOneProductCategoryArgs = {
  where: ProductCategoryWhereUniqueInput;
};


export type MutationDeleteOneProductStockArgs = {
  where: ProductStockWhereUniqueInput;
};


export type MutationDeleteOneProductStockItemArgs = {
  where: ProductStockItemWhereUniqueInput;
};


export type MutationDeleteOneProductUnitArgs = {
  where: ProductUnitWhereUniqueInput;
};


export type MutationDeleteOneProductVariantArgs = {
  where: ProductVariantWhereUniqueInput;
};


export type MutationDeleteOneProductVariantAttributeArgs = {
  where: ProductVariantAttributeWhereUniqueInput;
};


export type MutationDeleteOnePurchaseOrderArgs = {
  where: PurchaseOrderWhereUniqueInput;
};


export type MutationDeleteOneRoleArgs = {
  where: RoleWhereUniqueInput;
};


export type MutationDeleteOneSaleArgs = {
  where: SaleWhereUniqueInput;
};


export type MutationDeleteOneSaleAddonArgs = {
  where: SaleAddonWhereUniqueInput;
};


export type MutationDeleteOneSaleAddonItemArgs = {
  where: SaleAddonItemWhereUniqueInput;
};


export type MutationDeleteOneSaleChannelArgs = {
  where: SaleChannelWhereUniqueInput;
};


export type MutationDeleteOneSaleItemArgs = {
  where: SaleItemWhereUniqueInput;
};


export type MutationDeleteOneSaleItemStockArgs = {
  where: SaleItemStockWhereUniqueInput;
};


export type MutationDeleteOneSequenceDataArgs = {
  where: SequenceDataWhereUniqueInput;
};


export type MutationDeleteOneStockAdjustmentArgs = {
  where: StockAdjustmentWhereUniqueInput;
};


export type MutationDeleteOneStockHistoryArgs = {
  where: StockHistoryWhereUniqueInput;
};


export type MutationDeleteOneStockTransactionArgs = {
  where: StockTransactionWhereUniqueInput;
};


export type MutationDeleteOneStockTransactionItemArgs = {
  where: StockTransactionItemWhereUniqueInput;
};


export type MutationDeleteOneStoreArgs = {
  where: StoreWhereUniqueInput;
};


export type MutationDeleteOneSupplierArgs = {
  where: SupplierWhereUniqueInput;
};


export type MutationDeleteOneSystemDataArgs = {
  where: SystemDataWhereUniqueInput;
};


export type MutationDeleteOneSystemLogArgs = {
  where: SystemLogWhereUniqueInput;
};


export type MutationDeleteOneTaxSettingArgs = {
  where: TaxSettingWhereUniqueInput;
};


export type MutationDeleteOneTransferOrderArgs = {
  where: TransferOrderWhereUniqueInput;
};


export type MutationDeleteOneTransferOrder2Args = {
  where: TransferOrderWhereUniqueInput;
};


export type MutationDeleteOneUserArgs = {
  where: UserWhereUniqueInput;
};


export type MutationUpdateManyAddressArgs = {
  data: AddressUpdateManyMutationInput;
  where?: InputMaybe<AddressWhereInput>;
};


export type MutationUpdateManyAppVersionArgs = {
  data: AppVersionUpdateManyMutationInput;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type MutationUpdateManyBusinessArgs = {
  data: BusinessUpdateManyMutationInput;
  where?: InputMaybe<BusinessWhereInput>;
};


export type MutationUpdateManyCompositeAdjustmentArgs = {
  data: CompositeAdjustmentUpdateManyMutationInput;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type MutationUpdateManyCompositeItemArgs = {
  data: CompositeItemUpdateManyMutationInput;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type MutationUpdateManyCurrencyArgs = {
  data: CurrencyUpdateManyMutationInput;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type MutationUpdateManyCustomerArgs = {
  data: CustomerUpdateManyMutationInput;
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationUpdateManyDailySaleArgs = {
  data: DailySaleUpdateManyMutationInput;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type MutationUpdateManyDailySaleAddonItemArgs = {
  data: DailySaleAddonItemUpdateManyMutationInput;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type MutationUpdateManyDailySaleDetailArgs = {
  data: DailySaleDetailUpdateManyMutationInput;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type MutationUpdateManyDailySaleItemArgs = {
  data: DailySaleItemUpdateManyMutationInput;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type MutationUpdateManyDailyStockArgs = {
  data: DailyStockUpdateManyMutationInput;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type MutationUpdateManyImageArgs = {
  data: ImageUpdateManyMutationInput;
  where?: InputMaybe<ImageWhereInput>;
};


export type MutationUpdateManyLocationArgs = {
  data: LocationUpdateManyMutationInput;
  where?: InputMaybe<LocationWhereInput>;
};


export type MutationUpdateManyPaymentAccountArgs = {
  data: PaymentAccountUpdateManyMutationInput;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type MutationUpdateManyPaymentDetailArgs = {
  data: PaymentDetailUpdateManyMutationInput;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type MutationUpdateManyPaymentMethodArgs = {
  data: PaymentMethodUpdateManyMutationInput;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type MutationUpdateManyPermissionArgs = {
  data: PermissionUpdateManyMutationInput;
  where?: InputMaybe<PermissionWhereInput>;
};


export type MutationUpdateManyProductArgs = {
  data: ProductUpdateManyMutationInput;
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationUpdateManyProductCategoryArgs = {
  data: ProductCategoryUpdateManyMutationInput;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type MutationUpdateManyProductStockArgs = {
  data: ProductStockUpdateManyMutationInput;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type MutationUpdateManyProductStockItemArgs = {
  data: ProductStockItemUpdateManyMutationInput;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type MutationUpdateManyProductUnitArgs = {
  data: ProductUnitUpdateManyMutationInput;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type MutationUpdateManyProductVariantArgs = {
  data: ProductVariantUpdateManyMutationInput;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type MutationUpdateManyProductVariantAttributeArgs = {
  data: ProductVariantAttributeUpdateManyMutationInput;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type MutationUpdateManyPurchaseOrderArgs = {
  data: PurchaseOrderUpdateManyMutationInput;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type MutationUpdateManyRoleArgs = {
  data: RoleUpdateManyMutationInput;
  where?: InputMaybe<RoleWhereInput>;
};


export type MutationUpdateManySaleArgs = {
  data: SaleUpdateManyMutationInput;
  where?: InputMaybe<SaleWhereInput>;
};


export type MutationUpdateManySaleAddonArgs = {
  data: SaleAddonUpdateManyMutationInput;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type MutationUpdateManySaleAddonItemArgs = {
  data: SaleAddonItemUpdateManyMutationInput;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type MutationUpdateManySaleChannelArgs = {
  data: SaleChannelUpdateManyMutationInput;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type MutationUpdateManySaleItemArgs = {
  data: SaleItemUpdateManyMutationInput;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type MutationUpdateManySaleItemStockArgs = {
  data: SaleItemStockUpdateManyMutationInput;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type MutationUpdateManySequenceDataArgs = {
  data: SequenceDataUpdateManyMutationInput;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type MutationUpdateManyStockAdjustmentArgs = {
  data: StockAdjustmentUpdateManyMutationInput;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type MutationUpdateManyStockHistoryArgs = {
  data: StockHistoryUpdateManyMutationInput;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type MutationUpdateManyStockTransactionArgs = {
  data: StockTransactionUpdateManyMutationInput;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type MutationUpdateManyStockTransactionItemArgs = {
  data: StockTransactionItemUpdateManyMutationInput;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type MutationUpdateManyStoreArgs = {
  data: StoreUpdateManyMutationInput;
  where?: InputMaybe<StoreWhereInput>;
};


export type MutationUpdateManySupplierArgs = {
  data: SupplierUpdateManyMutationInput;
  where?: InputMaybe<SupplierWhereInput>;
};


export type MutationUpdateManySystemDataArgs = {
  data: SystemDataUpdateManyMutationInput;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type MutationUpdateManySystemLogArgs = {
  data: SystemLogUpdateManyMutationInput;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type MutationUpdateManyTaxSettingArgs = {
  data: TaxSettingUpdateManyMutationInput;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type MutationUpdateManyTransferOrderArgs = {
  data: TransferOrderUpdateManyMutationInput;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type MutationUpdateManyUserArgs = {
  data: UserUpdateManyMutationInput;
  where?: InputMaybe<UserWhereInput>;
};


export type MutationUpdateOneAddressArgs = {
  data: AddressUpdateInput;
  where: AddressWhereUniqueInput;
};


export type MutationUpdateOneAppVersionArgs = {
  data: AppVersionUpdateInput;
  where: AppVersionWhereUniqueInput;
};


export type MutationUpdateOneBusinessArgs = {
  data: BusinessUpdateInput;
  where: BusinessWhereUniqueInput;
};


export type MutationUpdateOneCompositeAdjustmentArgs = {
  data: CompositeAdjustmentUpdateInput;
  where: CompositeAdjustmentWhereUniqueInput;
};


export type MutationUpdateOneCompositeItemArgs = {
  data: CompositeItemUpdateInput;
  where: CompositeItemWhereUniqueInput;
};


export type MutationUpdateOneCurrencyArgs = {
  data: CurrencyUpdateInput;
  where: CurrencyWhereUniqueInput;
};


export type MutationUpdateOneCustomerArgs = {
  data: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpdateOneDailySaleArgs = {
  data: DailySaleUpdateInput;
  where: DailySaleWhereUniqueInput;
};


export type MutationUpdateOneDailySaleAddonItemArgs = {
  data: DailySaleAddonItemUpdateInput;
  where: DailySaleAddonItemWhereUniqueInput;
};


export type MutationUpdateOneDailySaleDetailArgs = {
  data: DailySaleDetailUpdateInput;
  where: DailySaleDetailWhereUniqueInput;
};


export type MutationUpdateOneDailySaleItemArgs = {
  data: DailySaleItemUpdateInput;
  where: DailySaleItemWhereUniqueInput;
};


export type MutationUpdateOneDailyStockArgs = {
  data: DailyStockUpdateInput;
  where: DailyStockWhereUniqueInput;
};


export type MutationUpdateOneImageArgs = {
  data: ImageUpdateInput;
  where: ImageWhereUniqueInput;
};


export type MutationUpdateOneLocationArgs = {
  data: LocationUpdateInput;
  where: LocationWhereUniqueInput;
};


export type MutationUpdateOnePaymentAccountArgs = {
  data: PaymentAccountUpdateInput;
  where: PaymentAccountWhereUniqueInput;
};


export type MutationUpdateOnePaymentDetailArgs = {
  data: PaymentDetailUpdateInput;
  where: PaymentDetailWhereUniqueInput;
};


export type MutationUpdateOnePaymentMethodArgs = {
  data: PaymentMethodUpdateInput;
  where: PaymentMethodWhereUniqueInput;
};


export type MutationUpdateOnePermissionArgs = {
  data: PermissionUpdateInput;
  where: PermissionWhereUniqueInput;
};


export type MutationUpdateOneProductArgs = {
  data: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpdateOneProduct2Args = {
  data: ProductUpdateInput;
  seq: Scalars['Int']['input'];
  where: ProductWhereUniqueInput;
};


export type MutationUpdateOneProductCategoryArgs = {
  data: ProductCategoryUpdateInput;
  where: ProductCategoryWhereUniqueInput;
};


export type MutationUpdateOneProductStockArgs = {
  data: ProductStockUpdateInput;
  where: ProductStockWhereUniqueInput;
};


export type MutationUpdateOneProductStockItemArgs = {
  data: ProductStockItemUpdateInput;
  where: ProductStockItemWhereUniqueInput;
};


export type MutationUpdateOneProductUnitArgs = {
  data: ProductUnitUpdateInput;
  where: ProductUnitWhereUniqueInput;
};


export type MutationUpdateOneProductVariantArgs = {
  data: ProductVariantUpdateInput;
  where: ProductVariantWhereUniqueInput;
};


export type MutationUpdateOneProductVariantAttributeArgs = {
  data: ProductVariantAttributeUpdateInput;
  where: ProductVariantAttributeWhereUniqueInput;
};


export type MutationUpdateOnePurchaseOrderArgs = {
  data: PurchaseOrderUpdateInput;
  where: PurchaseOrderWhereUniqueInput;
};


export type MutationUpdateOnePurchaseOrder2Args = {
  data: PurchaseOrderUpdateInput;
  seq: Scalars['Int']['input'];
  where: PurchaseOrderWhereUniqueInput;
};


export type MutationUpdateOneRoleArgs = {
  data: RoleUpdateInput;
  where: RoleWhereUniqueInput;
};


export type MutationUpdateOneSaleArgs = {
  data: SaleUpdateInput;
  where: SaleWhereUniqueInput;
};


export type MutationUpdateOneSale2Args = {
  data: SaleUpdateInput;
  seq: Scalars['Int']['input'];
  where: SaleWhereUniqueInput;
};


export type MutationUpdateOneSaleAddonArgs = {
  data: SaleAddonUpdateInput;
  where: SaleAddonWhereUniqueInput;
};


export type MutationUpdateOneSaleAddonItemArgs = {
  data: SaleAddonItemUpdateInput;
  where: SaleAddonItemWhereUniqueInput;
};


export type MutationUpdateOneSaleChannelArgs = {
  data: SaleChannelUpdateInput;
  where: SaleChannelWhereUniqueInput;
};


export type MutationUpdateOneSaleItemArgs = {
  data: SaleItemUpdateInput;
  where: SaleItemWhereUniqueInput;
};


export type MutationUpdateOneSaleItemStockArgs = {
  data: SaleItemStockUpdateInput;
  where: SaleItemStockWhereUniqueInput;
};


export type MutationUpdateOneSequenceDataArgs = {
  data: SequenceDataUpdateInput;
  where: SequenceDataWhereUniqueInput;
};


export type MutationUpdateOneStockAdjustmentArgs = {
  data: StockAdjustmentUpdateInput;
  where: StockAdjustmentWhereUniqueInput;
};


export type MutationUpdateOneStockHistoryArgs = {
  data: StockHistoryUpdateInput;
  where: StockHistoryWhereUniqueInput;
};


export type MutationUpdateOneStockTransactionArgs = {
  data: StockTransactionUpdateInput;
  where: StockTransactionWhereUniqueInput;
};


export type MutationUpdateOneStockTransactionItemArgs = {
  data: StockTransactionItemUpdateInput;
  where: StockTransactionItemWhereUniqueInput;
};


export type MutationUpdateOneStoreArgs = {
  data: StoreUpdateInput;
  where: StoreWhereUniqueInput;
};


export type MutationUpdateOneSupplierArgs = {
  data: SupplierUpdateInput;
  where: SupplierWhereUniqueInput;
};


export type MutationUpdateOneSystemDataArgs = {
  data: SystemDataUpdateInput;
  where: SystemDataWhereUniqueInput;
};


export type MutationUpdateOneSystemLogArgs = {
  data: SystemLogUpdateInput;
  where: SystemLogWhereUniqueInput;
};


export type MutationUpdateOneTaxSettingArgs = {
  data: TaxSettingUpdateInput;
  where: TaxSettingWhereUniqueInput;
};


export type MutationUpdateOneTransferOrderArgs = {
  data: TransferOrderUpdateInput;
  where: TransferOrderWhereUniqueInput;
};


export type MutationUpdateOneTransferOrder2Args = {
  data: TransferOrderUpdateInput;
  seq: Scalars['Int']['input'];
  where: TransferOrderWhereUniqueInput;
};


export type MutationUpdateOneUserArgs = {
  data: UserUpdateInput;
  where: UserWhereUniqueInput;
};


export type MutationUploadManyFileArgs = {
  files: Array<Scalars['Upload']['input']>;
  generateThumbnail?: InputMaybe<Scalars['Boolean']['input']>;
  prefix: Scalars['String']['input'];
};


export type MutationUploadOneFileArgs = {
  file: Scalars['Upload']['input'];
  generateThumbnail?: InputMaybe<Scalars['Boolean']['input']>;
  prefix: Scalars['String']['input'];
};


export type MutationUpsertOneAddressArgs = {
  create: AddressCreateInput;
  update: AddressUpdateInput;
  where: AddressWhereUniqueInput;
};


export type MutationUpsertOneAppVersionArgs = {
  create: AppVersionCreateInput;
  update: AppVersionUpdateInput;
  where: AppVersionWhereUniqueInput;
};


export type MutationUpsertOneBusinessArgs = {
  create: BusinessCreateInput;
  update: BusinessUpdateInput;
  where: BusinessWhereUniqueInput;
};


export type MutationUpsertOneCompositeAdjustmentArgs = {
  create: CompositeAdjustmentCreateInput;
  update: CompositeAdjustmentUpdateInput;
  where: CompositeAdjustmentWhereUniqueInput;
};


export type MutationUpsertOneCompositeItemArgs = {
  create: CompositeItemCreateInput;
  update: CompositeItemUpdateInput;
  where: CompositeItemWhereUniqueInput;
};


export type MutationUpsertOneCurrencyArgs = {
  create: CurrencyCreateInput;
  update: CurrencyUpdateInput;
  where: CurrencyWhereUniqueInput;
};


export type MutationUpsertOneCustomerArgs = {
  create: CustomerCreateInput;
  update: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpsertOneDailySaleArgs = {
  create: DailySaleCreateInput;
  update: DailySaleUpdateInput;
  where: DailySaleWhereUniqueInput;
};


export type MutationUpsertOneDailySaleAddonItemArgs = {
  create: DailySaleAddonItemCreateInput;
  update: DailySaleAddonItemUpdateInput;
  where: DailySaleAddonItemWhereUniqueInput;
};


export type MutationUpsertOneDailySaleDetailArgs = {
  create: DailySaleDetailCreateInput;
  update: DailySaleDetailUpdateInput;
  where: DailySaleDetailWhereUniqueInput;
};


export type MutationUpsertOneDailySaleItemArgs = {
  create: DailySaleItemCreateInput;
  update: DailySaleItemUpdateInput;
  where: DailySaleItemWhereUniqueInput;
};


export type MutationUpsertOneDailyStockArgs = {
  create: DailyStockCreateInput;
  update: DailyStockUpdateInput;
  where: DailyStockWhereUniqueInput;
};


export type MutationUpsertOneImageArgs = {
  create: ImageCreateInput;
  update: ImageUpdateInput;
  where: ImageWhereUniqueInput;
};


export type MutationUpsertOneLocationArgs = {
  create: LocationCreateInput;
  update: LocationUpdateInput;
  where: LocationWhereUniqueInput;
};


export type MutationUpsertOnePaymentAccountArgs = {
  create: PaymentAccountCreateInput;
  update: PaymentAccountUpdateInput;
  where: PaymentAccountWhereUniqueInput;
};


export type MutationUpsertOnePaymentDetailArgs = {
  create: PaymentDetailCreateInput;
  update: PaymentDetailUpdateInput;
  where: PaymentDetailWhereUniqueInput;
};


export type MutationUpsertOnePaymentMethodArgs = {
  create: PaymentMethodCreateInput;
  update: PaymentMethodUpdateInput;
  where: PaymentMethodWhereUniqueInput;
};


export type MutationUpsertOnePermissionArgs = {
  create: PermissionCreateInput;
  update: PermissionUpdateInput;
  where: PermissionWhereUniqueInput;
};


export type MutationUpsertOneProductArgs = {
  create: ProductCreateInput;
  update: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpsertOneProductCategoryArgs = {
  create: ProductCategoryCreateInput;
  update: ProductCategoryUpdateInput;
  where: ProductCategoryWhereUniqueInput;
};


export type MutationUpsertOneProductStockArgs = {
  create: ProductStockCreateInput;
  update: ProductStockUpdateInput;
  where: ProductStockWhereUniqueInput;
};


export type MutationUpsertOneProductStockItemArgs = {
  create: ProductStockItemCreateInput;
  update: ProductStockItemUpdateInput;
  where: ProductStockItemWhereUniqueInput;
};


export type MutationUpsertOneProductUnitArgs = {
  create: ProductUnitCreateInput;
  update: ProductUnitUpdateInput;
  where: ProductUnitWhereUniqueInput;
};


export type MutationUpsertOneProductVariantArgs = {
  create: ProductVariantCreateInput;
  update: ProductVariantUpdateInput;
  where: ProductVariantWhereUniqueInput;
};


export type MutationUpsertOneProductVariantAttributeArgs = {
  create: ProductVariantAttributeCreateInput;
  update: ProductVariantAttributeUpdateInput;
  where: ProductVariantAttributeWhereUniqueInput;
};


export type MutationUpsertOnePurchaseOrderArgs = {
  create: PurchaseOrderCreateInput;
  update: PurchaseOrderUpdateInput;
  where: PurchaseOrderWhereUniqueInput;
};


export type MutationUpsertOneRoleArgs = {
  create: RoleCreateInput;
  update: RoleUpdateInput;
  where: RoleWhereUniqueInput;
};


export type MutationUpsertOneSaleArgs = {
  create: SaleCreateInput;
  update: SaleUpdateInput;
  where: SaleWhereUniqueInput;
};


export type MutationUpsertOneSaleAddonArgs = {
  create: SaleAddonCreateInput;
  update: SaleAddonUpdateInput;
  where: SaleAddonWhereUniqueInput;
};


export type MutationUpsertOneSaleAddonItemArgs = {
  create: SaleAddonItemCreateInput;
  update: SaleAddonItemUpdateInput;
  where: SaleAddonItemWhereUniqueInput;
};


export type MutationUpsertOneSaleChannelArgs = {
  create: SaleChannelCreateInput;
  update: SaleChannelUpdateInput;
  where: SaleChannelWhereUniqueInput;
};


export type MutationUpsertOneSaleItemArgs = {
  create: SaleItemCreateInput;
  update: SaleItemUpdateInput;
  where: SaleItemWhereUniqueInput;
};


export type MutationUpsertOneSaleItemStockArgs = {
  create: SaleItemStockCreateInput;
  update: SaleItemStockUpdateInput;
  where: SaleItemStockWhereUniqueInput;
};


export type MutationUpsertOneSequenceDataArgs = {
  create: SequenceDataCreateInput;
  update: SequenceDataUpdateInput;
  where: SequenceDataWhereUniqueInput;
};


export type MutationUpsertOneStockAdjustmentArgs = {
  create: StockAdjustmentCreateInput;
  update: StockAdjustmentUpdateInput;
  where: StockAdjustmentWhereUniqueInput;
};


export type MutationUpsertOneStockHistoryArgs = {
  create: StockHistoryCreateInput;
  update: StockHistoryUpdateInput;
  where: StockHistoryWhereUniqueInput;
};


export type MutationUpsertOneStockTransactionArgs = {
  create: StockTransactionCreateInput;
  update: StockTransactionUpdateInput;
  where: StockTransactionWhereUniqueInput;
};


export type MutationUpsertOneStockTransactionItemArgs = {
  create: StockTransactionItemCreateInput;
  update: StockTransactionItemUpdateInput;
  where: StockTransactionItemWhereUniqueInput;
};


export type MutationUpsertOneStoreArgs = {
  create: StoreCreateInput;
  update: StoreUpdateInput;
  where: StoreWhereUniqueInput;
};


export type MutationUpsertOneSupplierArgs = {
  create: SupplierCreateInput;
  update: SupplierUpdateInput;
  where: SupplierWhereUniqueInput;
};


export type MutationUpsertOneSystemDataArgs = {
  create: SystemDataCreateInput;
  update: SystemDataUpdateInput;
  where: SystemDataWhereUniqueInput;
};


export type MutationUpsertOneSystemLogArgs = {
  create: SystemLogCreateInput;
  update: SystemLogUpdateInput;
  where: SystemLogWhereUniqueInput;
};


export type MutationUpsertOneTaxSettingArgs = {
  create: TaxSettingCreateInput;
  update: TaxSettingUpdateInput;
  where: TaxSettingWhereUniqueInput;
};


export type MutationUpsertOneTransferOrderArgs = {
  create: TransferOrderCreateInput;
  update: TransferOrderUpdateInput;
  where: TransferOrderWhereUniqueInput;
};


export type MutationUpsertOneUserArgs = {
  create: UserCreateInput;
  update: UserUpdateInput;
  where: UserWhereUniqueInput;
};

export type NestedBigIntFilter = {
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type NestedBigIntNullableFilter = {
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type NestedBigIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBigIntNullableFilter>;
  _min?: InputMaybe<NestedBigIntNullableFilter>;
  _sum?: InputMaybe<NestedBigIntNullableFilter>;
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type NestedBigIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBigIntFilter>;
  _min?: InputMaybe<NestedBigIntFilter>;
  _sum?: InputMaybe<NestedBigIntFilter>;
  equals?: InputMaybe<Scalars['BigInt']['input']>;
  gt?: InputMaybe<Scalars['BigInt']['input']>;
  gte?: InputMaybe<Scalars['BigInt']['input']>;
  in?: InputMaybe<Array<Scalars['BigInt']['input']>>;
  lt?: InputMaybe<Scalars['BigInt']['input']>;
  lte?: InputMaybe<Scalars['BigInt']['input']>;
  not?: InputMaybe<NestedBigIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['BigInt']['input']>>;
};

export type NestedBoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type NestedBoolWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBoolFilter>;
  _min?: InputMaybe<NestedBoolFilter>;
  equals?: InputMaybe<Scalars['Boolean']['input']>;
  not?: InputMaybe<NestedBoolWithAggregatesFilter>;
};

export type NestedDateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type NestedDateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type NestedDateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']['input']>;
  gt?: InputMaybe<Scalars['DateTime']['input']>;
  gte?: InputMaybe<Scalars['DateTime']['input']>;
  in?: InputMaybe<Array<Scalars['DateTime']['input']>>;
  lt?: InputMaybe<Scalars['DateTime']['input']>;
  lte?: InputMaybe<Scalars['DateTime']['input']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['DateTime']['input']>>;
};

export type NestedDecimalFilter = {
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type NestedDecimalWithAggregatesFilter = {
  _avg?: InputMaybe<NestedDecimalFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDecimalFilter>;
  _min?: InputMaybe<NestedDecimalFilter>;
  _sum?: InputMaybe<NestedDecimalFilter>;
  equals?: InputMaybe<Scalars['Decimal']['input']>;
  gt?: InputMaybe<Scalars['Decimal']['input']>;
  gte?: InputMaybe<Scalars['Decimal']['input']>;
  in?: InputMaybe<Array<Scalars['Decimal']['input']>>;
  lt?: InputMaybe<Scalars['Decimal']['input']>;
  lte?: InputMaybe<Scalars['Decimal']['input']>;
  not?: InputMaybe<NestedDecimalWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Decimal']['input']>>;
};

export type NestedEnumCompositeAdjustmentTypeFilter = {
  equals?: InputMaybe<CompositeAdjustmentType>;
  in?: InputMaybe<Array<CompositeAdjustmentType>>;
  not?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  notIn?: InputMaybe<Array<CompositeAdjustmentType>>;
};

export type NestedEnumCompositeAdjustmentTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  _min?: InputMaybe<NestedEnumCompositeAdjustmentTypeFilter>;
  equals?: InputMaybe<CompositeAdjustmentType>;
  in?: InputMaybe<Array<CompositeAdjustmentType>>;
  not?: InputMaybe<NestedEnumCompositeAdjustmentTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<CompositeAdjustmentType>>;
};

export type NestedEnumPaymentStatusFilter = {
  equals?: InputMaybe<PaymentStatus>;
  in?: InputMaybe<Array<PaymentStatus>>;
  not?: InputMaybe<NestedEnumPaymentStatusFilter>;
  notIn?: InputMaybe<Array<PaymentStatus>>;
};

export type NestedEnumPaymentStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPaymentStatusFilter>;
  _min?: InputMaybe<NestedEnumPaymentStatusFilter>;
  equals?: InputMaybe<PaymentStatus>;
  in?: InputMaybe<Array<PaymentStatus>>;
  not?: InputMaybe<NestedEnumPaymentStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<PaymentStatus>>;
};

export type NestedEnumProductTypeFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<ProductType>>;
  not?: InputMaybe<NestedEnumProductTypeFilter>;
  notIn?: InputMaybe<Array<ProductType>>;
};

export type NestedEnumProductTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumProductTypeFilter>;
  _min?: InputMaybe<NestedEnumProductTypeFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<ProductType>>;
  not?: InputMaybe<NestedEnumProductTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<ProductType>>;
};

export type NestedEnumPurchaseOrderStatusFilter = {
  equals?: InputMaybe<PurchaseOrderStatus>;
  in?: InputMaybe<Array<PurchaseOrderStatus>>;
  not?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  notIn?: InputMaybe<Array<PurchaseOrderStatus>>;
};

export type NestedEnumPurchaseOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumPurchaseOrderStatusFilter>;
  equals?: InputMaybe<PurchaseOrderStatus>;
  in?: InputMaybe<Array<PurchaseOrderStatus>>;
  not?: InputMaybe<NestedEnumPurchaseOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<PurchaseOrderStatus>>;
};

export type NestedEnumSaleAddonTypeFilter = {
  equals?: InputMaybe<SaleAddonType>;
  in?: InputMaybe<Array<SaleAddonType>>;
  not?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  notIn?: InputMaybe<Array<SaleAddonType>>;
};

export type NestedEnumSaleAddonTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  _min?: InputMaybe<NestedEnumSaleAddonTypeFilter>;
  equals?: InputMaybe<SaleAddonType>;
  in?: InputMaybe<Array<SaleAddonType>>;
  not?: InputMaybe<NestedEnumSaleAddonTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<SaleAddonType>>;
};

export type NestedEnumSaleStatusFilter = {
  equals?: InputMaybe<SaleStatus>;
  in?: InputMaybe<Array<SaleStatus>>;
  not?: InputMaybe<NestedEnumSaleStatusFilter>;
  notIn?: InputMaybe<Array<SaleStatus>>;
};

export type NestedEnumSaleStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSaleStatusFilter>;
  _min?: InputMaybe<NestedEnumSaleStatusFilter>;
  equals?: InputMaybe<SaleStatus>;
  in?: InputMaybe<Array<SaleStatus>>;
  not?: InputMaybe<NestedEnumSaleStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<SaleStatus>>;
};

export type NestedEnumStockAdjustmentTypeFilter = {
  equals?: InputMaybe<StockAdjustmentType>;
  in?: InputMaybe<Array<StockAdjustmentType>>;
  not?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  notIn?: InputMaybe<Array<StockAdjustmentType>>;
};

export type NestedEnumStockAdjustmentTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  _min?: InputMaybe<NestedEnumStockAdjustmentTypeFilter>;
  equals?: InputMaybe<StockAdjustmentType>;
  in?: InputMaybe<Array<StockAdjustmentType>>;
  not?: InputMaybe<NestedEnumStockAdjustmentTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockAdjustmentType>>;
};

export type NestedEnumStockHistoryRefTypeFilter = {
  equals?: InputMaybe<StockHistoryRefType>;
  in?: InputMaybe<Array<StockHistoryRefType>>;
  not?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  notIn?: InputMaybe<Array<StockHistoryRefType>>;
};

export type NestedEnumStockHistoryRefTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  _min?: InputMaybe<NestedEnumStockHistoryRefTypeFilter>;
  equals?: InputMaybe<StockHistoryRefType>;
  in?: InputMaybe<Array<StockHistoryRefType>>;
  not?: InputMaybe<NestedEnumStockHistoryRefTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockHistoryRefType>>;
};

export type NestedEnumStockTransactionItemRefTypeFilter = {
  equals?: InputMaybe<StockTransactionItemRefType>;
  in?: InputMaybe<Array<StockTransactionItemRefType>>;
  not?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  notIn?: InputMaybe<Array<StockTransactionItemRefType>>;
};

export type NestedEnumStockTransactionItemRefTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  _min?: InputMaybe<NestedEnumStockTransactionItemRefTypeFilter>;
  equals?: InputMaybe<StockTransactionItemRefType>;
  in?: InputMaybe<Array<StockTransactionItemRefType>>;
  not?: InputMaybe<NestedEnumStockTransactionItemRefTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockTransactionItemRefType>>;
};

export type NestedEnumStockTransactionTypeFilter = {
  equals?: InputMaybe<StockTransactionType>;
  in?: InputMaybe<Array<StockTransactionType>>;
  not?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  notIn?: InputMaybe<Array<StockTransactionType>>;
};

export type NestedEnumStockTransactionTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  _min?: InputMaybe<NestedEnumStockTransactionTypeFilter>;
  equals?: InputMaybe<StockTransactionType>;
  in?: InputMaybe<Array<StockTransactionType>>;
  not?: InputMaybe<NestedEnumStockTransactionTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<StockTransactionType>>;
};

export type NestedEnumTaxCalculationMethodFilter = {
  equals?: InputMaybe<TaxCalculationMethod>;
  in?: InputMaybe<Array<TaxCalculationMethod>>;
  not?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  notIn?: InputMaybe<Array<TaxCalculationMethod>>;
};

export type NestedEnumTaxCalculationMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  _min?: InputMaybe<NestedEnumTaxCalculationMethodFilter>;
  equals?: InputMaybe<TaxCalculationMethod>;
  in?: InputMaybe<Array<TaxCalculationMethod>>;
  not?: InputMaybe<NestedEnumTaxCalculationMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TaxCalculationMethod>>;
};

export type NestedEnumTaxationMethodFilter = {
  equals?: InputMaybe<TaxationMethod>;
  in?: InputMaybe<Array<TaxationMethod>>;
  not?: InputMaybe<NestedEnumTaxationMethodFilter>;
  notIn?: InputMaybe<Array<TaxationMethod>>;
};

export type NestedEnumTaxationMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTaxationMethodFilter>;
  _min?: InputMaybe<NestedEnumTaxationMethodFilter>;
  equals?: InputMaybe<TaxationMethod>;
  in?: InputMaybe<Array<TaxationMethod>>;
  not?: InputMaybe<NestedEnumTaxationMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TaxationMethod>>;
};

export type NestedEnumTransferOrderStatusFilter = {
  equals?: InputMaybe<TransferOrderStatus>;
  in?: InputMaybe<Array<TransferOrderStatus>>;
  not?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  notIn?: InputMaybe<Array<TransferOrderStatus>>;
};

export type NestedEnumTransferOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumTransferOrderStatusFilter>;
  equals?: InputMaybe<TransferOrderStatus>;
  in?: InputMaybe<Array<TransferOrderStatus>>;
  not?: InputMaybe<NestedEnumTransferOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<TransferOrderStatus>>;
};

export type NestedFloatFilter = {
  equals?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type NestedFloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  in?: InputMaybe<Array<Scalars['Float']['input']>>;
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Float']['input']>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']['input']>;
  gt?: InputMaybe<Scalars['Int']['input']>;
  gte?: InputMaybe<Scalars['Int']['input']>;
  in?: InputMaybe<Array<Scalars['Int']['input']>>;
  lt?: InputMaybe<Scalars['Int']['input']>;
  lte?: InputMaybe<Scalars['Int']['input']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NestedStringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NestedStringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type NullableBigIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['BigInt']['input']>;
  divide?: InputMaybe<Scalars['BigInt']['input']>;
  increment?: InputMaybe<Scalars['BigInt']['input']>;
  multiply?: InputMaybe<Scalars['BigInt']['input']>;
  set?: InputMaybe<Scalars['BigInt']['input']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']['input']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']['input']>;
};

export enum NullsOrder {
  First = 'first',
  Last = 'last'
}

export type PaymentAccount = {
  __typename?: 'PaymentAccount';
  account_number: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  method: PaymentMethod;
  method_id: Scalars['String']['output'];
  updated_at: Scalars['DateTime']['output'];
};

export type PaymentAccountCountAggregate = {
  __typename?: 'PaymentAccountCountAggregate';
  _all: Scalars['Int']['output'];
  account_number: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  method_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type PaymentAccountCountOrderByAggregateInput = {
  account_number?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentAccountCreateInput = {
  account_number: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  method: PaymentMethodCreateNestedOneWithoutAccountsInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentAccountCreateManyInput = {
  account_number: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  method_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentAccountCreateManyMethodInput = {
  account_number: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentAccountCreateManyMethodInputEnvelope = {
  data: Array<PaymentAccountCreateManyMethodInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentAccountCreateNestedManyWithoutMethodInput = {
  connect?: InputMaybe<Array<PaymentAccountWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentAccountCreateOrConnectWithoutMethodInput>>;
  create?: InputMaybe<Array<PaymentAccountCreateWithoutMethodInput>>;
  createMany?: InputMaybe<PaymentAccountCreateManyMethodInputEnvelope>;
};

export type PaymentAccountCreateOrConnectWithoutMethodInput = {
  create: PaymentAccountCreateWithoutMethodInput;
  where: PaymentAccountWhereUniqueInput;
};

export type PaymentAccountCreateWithoutMethodInput = {
  account_number: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentAccountGroupBy = {
  __typename?: 'PaymentAccountGroupBy';
  _count?: Maybe<PaymentAccountCountAggregate>;
  _max?: Maybe<PaymentAccountMaxAggregate>;
  _min?: Maybe<PaymentAccountMinAggregate>;
  account_number: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  method_id: Scalars['String']['output'];
  updated_at: Scalars['DateTime']['output'];
};

export type PaymentAccountListRelationFilter = {
  every?: InputMaybe<PaymentAccountWhereInput>;
  none?: InputMaybe<PaymentAccountWhereInput>;
  some?: InputMaybe<PaymentAccountWhereInput>;
};

export type PaymentAccountMaxAggregate = {
  __typename?: 'PaymentAccountMaxAggregate';
  account_number?: Maybe<Scalars['String']['output']>;
  active?: Maybe<Scalars['Boolean']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  method_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PaymentAccountMaxOrderByAggregateInput = {
  account_number?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentAccountMinAggregate = {
  __typename?: 'PaymentAccountMinAggregate';
  account_number?: Maybe<Scalars['String']['output']>;
  active?: Maybe<Scalars['Boolean']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  method_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PaymentAccountMinOrderByAggregateInput = {
  account_number?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  method_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentAccountOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PaymentAccountOrderByWithAggregationInput = {
  _count?: InputMaybe<PaymentAccountCountOrderByAggregateInput>;
  _max?: InputMaybe<PaymentAccountMaxOrderByAggregateInput>;
  _min?: InputMaybe<PaymentAccountMinOrderByAggregateInput>;
  account_number?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  method_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentAccountOrderByWithRelationInput = {
  account_number?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  method?: InputMaybe<PaymentMethodOrderByWithRelationInput>;
  method_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export enum PaymentAccountScalarFieldEnum {
  AccountNumber = 'account_number',
  Active = 'active',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  MethodId = 'method_id',
  UpdatedAt = 'updated_at'
}

export type PaymentAccountScalarWhereInput = {
  AND?: InputMaybe<Array<PaymentAccountScalarWhereInput>>;
  NOT?: InputMaybe<Array<PaymentAccountScalarWhereInput>>;
  OR?: InputMaybe<Array<PaymentAccountScalarWhereInput>>;
  account_number?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  method_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type PaymentAccountScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PaymentAccountScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PaymentAccountScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PaymentAccountScalarWhereWithAggregatesInput>>;
  account_number?: InputMaybe<StringWithAggregatesFilter>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  method_id?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type PaymentAccountUpdateInput = {
  account_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  method?: InputMaybe<PaymentMethodUpdateOneRequiredWithoutAccountsNestedInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentAccountUpdateManyMutationInput = {
  account_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentAccountUpdateManyWithWhereWithoutMethodInput = {
  data: PaymentAccountUpdateManyMutationInput;
  where: PaymentAccountScalarWhereInput;
};

export type PaymentAccountUpdateManyWithoutMethodNestedInput = {
  connect?: InputMaybe<Array<PaymentAccountWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentAccountCreateOrConnectWithoutMethodInput>>;
  create?: InputMaybe<Array<PaymentAccountCreateWithoutMethodInput>>;
  createMany?: InputMaybe<PaymentAccountCreateManyMethodInputEnvelope>;
  delete?: InputMaybe<Array<PaymentAccountWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PaymentAccountScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PaymentAccountWhereUniqueInput>>;
  set?: InputMaybe<Array<PaymentAccountWhereUniqueInput>>;
  update?: InputMaybe<Array<PaymentAccountUpdateWithWhereUniqueWithoutMethodInput>>;
  updateMany?: InputMaybe<Array<PaymentAccountUpdateManyWithWhereWithoutMethodInput>>;
  upsert?: InputMaybe<Array<PaymentAccountUpsertWithWhereUniqueWithoutMethodInput>>;
};

export type PaymentAccountUpdateWithWhereUniqueWithoutMethodInput = {
  data: PaymentAccountUpdateWithoutMethodInput;
  where: PaymentAccountWhereUniqueInput;
};

export type PaymentAccountUpdateWithoutMethodInput = {
  account_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentAccountUpsertWithWhereUniqueWithoutMethodInput = {
  create: PaymentAccountCreateWithoutMethodInput;
  update: PaymentAccountUpdateWithoutMethodInput;
  where: PaymentAccountWhereUniqueInput;
};

export type PaymentAccountWhereInput = {
  AND?: InputMaybe<Array<PaymentAccountWhereInput>>;
  NOT?: InputMaybe<Array<PaymentAccountWhereInput>>;
  OR?: InputMaybe<Array<PaymentAccountWhereInput>>;
  account_number?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  method?: InputMaybe<PaymentMethodRelationFilter>;
  method_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type PaymentAccountWhereUniqueInput = {
  AND?: InputMaybe<Array<PaymentAccountWhereInput>>;
  NOT?: InputMaybe<Array<PaymentAccountWhereInput>>;
  OR?: InputMaybe<Array<PaymentAccountWhereInput>>;
  account_number?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  method?: InputMaybe<PaymentMethodRelationFilter>;
  method_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type PaymentDetail = {
  __typename?: 'PaymentDetail';
  amount: Scalars['Decimal']['output'];
  before_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_increment: Scalars['Boolean']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  payment_date: Scalars['DateTime']['output'];
  payment_info?: Maybe<Scalars['String']['output']>;
  payment_method: Scalars['String']['output'];
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_note?: Maybe<Scalars['String']['output']>;
  sale?: Maybe<Sale>;
  sale_id?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['DateTime']['output'];
  user_id: Scalars['String']['output'];
  username: Scalars['String']['output'];
};


export type PaymentDetailSaleArgs = {
  where?: InputMaybe<SaleWhereInput>;
};

export type PaymentDetailAvgAggregate = {
  __typename?: 'PaymentDetailAvgAggregate';
  amount?: Maybe<Scalars['Decimal']['output']>;
  before_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type PaymentDetailAvgOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
};

export type PaymentDetailCountAggregate = {
  __typename?: 'PaymentDetailCountAggregate';
  _all: Scalars['Int']['output'];
  amount: Scalars['Int']['output'];
  before_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_increment: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  payment_date: Scalars['Int']['output'];
  payment_info: Scalars['Int']['output'];
  payment_method: Scalars['Int']['output'];
  payment_method_id: Scalars['Int']['output'];
  payment_note: Scalars['Int']['output'];
  sale_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
  username: Scalars['Int']['output'];
};

export type PaymentDetailCountOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_increment?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  payment_date?: InputMaybe<SortOrder>;
  payment_info?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_note?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type PaymentDetailCreateInput = {
  amount?: InputMaybe<Scalars['Decimal']['input']>;
  before_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_increment?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  payment_date: Scalars['DateTime']['input'];
  payment_info?: InputMaybe<Scalars['String']['input']>;
  payment_method: Scalars['String']['input'];
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_note?: InputMaybe<Scalars['String']['input']>;
  sale?: InputMaybe<SaleCreateNestedOneWithoutPayment_DetailsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type PaymentDetailCreateManyInput = {
  amount?: InputMaybe<Scalars['Decimal']['input']>;
  before_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_increment?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  payment_date: Scalars['DateTime']['input'];
  payment_info?: InputMaybe<Scalars['String']['input']>;
  payment_method: Scalars['String']['input'];
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_note?: InputMaybe<Scalars['String']['input']>;
  sale_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type PaymentDetailCreateManySaleInput = {
  amount?: InputMaybe<Scalars['Decimal']['input']>;
  before_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_increment?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  payment_date: Scalars['DateTime']['input'];
  payment_info?: InputMaybe<Scalars['String']['input']>;
  payment_method: Scalars['String']['input'];
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_note?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type PaymentDetailCreateManySaleInputEnvelope = {
  data: Array<PaymentDetailCreateManySaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentDetailCreateNestedManyWithoutSaleInput = {
  connect?: InputMaybe<Array<PaymentDetailWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentDetailCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<PaymentDetailCreateWithoutSaleInput>>;
  createMany?: InputMaybe<PaymentDetailCreateManySaleInputEnvelope>;
};

export type PaymentDetailCreateOrConnectWithoutSaleInput = {
  create: PaymentDetailCreateWithoutSaleInput;
  where: PaymentDetailWhereUniqueInput;
};

export type PaymentDetailCreateWithoutSaleInput = {
  amount?: InputMaybe<Scalars['Decimal']['input']>;
  before_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_increment?: InputMaybe<Scalars['Boolean']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  payment_date: Scalars['DateTime']['input'];
  payment_info?: InputMaybe<Scalars['String']['input']>;
  payment_method: Scalars['String']['input'];
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_note?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
  username: Scalars['String']['input'];
};

export type PaymentDetailGroupBy = {
  __typename?: 'PaymentDetailGroupBy';
  _avg?: Maybe<PaymentDetailAvgAggregate>;
  _count?: Maybe<PaymentDetailCountAggregate>;
  _max?: Maybe<PaymentDetailMaxAggregate>;
  _min?: Maybe<PaymentDetailMinAggregate>;
  _sum?: Maybe<PaymentDetailSumAggregate>;
  amount: Scalars['Decimal']['output'];
  before_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_increment: Scalars['Boolean']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  payment_date: Scalars['DateTime']['output'];
  payment_info?: Maybe<Scalars['String']['output']>;
  payment_method: Scalars['String']['output'];
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_note?: Maybe<Scalars['String']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  updated_at: Scalars['DateTime']['output'];
  user_id: Scalars['String']['output'];
  username: Scalars['String']['output'];
};

export type PaymentDetailListRelationFilter = {
  every?: InputMaybe<PaymentDetailWhereInput>;
  none?: InputMaybe<PaymentDetailWhereInput>;
  some?: InputMaybe<PaymentDetailWhereInput>;
};

export type PaymentDetailMaxAggregate = {
  __typename?: 'PaymentDetailMaxAggregate';
  amount?: Maybe<Scalars['Decimal']['output']>;
  before_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_increment?: Maybe<Scalars['Boolean']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  payment_date?: Maybe<Scalars['DateTime']['output']>;
  payment_info?: Maybe<Scalars['String']['output']>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_note?: Maybe<Scalars['String']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

export type PaymentDetailMaxOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_increment?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  payment_date?: InputMaybe<SortOrder>;
  payment_info?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_note?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type PaymentDetailMinAggregate = {
  __typename?: 'PaymentDetailMinAggregate';
  amount?: Maybe<Scalars['Decimal']['output']>;
  before_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_increment?: Maybe<Scalars['Boolean']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  payment_date?: Maybe<Scalars['DateTime']['output']>;
  payment_info?: Maybe<Scalars['String']['output']>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_note?: Maybe<Scalars['String']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

export type PaymentDetailMinOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_increment?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  payment_date?: InputMaybe<SortOrder>;
  payment_info?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_note?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type PaymentDetailOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PaymentDetailOrderByWithAggregationInput = {
  _avg?: InputMaybe<PaymentDetailAvgOrderByAggregateInput>;
  _count?: InputMaybe<PaymentDetailCountOrderByAggregateInput>;
  _max?: InputMaybe<PaymentDetailMaxOrderByAggregateInput>;
  _min?: InputMaybe<PaymentDetailMinOrderByAggregateInput>;
  _sum?: InputMaybe<PaymentDetailSumOrderByAggregateInput>;
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_increment?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  payment_date?: InputMaybe<SortOrder>;
  payment_info?: InputMaybe<SortOrderInput>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrderInput>;
  payment_note?: InputMaybe<SortOrderInput>;
  sale_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export type PaymentDetailOrderByWithRelationInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_increment?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  payment_date?: InputMaybe<SortOrder>;
  payment_info?: InputMaybe<SortOrderInput>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrderInput>;
  payment_note?: InputMaybe<SortOrderInput>;
  sale?: InputMaybe<SaleOrderByWithRelationInput>;
  sale_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
  username?: InputMaybe<SortOrder>;
};

export enum PaymentDetailScalarFieldEnum {
  Amount = 'amount',
  BeforeAmount = 'before_amount',
  CreatedAt = 'created_at',
  Id = 'id',
  IsIncrement = 'is_increment',
  Metadata = 'metadata',
  PaymentDate = 'payment_date',
  PaymentInfo = 'payment_info',
  PaymentMethod = 'payment_method',
  PaymentMethodId = 'payment_method_id',
  PaymentNote = 'payment_note',
  SaleId = 'sale_id',
  UpdatedAt = 'updated_at',
  UserId = 'user_id',
  Username = 'username'
}

export type PaymentDetailScalarWhereInput = {
  AND?: InputMaybe<Array<PaymentDetailScalarWhereInput>>;
  NOT?: InputMaybe<Array<PaymentDetailScalarWhereInput>>;
  OR?: InputMaybe<Array<PaymentDetailScalarWhereInput>>;
  amount?: InputMaybe<DecimalFilter>;
  before_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_increment?: InputMaybe<BoolFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  payment_date?: InputMaybe<DateTimeFilter>;
  payment_info?: InputMaybe<StringNullableFilter>;
  payment_method?: InputMaybe<StringFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_note?: InputMaybe<StringNullableFilter>;
  sale_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  user_id?: InputMaybe<StringFilter>;
  username?: InputMaybe<StringFilter>;
};

export type PaymentDetailScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PaymentDetailScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PaymentDetailScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PaymentDetailScalarWhereWithAggregatesInput>>;
  amount?: InputMaybe<DecimalWithAggregatesFilter>;
  before_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_increment?: InputMaybe<BoolWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  payment_info?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_method?: InputMaybe<StringWithAggregatesFilter>;
  payment_method_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_note?: InputMaybe<StringNullableWithAggregatesFilter>;
  sale_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  user_id?: InputMaybe<StringWithAggregatesFilter>;
  username?: InputMaybe<StringWithAggregatesFilter>;
};

export type PaymentDetailSumAggregate = {
  __typename?: 'PaymentDetailSumAggregate';
  amount?: Maybe<Scalars['Decimal']['output']>;
  before_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type PaymentDetailSumOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  before_amount?: InputMaybe<SortOrder>;
};

export type PaymentDetailUpdateInput = {
  amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  before_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_increment?: InputMaybe<BoolFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  payment_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sale?: InputMaybe<SaleUpdateOneWithoutPayment_DetailsNestedInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  username?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type PaymentDetailUpdateManyMutationInput = {
  amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  before_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_increment?: InputMaybe<BoolFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  payment_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  username?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type PaymentDetailUpdateManyWithWhereWithoutSaleInput = {
  data: PaymentDetailUpdateManyMutationInput;
  where: PaymentDetailScalarWhereInput;
};

export type PaymentDetailUpdateManyWithoutSaleNestedInput = {
  connect?: InputMaybe<Array<PaymentDetailWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentDetailCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<PaymentDetailCreateWithoutSaleInput>>;
  createMany?: InputMaybe<PaymentDetailCreateManySaleInputEnvelope>;
  delete?: InputMaybe<Array<PaymentDetailWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PaymentDetailScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PaymentDetailWhereUniqueInput>>;
  set?: InputMaybe<Array<PaymentDetailWhereUniqueInput>>;
  update?: InputMaybe<Array<PaymentDetailUpdateWithWhereUniqueWithoutSaleInput>>;
  updateMany?: InputMaybe<Array<PaymentDetailUpdateManyWithWhereWithoutSaleInput>>;
  upsert?: InputMaybe<Array<PaymentDetailUpsertWithWhereUniqueWithoutSaleInput>>;
};

export type PaymentDetailUpdateWithWhereUniqueWithoutSaleInput = {
  data: PaymentDetailUpdateWithoutSaleInput;
  where: PaymentDetailWhereUniqueInput;
};

export type PaymentDetailUpdateWithoutSaleInput = {
  amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  before_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_increment?: InputMaybe<BoolFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  payment_info?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  username?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type PaymentDetailUpsertWithWhereUniqueWithoutSaleInput = {
  create: PaymentDetailCreateWithoutSaleInput;
  update: PaymentDetailUpdateWithoutSaleInput;
  where: PaymentDetailWhereUniqueInput;
};

export type PaymentDetailWhereInput = {
  AND?: InputMaybe<Array<PaymentDetailWhereInput>>;
  NOT?: InputMaybe<Array<PaymentDetailWhereInput>>;
  OR?: InputMaybe<Array<PaymentDetailWhereInput>>;
  amount?: InputMaybe<DecimalFilter>;
  before_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_increment?: InputMaybe<BoolFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  payment_date?: InputMaybe<DateTimeFilter>;
  payment_info?: InputMaybe<StringNullableFilter>;
  payment_method?: InputMaybe<StringFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_note?: InputMaybe<StringNullableFilter>;
  sale?: InputMaybe<SaleNullableRelationFilter>;
  sale_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  user_id?: InputMaybe<StringFilter>;
  username?: InputMaybe<StringFilter>;
};

export type PaymentDetailWhereUniqueInput = {
  AND?: InputMaybe<Array<PaymentDetailWhereInput>>;
  NOT?: InputMaybe<Array<PaymentDetailWhereInput>>;
  OR?: InputMaybe<Array<PaymentDetailWhereInput>>;
  amount?: InputMaybe<DecimalFilter>;
  before_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_increment?: InputMaybe<BoolFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  payment_date?: InputMaybe<DateTimeFilter>;
  payment_info?: InputMaybe<StringNullableFilter>;
  payment_method?: InputMaybe<StringFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_note?: InputMaybe<StringNullableFilter>;
  sale?: InputMaybe<SaleNullableRelationFilter>;
  sale_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  user_id?: InputMaybe<StringFilter>;
  username?: InputMaybe<StringFilter>;
};

export type PaymentMethod = {
  __typename?: 'PaymentMethod';
  _count?: Maybe<PaymentMethodCount>;
  accounts: Array<PaymentAccount>;
  available_all_channel: Scalars['Boolean']['output'];
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  stores: Array<Store>;
  updated_at: Scalars['DateTime']['output'];
};


export type PaymentMethodAccountsArgs = {
  cursor?: InputMaybe<PaymentAccountWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentAccountScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type PaymentMethodStoresArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};

export type PaymentMethodCount = {
  __typename?: 'PaymentMethodCount';
  accounts: Scalars['Int']['output'];
  stores: Scalars['Int']['output'];
};


export type PaymentMethodCountAccountsArgs = {
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type PaymentMethodCountStoresArgs = {
  where?: InputMaybe<StoreWhereInput>;
};

export type PaymentMethodCountAggregate = {
  __typename?: 'PaymentMethodCountAggregate';
  _all: Scalars['Int']['output'];
  available_all_channel: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type PaymentMethodCountOrderByAggregateInput = {
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentMethodCreateInput = {
  accounts?: InputMaybe<PaymentAccountCreateNestedManyWithoutMethodInput>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutPayment_MethodsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutPayment_MethodsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodCreateManyBusinessInput = {
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodCreateManyBusinessInputEnvelope = {
  data: Array<PaymentMethodCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PaymentMethodCreateManyInput = {
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentMethodCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<PaymentMethodCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<PaymentMethodCreateManyBusinessInputEnvelope>;
};

export type PaymentMethodCreateNestedManyWithoutStoresInput = {
  connect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentMethodCreateOrConnectWithoutStoresInput>>;
  create?: InputMaybe<Array<PaymentMethodCreateWithoutStoresInput>>;
};

export type PaymentMethodCreateNestedOneWithoutAccountsInput = {
  connect?: InputMaybe<PaymentMethodWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PaymentMethodCreateOrConnectWithoutAccountsInput>;
  create?: InputMaybe<PaymentMethodCreateWithoutAccountsInput>;
};

export type PaymentMethodCreateOrConnectWithoutAccountsInput = {
  create: PaymentMethodCreateWithoutAccountsInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodCreateOrConnectWithoutBusinessInput = {
  create: PaymentMethodCreateWithoutBusinessInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodCreateOrConnectWithoutStoresInput = {
  create: PaymentMethodCreateWithoutStoresInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodCreateWithoutAccountsInput = {
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutPayment_MethodsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutPayment_MethodsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodCreateWithoutBusinessInput = {
  accounts?: InputMaybe<PaymentAccountCreateNestedManyWithoutMethodInput>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  stores?: InputMaybe<StoreCreateNestedManyWithoutPayment_MethodsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodCreateWithoutStoresInput = {
  accounts?: InputMaybe<PaymentAccountCreateNestedManyWithoutMethodInput>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutPayment_MethodsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PaymentMethodGroupBy = {
  __typename?: 'PaymentMethodGroupBy';
  _count?: Maybe<PaymentMethodCountAggregate>;
  _max?: Maybe<PaymentMethodMaxAggregate>;
  _min?: Maybe<PaymentMethodMinAggregate>;
  available_all_channel: Scalars['Boolean']['output'];
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  updated_at: Scalars['DateTime']['output'];
};

export type PaymentMethodListRelationFilter = {
  every?: InputMaybe<PaymentMethodWhereInput>;
  none?: InputMaybe<PaymentMethodWhereInput>;
  some?: InputMaybe<PaymentMethodWhereInput>;
};

export type PaymentMethodMaxAggregate = {
  __typename?: 'PaymentMethodMaxAggregate';
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PaymentMethodMaxOrderByAggregateInput = {
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentMethodMinAggregate = {
  __typename?: 'PaymentMethodMinAggregate';
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PaymentMethodMinOrderByAggregateInput = {
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentMethodOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PaymentMethodOrderByWithAggregationInput = {
  _count?: InputMaybe<PaymentMethodCountOrderByAggregateInput>;
  _max?: InputMaybe<PaymentMethodMaxOrderByAggregateInput>;
  _min?: InputMaybe<PaymentMethodMinOrderByAggregateInput>;
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentMethodOrderByWithRelationInput = {
  accounts?: InputMaybe<PaymentAccountOrderByRelationAggregateInput>;
  available_all_channel?: InputMaybe<SortOrder>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  stores?: InputMaybe<StoreOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PaymentMethodRelationFilter = {
  is?: InputMaybe<PaymentMethodWhereInput>;
  isNot?: InputMaybe<PaymentMethodWhereInput>;
};

export enum PaymentMethodScalarFieldEnum {
  AvailableAllChannel = 'available_all_channel',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  UpdatedAt = 'updated_at'
}

export type PaymentMethodScalarWhereInput = {
  AND?: InputMaybe<Array<PaymentMethodScalarWhereInput>>;
  NOT?: InputMaybe<Array<PaymentMethodScalarWhereInput>>;
  OR?: InputMaybe<Array<PaymentMethodScalarWhereInput>>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type PaymentMethodScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PaymentMethodScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PaymentMethodScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PaymentMethodScalarWhereWithAggregatesInput>>;
  available_all_channel?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type PaymentMethodUpdateInput = {
  accounts?: InputMaybe<PaymentAccountUpdateManyWithoutMethodNestedInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutPayment_MethodsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutPayment_MethodsNestedInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentMethodUpdateManyMutationInput = {
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentMethodUpdateManyWithWhereWithoutBusinessInput = {
  data: PaymentMethodUpdateManyMutationInput;
  where: PaymentMethodScalarWhereInput;
};

export type PaymentMethodUpdateManyWithWhereWithoutStoresInput = {
  data: PaymentMethodUpdateManyMutationInput;
  where: PaymentMethodScalarWhereInput;
};

export type PaymentMethodUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentMethodCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<PaymentMethodCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<PaymentMethodCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PaymentMethodScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  set?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  update?: InputMaybe<Array<PaymentMethodUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<PaymentMethodUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<PaymentMethodUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type PaymentMethodUpdateManyWithoutStoresNestedInput = {
  connect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PaymentMethodCreateOrConnectWithoutStoresInput>>;
  create?: InputMaybe<Array<PaymentMethodCreateWithoutStoresInput>>;
  delete?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PaymentMethodScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  set?: InputMaybe<Array<PaymentMethodWhereUniqueInput>>;
  update?: InputMaybe<Array<PaymentMethodUpdateWithWhereUniqueWithoutStoresInput>>;
  updateMany?: InputMaybe<Array<PaymentMethodUpdateManyWithWhereWithoutStoresInput>>;
  upsert?: InputMaybe<Array<PaymentMethodUpsertWithWhereUniqueWithoutStoresInput>>;
};

export type PaymentMethodUpdateOneRequiredWithoutAccountsNestedInput = {
  connect?: InputMaybe<PaymentMethodWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PaymentMethodCreateOrConnectWithoutAccountsInput>;
  create?: InputMaybe<PaymentMethodCreateWithoutAccountsInput>;
  update?: InputMaybe<PaymentMethodUpdateToOneWithWhereWithoutAccountsInput>;
  upsert?: InputMaybe<PaymentMethodUpsertWithoutAccountsInput>;
};

export type PaymentMethodUpdateToOneWithWhereWithoutAccountsInput = {
  data: PaymentMethodUpdateWithoutAccountsInput;
  where?: InputMaybe<PaymentMethodWhereInput>;
};

export type PaymentMethodUpdateWithWhereUniqueWithoutBusinessInput = {
  data: PaymentMethodUpdateWithoutBusinessInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodUpdateWithWhereUniqueWithoutStoresInput = {
  data: PaymentMethodUpdateWithoutStoresInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodUpdateWithoutAccountsInput = {
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutPayment_MethodsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutPayment_MethodsNestedInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentMethodUpdateWithoutBusinessInput = {
  accounts?: InputMaybe<PaymentAccountUpdateManyWithoutMethodNestedInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutPayment_MethodsNestedInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentMethodUpdateWithoutStoresInput = {
  accounts?: InputMaybe<PaymentAccountUpdateManyWithoutMethodNestedInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutPayment_MethodsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PaymentMethodUpsertWithWhereUniqueWithoutBusinessInput = {
  create: PaymentMethodCreateWithoutBusinessInput;
  update: PaymentMethodUpdateWithoutBusinessInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodUpsertWithWhereUniqueWithoutStoresInput = {
  create: PaymentMethodCreateWithoutStoresInput;
  update: PaymentMethodUpdateWithoutStoresInput;
  where: PaymentMethodWhereUniqueInput;
};

export type PaymentMethodUpsertWithoutAccountsInput = {
  create: PaymentMethodCreateWithoutAccountsInput;
  update: PaymentMethodUpdateWithoutAccountsInput;
  where?: InputMaybe<PaymentMethodWhereInput>;
};

export type PaymentMethodWhereInput = {
  AND?: InputMaybe<Array<PaymentMethodWhereInput>>;
  NOT?: InputMaybe<Array<PaymentMethodWhereInput>>;
  OR?: InputMaybe<Array<PaymentMethodWhereInput>>;
  accounts?: InputMaybe<PaymentAccountListRelationFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type PaymentMethodWhereUniqueInput = {
  AND?: InputMaybe<Array<PaymentMethodWhereInput>>;
  NOT?: InputMaybe<Array<PaymentMethodWhereInput>>;
  OR?: InputMaybe<Array<PaymentMethodWhereInput>>;
  accounts?: InputMaybe<PaymentAccountListRelationFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export enum PaymentStatus {
  Paid = 'PAID',
  PartiallyPaid = 'PARTIALLY_PAID',
  Unpaid = 'UNPAID'
}

export type Permission = {
  __typename?: 'Permission';
  _count?: Maybe<PermissionCount>;
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  group_id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  roles: Array<Role>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type PermissionRolesArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};

export type PermissionAvgAggregate = {
  __typename?: 'PermissionAvgAggregate';
  group_id?: Maybe<Scalars['Float']['output']>;
  order?: Maybe<Scalars['Float']['output']>;
};

export type PermissionAvgOrderByAggregateInput = {
  group_id?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
};

export type PermissionCount = {
  __typename?: 'PermissionCount';
  roles: Scalars['Int']['output'];
};


export type PermissionCountRolesArgs = {
  where?: InputMaybe<RoleWhereInput>;
};

export type PermissionCountAggregate = {
  __typename?: 'PermissionCountAggregate';
  _all: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  group_id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  order: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type PermissionCountOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  group_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PermissionCreateInput = {
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  group_id?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  roles?: InputMaybe<RoleCreateNestedManyWithoutPermissionsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PermissionCreateManyInput = {
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  group_id?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PermissionCreateNestedManyWithoutRolesInput = {
  connect?: InputMaybe<Array<PermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PermissionCreateOrConnectWithoutRolesInput>>;
  create?: InputMaybe<Array<PermissionCreateWithoutRolesInput>>;
};

export type PermissionCreateOrConnectWithoutRolesInput = {
  create: PermissionCreateWithoutRolesInput;
  where: PermissionWhereUniqueInput;
};

export type PermissionCreateWithoutRolesInput = {
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  group_id?: InputMaybe<Scalars['Int']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PermissionGroupBy = {
  __typename?: 'PermissionGroupBy';
  _avg?: Maybe<PermissionAvgAggregate>;
  _count?: Maybe<PermissionCountAggregate>;
  _max?: Maybe<PermissionMaxAggregate>;
  _min?: Maybe<PermissionMinAggregate>;
  _sum?: Maybe<PermissionSumAggregate>;
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  group_id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PermissionListRelationFilter = {
  every?: InputMaybe<PermissionWhereInput>;
  none?: InputMaybe<PermissionWhereInput>;
  some?: InputMaybe<PermissionWhereInput>;
};

export type PermissionMaxAggregate = {
  __typename?: 'PermissionMaxAggregate';
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  group_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PermissionMaxOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  group_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PermissionMinAggregate = {
  __typename?: 'PermissionMinAggregate';
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  group_id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type PermissionMinOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  group_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type PermissionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PermissionOrderByWithAggregationInput = {
  _avg?: InputMaybe<PermissionAvgOrderByAggregateInput>;
  _count?: InputMaybe<PermissionCountOrderByAggregateInput>;
  _max?: InputMaybe<PermissionMaxOrderByAggregateInput>;
  _min?: InputMaybe<PermissionMinOrderByAggregateInput>;
  _sum?: InputMaybe<PermissionSumOrderByAggregateInput>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  group_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type PermissionOrderByWithRelationInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  group_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  roles?: InputMaybe<RoleOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum PermissionScalarFieldEnum {
  Code = 'code',
  CreatedAt = 'created_at',
  Description = 'description',
  GroupId = 'group_id',
  Name = 'name',
  Order = 'order',
  UpdatedAt = 'updated_at'
}

export type PermissionScalarWhereInput = {
  AND?: InputMaybe<Array<PermissionScalarWhereInput>>;
  NOT?: InputMaybe<Array<PermissionScalarWhereInput>>;
  OR?: InputMaybe<Array<PermissionScalarWhereInput>>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  group_id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type PermissionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PermissionScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PermissionScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PermissionScalarWhereWithAggregatesInput>>;
  code?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  group_id?: InputMaybe<IntWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  order?: InputMaybe<IntWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type PermissionSumAggregate = {
  __typename?: 'PermissionSumAggregate';
  group_id?: Maybe<Scalars['Int']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
};

export type PermissionSumOrderByAggregateInput = {
  group_id?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
};

export type PermissionUpdateInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  roles?: InputMaybe<RoleUpdateManyWithoutPermissionsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PermissionUpdateManyMutationInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PermissionUpdateManyWithWhereWithoutRolesInput = {
  data: PermissionUpdateManyMutationInput;
  where: PermissionScalarWhereInput;
};

export type PermissionUpdateManyWithoutRolesNestedInput = {
  connect?: InputMaybe<Array<PermissionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PermissionCreateOrConnectWithoutRolesInput>>;
  create?: InputMaybe<Array<PermissionCreateWithoutRolesInput>>;
  delete?: InputMaybe<Array<PermissionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PermissionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PermissionWhereUniqueInput>>;
  set?: InputMaybe<Array<PermissionWhereUniqueInput>>;
  update?: InputMaybe<Array<PermissionUpdateWithWhereUniqueWithoutRolesInput>>;
  updateMany?: InputMaybe<Array<PermissionUpdateManyWithWhereWithoutRolesInput>>;
  upsert?: InputMaybe<Array<PermissionUpsertWithWhereUniqueWithoutRolesInput>>;
};

export type PermissionUpdateWithWhereUniqueWithoutRolesInput = {
  data: PermissionUpdateWithoutRolesInput;
  where: PermissionWhereUniqueInput;
};

export type PermissionUpdateWithoutRolesInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  group_id?: InputMaybe<IntFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PermissionUpsertWithWhereUniqueWithoutRolesInput = {
  create: PermissionCreateWithoutRolesInput;
  update: PermissionUpdateWithoutRolesInput;
  where: PermissionWhereUniqueInput;
};

export type PermissionWhereInput = {
  AND?: InputMaybe<Array<PermissionWhereInput>>;
  NOT?: InputMaybe<Array<PermissionWhereInput>>;
  OR?: InputMaybe<Array<PermissionWhereInput>>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  group_id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  roles?: InputMaybe<RoleListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type PermissionWhereUniqueInput = {
  AND?: InputMaybe<Array<PermissionWhereInput>>;
  NOT?: InputMaybe<Array<PermissionWhereInput>>;
  OR?: InputMaybe<Array<PermissionWhereInput>>;
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  group_id?: InputMaybe<IntFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  roles?: InputMaybe<RoleListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type Product = {
  __typename?: 'Product';
  _count?: Maybe<ProductCount>;
  active: Scalars['Boolean']['output'];
  available_all_channel: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  business: Business;
  business_id: Scalars['String']['output'];
  category?: Maybe<ProductCategory>;
  category_id?: Maybe<Scalars['String']['output']>;
  composites: Array<CompositeItem>;
  created_at: Scalars['DateTime']['output'];
  default_stock?: Maybe<ProductStock>;
  default_stock_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Image>;
  image_id?: Maybe<Scalars['String']['output']>;
  images: Array<Image>;
  name: Scalars['String']['output'];
  options: Array<ProductVariant>;
  sale_channels: Array<SaleChannel>;
  seq: Scalars['Int']['output'];
  sku?: Maybe<Scalars['String']['output']>;
  stock_items: Array<ProductStockItem>;
  stocks: Array<ProductStock>;
  supplier?: Maybe<Supplier>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  taxes: Array<TaxSetting>;
  track_inventory: Scalars['Boolean']['output'];
  type: ProductType;
  unit?: Maybe<ProductUnit>;
  unit_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  variants: Array<ProductVariant>;
};


export type ProductCategoryArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ProductCompositesArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type ProductDefault_StockArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};


export type ProductImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type ProductImagesArgs = {
  cursor?: InputMaybe<ImageWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type ProductOptionsArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type ProductSale_ChannelsArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type ProductStock_ItemsArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type ProductStocksArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type ProductSupplierArgs = {
  where?: InputMaybe<SupplierWhereInput>;
};


export type ProductTaxesArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TaxSettingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type ProductUnitArgs = {
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type ProductVariantsArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductAvgAggregate = {
  __typename?: 'ProductAvgAggregate';
  seq?: Maybe<Scalars['Float']['output']>;
};

export type ProductAvgOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
};

export type ProductBusiness_IdNameCompoundUniqueInput = {
  business_id: Scalars['String']['input'];
  name: Scalars['String']['input'];
};

export type ProductCategory = {
  __typename?: 'ProductCategory';
  _count?: Maybe<ProductCategoryCount>;
  active: Scalars['Boolean']['output'];
  available_all_channel: Scalars['Boolean']['output'];
  business: Business;
  business_id: Scalars['String']['output'];
  children: Array<ProductCategory>;
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Image>;
  image_id?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  parent?: Maybe<ProductCategory>;
  parent_id?: Maybe<Scalars['String']['output']>;
  products: Array<Product>;
  sale_channels: Array<SaleChannel>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type ProductCategoryChildrenArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ProductCategoryImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type ProductCategoryParentArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ProductCategoryProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type ProductCategorySale_ChannelsArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};

export type ProductCategoryAvgAggregate = {
  __typename?: 'ProductCategoryAvgAggregate';
  order?: Maybe<Scalars['Float']['output']>;
};

export type ProductCategoryAvgOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
};

export type ProductCategoryCount = {
  __typename?: 'ProductCategoryCount';
  children: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
  sale_channels: Scalars['Int']['output'];
};


export type ProductCategoryCountChildrenArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type ProductCategoryCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type ProductCategoryCountSale_ChannelsArgs = {
  where?: InputMaybe<SaleChannelWhereInput>;
};

export type ProductCategoryCountAggregate = {
  __typename?: 'ProductCategoryCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  available_all_channel: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image_id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  order: Scalars['Int']['output'];
  parent_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ProductCategoryCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductCategoryCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateManyBusinessInputEnvelope = {
  data: Array<ProductCategoryCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCategoryCreateManyImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateManyImageInputEnvelope = {
  data: Array<ProductCategoryCreateManyImageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCategoryCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateManyParentInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateManyParentInputEnvelope = {
  data: Array<ProductCategoryCreateManyParentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCategoryCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyBusinessInputEnvelope>;
};

export type ProductCategoryCreateNestedManyWithoutImageInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutImageInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyImageInputEnvelope>;
};

export type ProductCategoryCreateNestedManyWithoutParentInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutParentInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutParentInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyParentInputEnvelope>;
};

export type ProductCategoryCreateNestedManyWithoutSale_ChannelsInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutSale_ChannelsInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutSale_ChannelsInput>>;
};

export type ProductCategoryCreateNestedOneWithoutChildrenInput = {
  connect?: InputMaybe<ProductCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCategoryCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<ProductCategoryCreateWithoutChildrenInput>;
};

export type ProductCategoryCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<ProductCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCategoryCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ProductCategoryCreateWithoutProductsInput>;
};

export type ProductCategoryCreateOrConnectWithoutBusinessInput = {
  create: ProductCategoryCreateWithoutBusinessInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateOrConnectWithoutChildrenInput = {
  create: ProductCategoryCreateWithoutChildrenInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateOrConnectWithoutImageInput = {
  create: ProductCategoryCreateWithoutImageInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateOrConnectWithoutParentInput = {
  create: ProductCategoryCreateWithoutParentInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateOrConnectWithoutProductsInput = {
  create: ProductCategoryCreateWithoutProductsInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateOrConnectWithoutSale_ChannelsInput = {
  create: ProductCategoryCreateWithoutSale_ChannelsInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateWithoutChildrenInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateWithoutImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateWithoutParentInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProduct_CategoriesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryCreateWithoutSale_ChannelsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_CategoriesInput;
  children?: InputMaybe<ProductCategoryCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProduct_CategoriesInput>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  parent?: InputMaybe<ProductCategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoryInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCategoryGroupBy = {
  __typename?: 'ProductCategoryGroupBy';
  _avg?: Maybe<ProductCategoryAvgAggregate>;
  _count?: Maybe<ProductCategoryCountAggregate>;
  _max?: Maybe<ProductCategoryMaxAggregate>;
  _min?: Maybe<ProductCategoryMinAggregate>;
  _sum?: Maybe<ProductCategorySumAggregate>;
  active: Scalars['Boolean']['output'];
  available_all_channel: Scalars['Boolean']['output'];
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image_id?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  parent_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductCategoryListRelationFilter = {
  every?: InputMaybe<ProductCategoryWhereInput>;
  none?: InputMaybe<ProductCategoryWhereInput>;
  some?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryMaxAggregate = {
  __typename?: 'ProductCategoryMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  parent_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductCategoryMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductCategoryMinAggregate = {
  __typename?: 'ProductCategoryMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  parent_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductCategoryMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductCategoryNullableRelationFilter = {
  is?: InputMaybe<ProductCategoryWhereInput>;
  isNot?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductCategoryOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductCategoryAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductCategoryCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductCategoryMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductCategoryMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductCategorySumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductCategoryOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  children?: InputMaybe<ProductCategoryOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<ImageOrderByWithRelationInput>;
  image_id?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  parent?: InputMaybe<ProductCategoryOrderByWithRelationInput>;
  parent_id?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  sale_channels?: InputMaybe<SaleChannelOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum ProductCategoryScalarFieldEnum {
  Active = 'active',
  AvailableAllChannel = 'available_all_channel',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  ImageId = 'image_id',
  Name = 'name',
  Order = 'order',
  ParentId = 'parent_id',
  UpdatedAt = 'updated_at'
}

export type ProductCategoryScalarWhereInput = {
  AND?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductCategoryScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductCategoryScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductCategoryScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductCategoryScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  available_all_channel?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  order?: InputMaybe<IntWithAggregatesFilter>;
  parent_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ProductCategorySumAggregate = {
  __typename?: 'ProductCategorySumAggregate';
  order?: Maybe<Scalars['Int']['output']>;
};

export type ProductCategorySumOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
};

export type ProductCategoryUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateManyWithWhereWithoutBusinessInput = {
  data: ProductCategoryUpdateManyMutationInput;
  where: ProductCategoryScalarWhereInput;
};

export type ProductCategoryUpdateManyWithWhereWithoutImageInput = {
  data: ProductCategoryUpdateManyMutationInput;
  where: ProductCategoryScalarWhereInput;
};

export type ProductCategoryUpdateManyWithWhereWithoutParentInput = {
  data: ProductCategoryUpdateManyMutationInput;
  where: ProductCategoryScalarWhereInput;
};

export type ProductCategoryUpdateManyWithWhereWithoutSale_ChannelsInput = {
  data: ProductCategoryUpdateManyMutationInput;
  where: ProductCategoryScalarWhereInput;
};

export type ProductCategoryUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductCategoryUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<ProductCategoryUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<ProductCategoryUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type ProductCategoryUpdateManyWithoutImageNestedInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutImageInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyImageInputEnvelope>;
  delete?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductCategoryUpdateWithWhereUniqueWithoutImageInput>>;
  updateMany?: InputMaybe<Array<ProductCategoryUpdateManyWithWhereWithoutImageInput>>;
  upsert?: InputMaybe<Array<ProductCategoryUpsertWithWhereUniqueWithoutImageInput>>;
};

export type ProductCategoryUpdateManyWithoutParentNestedInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutParentInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutParentInput>>;
  createMany?: InputMaybe<ProductCategoryCreateManyParentInputEnvelope>;
  delete?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductCategoryUpdateWithWhereUniqueWithoutParentInput>>;
  updateMany?: InputMaybe<Array<ProductCategoryUpdateManyWithWhereWithoutParentInput>>;
  upsert?: InputMaybe<Array<ProductCategoryUpsertWithWhereUniqueWithoutParentInput>>;
};

export type ProductCategoryUpdateManyWithoutSale_ChannelsNestedInput = {
  connect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCategoryCreateOrConnectWithoutSale_ChannelsInput>>;
  create?: InputMaybe<Array<ProductCategoryCreateWithoutSale_ChannelsInput>>;
  delete?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductCategoryScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductCategoryWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductCategoryUpdateWithWhereUniqueWithoutSale_ChannelsInput>>;
  updateMany?: InputMaybe<Array<ProductCategoryUpdateManyWithWhereWithoutSale_ChannelsInput>>;
  upsert?: InputMaybe<Array<ProductCategoryUpsertWithWhereUniqueWithoutSale_ChannelsInput>>;
};

export type ProductCategoryUpdateOneWithoutChildrenNestedInput = {
  connect?: InputMaybe<ProductCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCategoryCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<ProductCategoryCreateWithoutChildrenInput>;
  delete?: InputMaybe<ProductCategoryWhereInput>;
  disconnect?: InputMaybe<ProductCategoryWhereInput>;
  update?: InputMaybe<ProductCategoryUpdateToOneWithWhereWithoutChildrenInput>;
  upsert?: InputMaybe<ProductCategoryUpsertWithoutChildrenInput>;
};

export type ProductCategoryUpdateOneWithoutProductsNestedInput = {
  connect?: InputMaybe<ProductCategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCategoryCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ProductCategoryCreateWithoutProductsInput>;
  delete?: InputMaybe<ProductCategoryWhereInput>;
  disconnect?: InputMaybe<ProductCategoryWhereInput>;
  update?: InputMaybe<ProductCategoryUpdateToOneWithWhereWithoutProductsInput>;
  upsert?: InputMaybe<ProductCategoryUpsertWithoutProductsInput>;
};

export type ProductCategoryUpdateToOneWithWhereWithoutChildrenInput = {
  data: ProductCategoryUpdateWithoutChildrenInput;
  where?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryUpdateToOneWithWhereWithoutProductsInput = {
  data: ProductCategoryUpdateWithoutProductsInput;
  where?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryUpdateWithWhereUniqueWithoutBusinessInput = {
  data: ProductCategoryUpdateWithoutBusinessInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpdateWithWhereUniqueWithoutImageInput = {
  data: ProductCategoryUpdateWithoutImageInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpdateWithWhereUniqueWithoutParentInput = {
  data: ProductCategoryUpdateWithoutParentInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpdateWithWhereUniqueWithoutSale_ChannelsInput = {
  data: ProductCategoryUpdateWithoutSale_ChannelsInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateWithoutChildrenInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateWithoutImageInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateWithoutParentInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateWithoutProductsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpdateWithoutSale_ChannelsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_CategoriesNestedInput>;
  children?: InputMaybe<ProductCategoryUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProduct_CategoriesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  parent?: InputMaybe<ProductCategoryUpdateOneWithoutChildrenNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoryNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductCategoryUpsertWithWhereUniqueWithoutBusinessInput = {
  create: ProductCategoryCreateWithoutBusinessInput;
  update: ProductCategoryUpdateWithoutBusinessInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpsertWithWhereUniqueWithoutImageInput = {
  create: ProductCategoryCreateWithoutImageInput;
  update: ProductCategoryUpdateWithoutImageInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpsertWithWhereUniqueWithoutParentInput = {
  create: ProductCategoryCreateWithoutParentInput;
  update: ProductCategoryUpdateWithoutParentInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpsertWithWhereUniqueWithoutSale_ChannelsInput = {
  create: ProductCategoryCreateWithoutSale_ChannelsInput;
  update: ProductCategoryUpdateWithoutSale_ChannelsInput;
  where: ProductCategoryWhereUniqueInput;
};

export type ProductCategoryUpsertWithoutChildrenInput = {
  create: ProductCategoryCreateWithoutChildrenInput;
  update: ProductCategoryUpdateWithoutChildrenInput;
  where?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryUpsertWithoutProductsInput = {
  create: ProductCategoryCreateWithoutProductsInput;
  update: ProductCategoryUpdateWithoutProductsInput;
  where?: InputMaybe<ProductCategoryWhereInput>;
};

export type ProductCategoryWhereInput = {
  AND?: InputMaybe<Array<ProductCategoryWhereInput>>;
  NOT?: InputMaybe<Array<ProductCategoryWhereInput>>;
  OR?: InputMaybe<Array<ProductCategoryWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  children?: InputMaybe<ProductCategoryListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  parent?: InputMaybe<ProductCategoryNullableRelationFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductCategoryWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductCategoryWhereInput>>;
  NOT?: InputMaybe<Array<ProductCategoryWhereInput>>;
  OR?: InputMaybe<Array<ProductCategoryWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  children?: InputMaybe<ProductCategoryListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  parent?: InputMaybe<ProductCategoryNullableRelationFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductCount = {
  __typename?: 'ProductCount';
  composites: Scalars['Int']['output'];
  images: Scalars['Int']['output'];
  options: Scalars['Int']['output'];
  sale_channels: Scalars['Int']['output'];
  stock_items: Scalars['Int']['output'];
  stocks: Scalars['Int']['output'];
  taxes: Scalars['Int']['output'];
  variants: Scalars['Int']['output'];
};


export type ProductCountCompositesArgs = {
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type ProductCountImagesArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type ProductCountOptionsArgs = {
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type ProductCountSale_ChannelsArgs = {
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type ProductCountStock_ItemsArgs = {
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type ProductCountStocksArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};


export type ProductCountTaxesArgs = {
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type ProductCountVariantsArgs = {
  where?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductCountAggregate = {
  __typename?: 'ProductCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  available_all_channel: Scalars['Int']['output'];
  barcode: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  category_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  default_stock_id: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image_id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  sku: Scalars['Int']['output'];
  supplier_id: Scalars['Int']['output'];
  track_inventory: Scalars['Int']['output'];
  type: Scalars['Int']['output'];
  unit_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ProductCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  category_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  default_stock_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  track_inventory?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  unit_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  category_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  supplier_id?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManyBusinessInputEnvelope = {
  data: Array<ProductCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCreateManyCategoryInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  supplier_id?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManyCategoryInputEnvelope = {
  data: Array<ProductCreateManyCategoryInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCreateManyImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  category_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  supplier_id?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManyImageInputEnvelope = {
  data: Array<ProductCreateManyImageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  category_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  supplier_id?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManySupplierInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  category_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManySupplierInputEnvelope = {
  data: Array<ProductCreateManySupplierInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCreateManyUnitInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  category_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  supplier_id?: InputMaybe<Scalars['String']['input']>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductCreateManyUnitInputEnvelope = {
  data: Array<ProductCreateManyUnitInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductCreateManyBusinessInputEnvelope>;
};

export type ProductCreateNestedManyWithoutCategoryInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutCategoryInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<ProductCreateManyCategoryInputEnvelope>;
};

export type ProductCreateNestedManyWithoutImageInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutImageInput>>;
  createMany?: InputMaybe<ProductCreateManyImageInputEnvelope>;
};

export type ProductCreateNestedManyWithoutImagesInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutImagesInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutImagesInput>>;
};

export type ProductCreateNestedManyWithoutOptionsInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutOptionsInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutOptionsInput>>;
};

export type ProductCreateNestedManyWithoutSale_ChannelsInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutSale_ChannelsInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutSale_ChannelsInput>>;
};

export type ProductCreateNestedManyWithoutSupplierInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutSupplierInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutSupplierInput>>;
  createMany?: InputMaybe<ProductCreateManySupplierInputEnvelope>;
};

export type ProductCreateNestedManyWithoutTaxesInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutTaxesInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutTaxesInput>>;
};

export type ProductCreateNestedManyWithoutUnitInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutUnitInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutUnitInput>>;
  createMany?: InputMaybe<ProductCreateManyUnitInputEnvelope>;
};

export type ProductCreateNestedOneWithoutCompositesInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutCompositesInput>;
  create?: InputMaybe<ProductCreateWithoutCompositesInput>;
};

export type ProductCreateNestedOneWithoutDefault_StockInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutDefault_StockInput>;
  create?: InputMaybe<ProductCreateWithoutDefault_StockInput>;
};

export type ProductCreateNestedOneWithoutStock_ItemsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutStock_ItemsInput>;
  create?: InputMaybe<ProductCreateWithoutStock_ItemsInput>;
};

export type ProductCreateNestedOneWithoutStocksInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<ProductCreateWithoutStocksInput>;
};

export type ProductCreateNestedOneWithoutVariantsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutVariantsInput>;
  create?: InputMaybe<ProductCreateWithoutVariantsInput>;
};

export type ProductCreateOrConnectWithoutBusinessInput = {
  create: ProductCreateWithoutBusinessInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutCategoryInput = {
  create: ProductCreateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutCompositesInput = {
  create: ProductCreateWithoutCompositesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutDefault_StockInput = {
  create: ProductCreateWithoutDefault_StockInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutImageInput = {
  create: ProductCreateWithoutImageInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutImagesInput = {
  create: ProductCreateWithoutImagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutOptionsInput = {
  create: ProductCreateWithoutOptionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutSale_ChannelsInput = {
  create: ProductCreateWithoutSale_ChannelsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutStock_ItemsInput = {
  create: ProductCreateWithoutStock_ItemsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutStocksInput = {
  create: ProductCreateWithoutStocksInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutSupplierInput = {
  create: ProductCreateWithoutSupplierInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutTaxesInput = {
  create: ProductCreateWithoutTaxesInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutUnitInput = {
  create: ProductCreateWithoutUnitInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateOrConnectWithoutVariantsInput = {
  create: ProductCreateWithoutVariantsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutCategoryInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutCompositesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutDefault_StockInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutImageInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutImagesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutOptionsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutSale_ChannelsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutStock_ItemsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutStocksInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutSupplierInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutTaxesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutUnitInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variants?: InputMaybe<ProductVariantCreateNestedManyWithoutProductInput>;
};

export type ProductCreateWithoutVariantsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  available_all_channel?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProductsInput;
  category?: InputMaybe<ProductCategoryCreateNestedOneWithoutProductsInput>;
  composites?: InputMaybe<CompositeItemCreateNestedManyWithoutProductInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  default_stock?: InputMaybe<ProductStockCreateNestedOneWithoutIs_DefaultInput>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutProductsInput>;
  images?: InputMaybe<ImageCreateNestedManyWithoutProduct_ImagesInput>;
  name: Scalars['String']['input'];
  options?: InputMaybe<ProductVariantCreateNestedManyWithoutProductsInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutProductsInput>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_items?: InputMaybe<ProductStockItemCreateNestedManyWithoutProductInput>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProductInput>;
  supplier?: InputMaybe<SupplierCreateNestedOneWithoutProductsInput>;
  taxes?: InputMaybe<TaxSettingCreateNestedManyWithoutProductsInput>;
  track_inventory?: InputMaybe<Scalars['Boolean']['input']>;
  type: ProductType;
  unit?: InputMaybe<ProductUnitCreateNestedOneWithoutProductsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductGroupBy = {
  __typename?: 'ProductGroupBy';
  _avg?: Maybe<ProductAvgAggregate>;
  _count?: Maybe<ProductCountAggregate>;
  _max?: Maybe<ProductMaxAggregate>;
  _min?: Maybe<ProductMinAggregate>;
  _sum?: Maybe<ProductSumAggregate>;
  active: Scalars['Boolean']['output'];
  available_all_channel: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  business_id: Scalars['String']['output'];
  category_id?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  default_stock_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image_id?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  seq: Scalars['Int']['output'];
  sku?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  track_inventory: Scalars['Boolean']['output'];
  type: ProductType;
  unit_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductListRelationFilter = {
  every?: InputMaybe<ProductWhereInput>;
  none?: InputMaybe<ProductWhereInput>;
  some?: InputMaybe<ProductWhereInput>;
};

export type ProductMaxAggregate = {
  __typename?: 'ProductMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  category_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  default_stock_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  track_inventory?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<ProductType>;
  unit_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  category_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  default_stock_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  track_inventory?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  unit_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductMinAggregate = {
  __typename?: 'ProductMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  available_all_channel?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  category_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  default_stock_id?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  track_inventory?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<ProductType>;
  unit_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  category_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  default_stock_id?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  track_inventory?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  unit_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductNullableRelationFilter = {
  is?: InputMaybe<ProductWhereInput>;
  isNot?: InputMaybe<ProductWhereInput>;
};

export type ProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  business_id?: InputMaybe<SortOrder>;
  category_id?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  default_stock_id?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
  supplier_id?: InputMaybe<SortOrderInput>;
  track_inventory?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  unit_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  available_all_channel?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  category?: InputMaybe<ProductCategoryOrderByWithRelationInput>;
  category_id?: InputMaybe<SortOrderInput>;
  composites?: InputMaybe<CompositeItemOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  default_stock?: InputMaybe<ProductStockOrderByWithRelationInput>;
  default_stock_id?: InputMaybe<SortOrderInput>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<ImageOrderByWithRelationInput>;
  image_id?: InputMaybe<SortOrderInput>;
  images?: InputMaybe<ImageOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  options?: InputMaybe<ProductVariantOrderByRelationAggregateInput>;
  sale_channels?: InputMaybe<SaleChannelOrderByRelationAggregateInput>;
  seq?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
  stock_items?: InputMaybe<ProductStockItemOrderByRelationAggregateInput>;
  stocks?: InputMaybe<ProductStockOrderByRelationAggregateInput>;
  supplier?: InputMaybe<SupplierOrderByWithRelationInput>;
  supplier_id?: InputMaybe<SortOrderInput>;
  taxes?: InputMaybe<TaxSettingOrderByRelationAggregateInput>;
  track_inventory?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  unit?: InputMaybe<ProductUnitOrderByWithRelationInput>;
  unit_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
  variants?: InputMaybe<ProductVariantOrderByRelationAggregateInput>;
};

export type ProductRelationFilter = {
  is?: InputMaybe<ProductWhereInput>;
  isNot?: InputMaybe<ProductWhereInput>;
};

export enum ProductScalarFieldEnum {
  Active = 'active',
  AvailableAllChannel = 'available_all_channel',
  Barcode = 'barcode',
  BusinessId = 'business_id',
  CategoryId = 'category_id',
  CreatedAt = 'created_at',
  DefaultStockId = 'default_stock_id',
  Description = 'description',
  Id = 'id',
  ImageId = 'image_id',
  Name = 'name',
  Seq = 'seq',
  Sku = 'sku',
  SupplierId = 'supplier_id',
  TrackInventory = 'track_inventory',
  Type = 'type',
  UnitId = 'unit_id',
  UpdatedAt = 'updated_at'
}

export type ProductScalarWhereInput = {
  AND?: InputMaybe<Array<ProductScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business_id?: InputMaybe<StringFilter>;
  category_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  default_stock_id?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  seq?: InputMaybe<IntFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  supplier_id?: InputMaybe<StringNullableFilter>;
  track_inventory?: InputMaybe<BoolFilter>;
  type?: InputMaybe<EnumProductTypeFilter>;
  unit_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  available_all_channel?: InputMaybe<BoolWithAggregatesFilter>;
  barcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  category_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  default_stock_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  sku?: InputMaybe<StringNullableWithAggregatesFilter>;
  supplier_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  track_inventory?: InputMaybe<BoolWithAggregatesFilter>;
  type?: InputMaybe<EnumProductTypeWithAggregatesFilter>;
  unit_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ProductStock = {
  __typename?: 'ProductStock';
  _count?: Maybe<ProductStockCount>;
  active: Scalars['Boolean']['output'];
  allow_negative_stock: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  committed_stock: Scalars['Decimal']['output'];
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  current_stock: Scalars['Decimal']['output'];
  daily_stocks: Array<DailyStock>;
  id: Scalars['String']['output'];
  is_default?: Maybe<Product>;
  is_deleted: Scalars['Boolean']['output'];
  low_stock: Scalars['Decimal']['output'];
  name: Scalars['String']['output'];
  optimal_stock: Scalars['Decimal']['output'];
  original_price: Scalars['Decimal']['output'];
  product: Product;
  product_id: Scalars['String']['output'];
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  produtc_stock_item?: Maybe<ProductStockItem>;
  ref_id: Scalars['String']['output'];
  ref_type: ProductType;
  sale_stock: Scalars['Decimal']['output'];
  selling_price: Scalars['Decimal']['output'];
  sku?: Maybe<Scalars['String']['output']>;
  stock_histories: Array<StockHistory>;
  stock_transaction_items: Array<StockTransactionItem>;
  stock_transactions: Array<StockTransaction>;
  store: Store;
  store_id: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type ProductStockDaily_StocksArgs = {
  cursor?: InputMaybe<DailyStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailyStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type ProductStockIs_DefaultArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type ProductStockProdutc_Stock_ItemArgs = {
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type ProductStockStock_HistoriesArgs = {
  cursor?: InputMaybe<StockHistoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockHistoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type ProductStockStock_Transaction_ItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type ProductStockStock_TransactionsArgs = {
  cursor?: InputMaybe<StockTransactionWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};

export type ProductStockAvgAggregate = {
  __typename?: 'ProductStockAvgAggregate';
  committed_stock?: Maybe<Scalars['Decimal']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  current_stock?: Maybe<Scalars['Decimal']['output']>;
  low_stock?: Maybe<Scalars['Decimal']['output']>;
  optimal_stock?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  sale_stock?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductStockAvgOrderByAggregateInput = {
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductStockCount = {
  __typename?: 'ProductStockCount';
  daily_stocks: Scalars['Int']['output'];
  stock_histories: Scalars['Int']['output'];
  stock_transaction_items: Scalars['Int']['output'];
  stock_transactions: Scalars['Int']['output'];
};


export type ProductStockCountDaily_StocksArgs = {
  where?: InputMaybe<DailyStockWhereInput>;
};


export type ProductStockCountStock_HistoriesArgs = {
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type ProductStockCountStock_Transaction_ItemsArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type ProductStockCountStock_TransactionsArgs = {
  where?: InputMaybe<StockTransactionWhereInput>;
};

export type ProductStockCountAggregate = {
  __typename?: 'ProductStockCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  allow_negative_stock: Scalars['Int']['output'];
  barcode: Scalars['Int']['output'];
  committed_stock: Scalars['Int']['output'];
  cost_price: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  current_stock: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_deleted: Scalars['Int']['output'];
  low_stock: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  optimal_stock: Scalars['Int']['output'];
  original_price: Scalars['Int']['output'];
  product_id: Scalars['Int']['output'];
  product_stock_item_id: Scalars['Int']['output'];
  ref_id: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  sale_stock: Scalars['Int']['output'];
  selling_price: Scalars['Int']['output'];
  sku: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ProductStockCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  allow_negative_stock?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_deleted?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductStockCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_id: Scalars['String']['input'];
  product_stock_item_id?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateManyProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_stock_item_id?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateManyProductInputEnvelope = {
  data: Array<ProductStockCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductStockCreateManyProdutc_Stock_ItemInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_id: Scalars['String']['input'];
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateManyProdutc_Stock_ItemInputEnvelope = {
  data: Array<ProductStockCreateManyProdutc_Stock_ItemInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductStockCreateManyStoreInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_id: Scalars['String']['input'];
  product_stock_item_id?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateManyStoreInputEnvelope = {
  data: Array<ProductStockCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductStockCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductStockCreateManyProductInputEnvelope>;
};

export type ProductStockCreateNestedManyWithoutProdutc_Stock_ItemInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutProdutc_Stock_ItemInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutProdutc_Stock_ItemInput>>;
  createMany?: InputMaybe<ProductStockCreateManyProdutc_Stock_ItemInputEnvelope>;
};

export type ProductStockCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutStoreInput>>;
  createMany?: InputMaybe<ProductStockCreateManyStoreInputEnvelope>;
};

export type ProductStockCreateNestedOneWithoutDaily_StocksInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutDaily_StocksInput>;
  create?: InputMaybe<ProductStockCreateWithoutDaily_StocksInput>;
};

export type ProductStockCreateNestedOneWithoutIs_DefaultInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<ProductStockCreateWithoutIs_DefaultInput>;
};

export type ProductStockCreateNestedOneWithoutStock_HistoriesInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_HistoriesInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_HistoriesInput>;
};

export type ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_Transaction_ItemsInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_Transaction_ItemsInput>;
};

export type ProductStockCreateNestedOneWithoutStock_TransactionsInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_TransactionsInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_TransactionsInput>;
};

export type ProductStockCreateOrConnectWithoutDaily_StocksInput = {
  create: ProductStockCreateWithoutDaily_StocksInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutIs_DefaultInput = {
  create: ProductStockCreateWithoutIs_DefaultInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutProductInput = {
  create: ProductStockCreateWithoutProductInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutProdutc_Stock_ItemInput = {
  create: ProductStockCreateWithoutProdutc_Stock_ItemInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutStock_HistoriesInput = {
  create: ProductStockCreateWithoutStock_HistoriesInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutStock_Transaction_ItemsInput = {
  create: ProductStockCreateWithoutStock_Transaction_ItemsInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutStock_TransactionsInput = {
  create: ProductStockCreateWithoutStock_TransactionsInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateOrConnectWithoutStoreInput = {
  create: ProductStockCreateWithoutStoreInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockCreateWithoutDaily_StocksInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutIs_DefaultInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutProdutc_Stock_ItemInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutStock_HistoriesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutStock_Transaction_ItemsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutStock_TransactionsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  store: StoreCreateNestedOneWithoutProduct_StocksInput;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockCreateWithoutStoreInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  allow_negative_stock?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  committed_stock?: InputMaybe<Scalars['Decimal']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  current_stock?: InputMaybe<Scalars['Decimal']['input']>;
  daily_stocks?: InputMaybe<DailyStockCreateNestedManyWithoutStockInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductCreateNestedOneWithoutDefault_StockInput>;
  is_deleted?: InputMaybe<Scalars['Boolean']['input']>;
  low_stock?: InputMaybe<Scalars['Decimal']['input']>;
  name: Scalars['String']['input'];
  optimal_stock?: InputMaybe<Scalars['Decimal']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStocksInput;
  produtc_stock_item?: InputMaybe<ProductStockItemCreateNestedOneWithoutStocksInput>;
  ref_id: Scalars['String']['input'];
  ref_type: ProductType;
  sale_stock?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stock_histories?: InputMaybe<StockHistoryCreateNestedManyWithoutStockInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutStockInput>;
  stock_transactions?: InputMaybe<StockTransactionCreateNestedManyWithoutStockInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductStockGroupBy = {
  __typename?: 'ProductStockGroupBy';
  _avg?: Maybe<ProductStockAvgAggregate>;
  _count?: Maybe<ProductStockCountAggregate>;
  _max?: Maybe<ProductStockMaxAggregate>;
  _min?: Maybe<ProductStockMinAggregate>;
  _sum?: Maybe<ProductStockSumAggregate>;
  active: Scalars['Boolean']['output'];
  allow_negative_stock: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  committed_stock: Scalars['Decimal']['output'];
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  current_stock: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  is_deleted: Scalars['Boolean']['output'];
  low_stock: Scalars['Decimal']['output'];
  name: Scalars['String']['output'];
  optimal_stock: Scalars['Decimal']['output'];
  original_price: Scalars['Decimal']['output'];
  product_id: Scalars['String']['output'];
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  ref_id: Scalars['String']['output'];
  ref_type: ProductType;
  sale_stock: Scalars['Decimal']['output'];
  selling_price: Scalars['Decimal']['output'];
  sku?: Maybe<Scalars['String']['output']>;
  store_id: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductStockItem = {
  __typename?: 'ProductStockItem';
  _count?: Maybe<ProductStockItemCount>;
  active: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  business: Business;
  business_id: Scalars['String']['output'];
  composite_items: Array<CompositeItem>;
  cost_price: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  item_type: ProductType;
  name: Scalars['String']['output'];
  original_price: Scalars['Decimal']['output'];
  product: Product;
  product_id: Scalars['String']['output'];
  selling_price: Scalars['Decimal']['output'];
  sku?: Maybe<Scalars['String']['output']>;
  stocks: Array<ProductStock>;
};


export type ProductStockItemComposite_ItemsArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type ProductStockItemStocksArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockItemAvgAggregate = {
  __typename?: 'ProductStockItemAvgAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductStockItemAvgOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductStockItemBusiness_IdSkuCompoundUniqueInput = {
  business_id: Scalars['String']['input'];
  sku: Scalars['String']['input'];
};

export type ProductStockItemCount = {
  __typename?: 'ProductStockItemCount';
  composite_items: Scalars['Int']['output'];
  stocks: Scalars['Int']['output'];
};


export type ProductStockItemCountComposite_ItemsArgs = {
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type ProductStockItemCountStocksArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockItemCountAggregate = {
  __typename?: 'ProductStockItemCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  barcode: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  cost_price: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  item_type: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  original_price: Scalars['Int']['output'];
  product_id: Scalars['Int']['output'];
  selling_price: Scalars['Int']['output'];
  sku: Scalars['Int']['output'];
};

export type ProductStockItemCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
};

export type ProductStockItemCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_Stock_ItemsInput;
  composite_items?: InputMaybe<CompositeItemCreateNestedManyWithoutProduct_Stock_ItemInput>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStock_ItemsInput;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProdutc_Stock_ItemInput>;
};

export type ProductStockItemCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_id: Scalars['String']['input'];
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ProductStockItemCreateManyBusinessInputEnvelope = {
  data: Array<ProductStockItemCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductStockItemCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product_id: Scalars['String']['input'];
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ProductStockItemCreateManyProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ProductStockItemCreateManyProductInputEnvelope = {
  data: Array<ProductStockItemCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductStockItemCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockItemCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductStockItemCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductStockItemCreateManyBusinessInputEnvelope>;
};

export type ProductStockItemCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockItemCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductStockItemCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductStockItemCreateManyProductInputEnvelope>;
};

export type ProductStockItemCreateNestedOneWithoutComposite_ItemsInput = {
  connect?: InputMaybe<ProductStockItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockItemCreateOrConnectWithoutComposite_ItemsInput>;
  create?: InputMaybe<ProductStockItemCreateWithoutComposite_ItemsInput>;
};

export type ProductStockItemCreateNestedOneWithoutStocksInput = {
  connect?: InputMaybe<ProductStockItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockItemCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<ProductStockItemCreateWithoutStocksInput>;
};

export type ProductStockItemCreateOrConnectWithoutBusinessInput = {
  create: ProductStockItemCreateWithoutBusinessInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemCreateOrConnectWithoutComposite_ItemsInput = {
  create: ProductStockItemCreateWithoutComposite_ItemsInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemCreateOrConnectWithoutProductInput = {
  create: ProductStockItemCreateWithoutProductInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemCreateOrConnectWithoutStocksInput = {
  create: ProductStockItemCreateWithoutStocksInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  composite_items?: InputMaybe<CompositeItemCreateNestedManyWithoutProduct_Stock_ItemInput>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStock_ItemsInput;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProdutc_Stock_ItemInput>;
};

export type ProductStockItemCreateWithoutComposite_ItemsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_Stock_ItemsInput;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStock_ItemsInput;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProdutc_Stock_ItemInput>;
};

export type ProductStockItemCreateWithoutProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_Stock_ItemsInput;
  composite_items?: InputMaybe<CompositeItemCreateNestedManyWithoutProduct_Stock_ItemInput>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
  stocks?: InputMaybe<ProductStockCreateNestedManyWithoutProdutc_Stock_ItemInput>;
};

export type ProductStockItemCreateWithoutStocksInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_Stock_ItemsInput;
  composite_items?: InputMaybe<CompositeItemCreateNestedManyWithoutProduct_Stock_ItemInput>;
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  id: Scalars['String']['input'];
  item_type: ProductType;
  name: Scalars['String']['input'];
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  product: ProductCreateNestedOneWithoutStock_ItemsInput;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  sku?: InputMaybe<Scalars['String']['input']>;
};

export type ProductStockItemGroupBy = {
  __typename?: 'ProductStockItemGroupBy';
  _avg?: Maybe<ProductStockItemAvgAggregate>;
  _count?: Maybe<ProductStockItemCountAggregate>;
  _max?: Maybe<ProductStockItemMaxAggregate>;
  _min?: Maybe<ProductStockItemMinAggregate>;
  _sum?: Maybe<ProductStockItemSumAggregate>;
  active: Scalars['Boolean']['output'];
  barcode?: Maybe<Scalars['String']['output']>;
  business_id: Scalars['String']['output'];
  cost_price: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  item_type: ProductType;
  name: Scalars['String']['output'];
  original_price: Scalars['Decimal']['output'];
  product_id: Scalars['String']['output'];
  selling_price: Scalars['Decimal']['output'];
  sku?: Maybe<Scalars['String']['output']>;
};

export type ProductStockItemListRelationFilter = {
  every?: InputMaybe<ProductStockItemWhereInput>;
  none?: InputMaybe<ProductStockItemWhereInput>;
  some?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemMaxAggregate = {
  __typename?: 'ProductStockItemMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<ProductType>;
  name?: Maybe<Scalars['String']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
};

export type ProductStockItemMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
};

export type ProductStockItemMinAggregate = {
  __typename?: 'ProductStockItemMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<ProductType>;
  name?: Maybe<Scalars['String']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
};

export type ProductStockItemMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
};

export type ProductStockItemNullableRelationFilter = {
  is?: InputMaybe<ProductStockItemWhereInput>;
  isNot?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductStockItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductStockItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductStockItemCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductStockItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductStockItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductStockItemSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  business_id?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
};

export type ProductStockItemOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  composite_items?: InputMaybe<CompositeItemOrderByRelationAggregateInput>;
  cost_price?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  product_id?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
  stocks?: InputMaybe<ProductStockOrderByRelationAggregateInput>;
};

export type ProductStockItemRelationFilter = {
  is?: InputMaybe<ProductStockItemWhereInput>;
  isNot?: InputMaybe<ProductStockItemWhereInput>;
};

export enum ProductStockItemScalarFieldEnum {
  Active = 'active',
  Barcode = 'barcode',
  BusinessId = 'business_id',
  CostPrice = 'cost_price',
  Id = 'id',
  ItemType = 'item_type',
  Name = 'name',
  OriginalPrice = 'original_price',
  ProductId = 'product_id',
  SellingPrice = 'selling_price',
  Sku = 'sku'
}

export type ProductStockItemScalarWhereInput = {
  AND?: InputMaybe<Array<ProductStockItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockItemScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductStockItemScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business_id?: InputMaybe<StringFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumProductTypeFilter>;
  name?: InputMaybe<StringFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product_id?: InputMaybe<StringFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
};

export type ProductStockItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductStockItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductStockItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductStockItemScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  barcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  cost_price?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  item_type?: InputMaybe<EnumProductTypeWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  original_price?: InputMaybe<DecimalWithAggregatesFilter>;
  product_id?: InputMaybe<StringWithAggregatesFilter>;
  selling_price?: InputMaybe<DecimalWithAggregatesFilter>;
  sku?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductStockItemSumAggregate = {
  __typename?: 'ProductStockItemSumAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductStockItemSumOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductStockItemUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_Stock_ItemsNestedInput>;
  composite_items?: InputMaybe<CompositeItemUpdateManyWithoutProduct_Stock_ItemNestedInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStock_ItemsNestedInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProdutc_Stock_ItemNestedInput>;
};

export type ProductStockItemUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductStockItemUpdateManyWithWhereWithoutBusinessInput = {
  data: ProductStockItemUpdateManyMutationInput;
  where: ProductStockItemScalarWhereInput;
};

export type ProductStockItemUpdateManyWithWhereWithoutProductInput = {
  data: ProductStockItemUpdateManyMutationInput;
  where: ProductStockItemScalarWhereInput;
};

export type ProductStockItemUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockItemCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductStockItemCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductStockItemCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductStockItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductStockItemUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<ProductStockItemUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<ProductStockItemUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type ProductStockItemUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockItemCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductStockItemCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductStockItemCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductStockItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductStockItemWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductStockItemUpdateWithWhereUniqueWithoutProductInput>>;
  updateMany?: InputMaybe<Array<ProductStockItemUpdateManyWithWhereWithoutProductInput>>;
  upsert?: InputMaybe<Array<ProductStockItemUpsertWithWhereUniqueWithoutProductInput>>;
};

export type ProductStockItemUpdateOneRequiredWithoutComposite_ItemsNestedInput = {
  connect?: InputMaybe<ProductStockItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockItemCreateOrConnectWithoutComposite_ItemsInput>;
  create?: InputMaybe<ProductStockItemCreateWithoutComposite_ItemsInput>;
  update?: InputMaybe<ProductStockItemUpdateToOneWithWhereWithoutComposite_ItemsInput>;
  upsert?: InputMaybe<ProductStockItemUpsertWithoutComposite_ItemsInput>;
};

export type ProductStockItemUpdateOneWithoutStocksNestedInput = {
  connect?: InputMaybe<ProductStockItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockItemCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<ProductStockItemCreateWithoutStocksInput>;
  delete?: InputMaybe<ProductStockItemWhereInput>;
  disconnect?: InputMaybe<ProductStockItemWhereInput>;
  update?: InputMaybe<ProductStockItemUpdateToOneWithWhereWithoutStocksInput>;
  upsert?: InputMaybe<ProductStockItemUpsertWithoutStocksInput>;
};

export type ProductStockItemUpdateToOneWithWhereWithoutComposite_ItemsInput = {
  data: ProductStockItemUpdateWithoutComposite_ItemsInput;
  where?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemUpdateToOneWithWhereWithoutStocksInput = {
  data: ProductStockItemUpdateWithoutStocksInput;
  where?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemUpdateWithWhereUniqueWithoutBusinessInput = {
  data: ProductStockItemUpdateWithoutBusinessInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductStockItemUpdateWithoutProductInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  composite_items?: InputMaybe<CompositeItemUpdateManyWithoutProduct_Stock_ItemNestedInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStock_ItemsNestedInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProdutc_Stock_ItemNestedInput>;
};

export type ProductStockItemUpdateWithoutComposite_ItemsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_Stock_ItemsNestedInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStock_ItemsNestedInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProdutc_Stock_ItemNestedInput>;
};

export type ProductStockItemUpdateWithoutProductInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_Stock_ItemsNestedInput>;
  composite_items?: InputMaybe<CompositeItemUpdateManyWithoutProduct_Stock_ItemNestedInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProdutc_Stock_ItemNestedInput>;
};

export type ProductStockItemUpdateWithoutStocksInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_Stock_ItemsNestedInput>;
  composite_items?: InputMaybe<CompositeItemUpdateManyWithoutProduct_Stock_ItemNestedInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStock_ItemsNestedInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductStockItemUpsertWithWhereUniqueWithoutBusinessInput = {
  create: ProductStockItemCreateWithoutBusinessInput;
  update: ProductStockItemUpdateWithoutBusinessInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductStockItemCreateWithoutProductInput;
  update: ProductStockItemUpdateWithoutProductInput;
  where: ProductStockItemWhereUniqueInput;
};

export type ProductStockItemUpsertWithoutComposite_ItemsInput = {
  create: ProductStockItemCreateWithoutComposite_ItemsInput;
  update: ProductStockItemUpdateWithoutComposite_ItemsInput;
  where?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemUpsertWithoutStocksInput = {
  create: ProductStockItemCreateWithoutStocksInput;
  update: ProductStockItemUpdateWithoutStocksInput;
  where?: InputMaybe<ProductStockItemWhereInput>;
};

export type ProductStockItemWhereInput = {
  AND?: InputMaybe<Array<ProductStockItemWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockItemWhereInput>>;
  OR?: InputMaybe<Array<ProductStockItemWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  composite_items?: InputMaybe<CompositeItemListRelationFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumProductTypeFilter>;
  name?: InputMaybe<StringFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stocks?: InputMaybe<ProductStockListRelationFilter>;
};

export type ProductStockItemWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductStockItemWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockItemWhereInput>>;
  OR?: InputMaybe<Array<ProductStockItemWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  business_id_sku?: InputMaybe<ProductStockItemBusiness_IdSkuCompoundUniqueInput>;
  composite_items?: InputMaybe<CompositeItemListRelationFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  item_type?: InputMaybe<EnumProductTypeFilter>;
  name?: InputMaybe<StringFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stocks?: InputMaybe<ProductStockListRelationFilter>;
};

export type ProductStockListRelationFilter = {
  every?: InputMaybe<ProductStockWhereInput>;
  none?: InputMaybe<ProductStockWhereInput>;
  some?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockMaxAggregate = {
  __typename?: 'ProductStockMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  allow_negative_stock?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  committed_stock?: Maybe<Scalars['Decimal']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  current_stock?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_deleted?: Maybe<Scalars['Boolean']['output']>;
  low_stock?: Maybe<Scalars['Decimal']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  optimal_stock?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<ProductType>;
  sale_stock?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductStockMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  allow_negative_stock?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_deleted?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductStockMinAggregate = {
  __typename?: 'ProductStockMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  allow_negative_stock?: Maybe<Scalars['Boolean']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  committed_stock?: Maybe<Scalars['Decimal']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  current_stock?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_deleted?: Maybe<Scalars['Boolean']['output']>;
  low_stock?: Maybe<Scalars['Decimal']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  optimal_stock?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  product_stock_item_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<ProductType>;
  sale_stock?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  sku?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductStockMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  allow_negative_stock?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrder>;
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_deleted?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductStockNullableRelationFilter = {
  is?: InputMaybe<ProductStockWhereInput>;
  isNot?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductStockOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductStockAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductStockCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductStockMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductStockMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductStockSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  allow_negative_stock?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_deleted?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrderInput>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductStockOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  allow_negative_stock?: InputMaybe<SortOrder>;
  barcode?: InputMaybe<SortOrderInput>;
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  daily_stocks?: InputMaybe<DailyStockOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<ProductOrderByWithRelationInput>;
  is_deleted?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  product_id?: InputMaybe<SortOrder>;
  product_stock_item_id?: InputMaybe<SortOrderInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemOrderByWithRelationInput>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrderInput>;
  stock_histories?: InputMaybe<StockHistoryOrderByRelationAggregateInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  stock_transactions?: InputMaybe<StockTransactionOrderByRelationAggregateInput>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductStockRelationFilter = {
  is?: InputMaybe<ProductStockWhereInput>;
  isNot?: InputMaybe<ProductStockWhereInput>;
};

export enum ProductStockScalarFieldEnum {
  Active = 'active',
  AllowNegativeStock = 'allow_negative_stock',
  Barcode = 'barcode',
  CommittedStock = 'committed_stock',
  CostPrice = 'cost_price',
  CreatedAt = 'created_at',
  CurrentStock = 'current_stock',
  Id = 'id',
  IsDeleted = 'is_deleted',
  LowStock = 'low_stock',
  Name = 'name',
  OptimalStock = 'optimal_stock',
  OriginalPrice = 'original_price',
  ProductId = 'product_id',
  ProductStockItemId = 'product_stock_item_id',
  RefId = 'ref_id',
  RefType = 'ref_type',
  SaleStock = 'sale_stock',
  SellingPrice = 'selling_price',
  Sku = 'sku',
  StoreId = 'store_id',
  UpdatedAt = 'updated_at'
}

export type ProductStockScalarWhereInput = {
  AND?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  allow_negative_stock?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  committed_stock?: InputMaybe<DecimalFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  current_stock?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  is_deleted?: InputMaybe<BoolFilter>;
  low_stock?: InputMaybe<DecimalFilter>;
  name?: InputMaybe<StringFilter>;
  optimal_stock?: InputMaybe<DecimalFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_stock_item_id?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<EnumProductTypeFilter>;
  sale_stock?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  store_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductStockScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductStockScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductStockScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductStockScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  allow_negative_stock?: InputMaybe<BoolWithAggregatesFilter>;
  barcode?: InputMaybe<StringNullableWithAggregatesFilter>;
  committed_stock?: InputMaybe<DecimalWithAggregatesFilter>;
  cost_price?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  current_stock?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_deleted?: InputMaybe<BoolWithAggregatesFilter>;
  low_stock?: InputMaybe<DecimalWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  optimal_stock?: InputMaybe<DecimalWithAggregatesFilter>;
  original_price?: InputMaybe<DecimalWithAggregatesFilter>;
  product_id?: InputMaybe<StringWithAggregatesFilter>;
  product_stock_item_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_id?: InputMaybe<StringWithAggregatesFilter>;
  ref_type?: InputMaybe<EnumProductTypeWithAggregatesFilter>;
  sale_stock?: InputMaybe<DecimalWithAggregatesFilter>;
  selling_price?: InputMaybe<DecimalWithAggregatesFilter>;
  sku?: InputMaybe<StringNullableWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ProductStockStore_IdRef_IdCompoundUniqueInput = {
  ref_id: Scalars['String']['input'];
  store_id: Scalars['String']['input'];
};

export type ProductStockSumAggregate = {
  __typename?: 'ProductStockSumAggregate';
  committed_stock?: Maybe<Scalars['Decimal']['output']>;
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  current_stock?: Maybe<Scalars['Decimal']['output']>;
  low_stock?: Maybe<Scalars['Decimal']['output']>;
  optimal_stock?: Maybe<Scalars['Decimal']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  sale_stock?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductStockSumOrderByAggregateInput = {
  committed_stock?: InputMaybe<SortOrder>;
  cost_price?: InputMaybe<SortOrder>;
  current_stock?: InputMaybe<SortOrder>;
  low_stock?: InputMaybe<SortOrder>;
  optimal_stock?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  sale_stock?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductStockUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateManyWithWhereWithoutProductInput = {
  data: ProductStockUpdateManyMutationInput;
  where: ProductStockScalarWhereInput;
};

export type ProductStockUpdateManyWithWhereWithoutProdutc_Stock_ItemInput = {
  data: ProductStockUpdateManyMutationInput;
  where: ProductStockScalarWhereInput;
};

export type ProductStockUpdateManyWithWhereWithoutStoreInput = {
  data: ProductStockUpdateManyMutationInput;
  where: ProductStockScalarWhereInput;
};

export type ProductStockUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductStockCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductStockUpdateWithWhereUniqueWithoutProductInput>>;
  updateMany?: InputMaybe<Array<ProductStockUpdateManyWithWhereWithoutProductInput>>;
  upsert?: InputMaybe<Array<ProductStockUpsertWithWhereUniqueWithoutProductInput>>;
};

export type ProductStockUpdateManyWithoutProdutc_Stock_ItemNestedInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutProdutc_Stock_ItemInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutProdutc_Stock_ItemInput>>;
  createMany?: InputMaybe<ProductStockCreateManyProdutc_Stock_ItemInputEnvelope>;
  delete?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductStockUpdateWithWhereUniqueWithoutProdutc_Stock_ItemInput>>;
  updateMany?: InputMaybe<Array<ProductStockUpdateManyWithWhereWithoutProdutc_Stock_ItemInput>>;
  upsert?: InputMaybe<Array<ProductStockUpsertWithWhereUniqueWithoutProdutc_Stock_ItemInput>>;
};

export type ProductStockUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductStockCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<ProductStockCreateWithoutStoreInput>>;
  createMany?: InputMaybe<ProductStockCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductStockScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductStockWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductStockUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<ProductStockUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<ProductStockUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type ProductStockUpdateOneRequiredWithoutDaily_StocksNestedInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutDaily_StocksInput>;
  create?: InputMaybe<ProductStockCreateWithoutDaily_StocksInput>;
  update?: InputMaybe<ProductStockUpdateToOneWithWhereWithoutDaily_StocksInput>;
  upsert?: InputMaybe<ProductStockUpsertWithoutDaily_StocksInput>;
};

export type ProductStockUpdateOneRequiredWithoutStock_HistoriesNestedInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_HistoriesInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_HistoriesInput>;
  update?: InputMaybe<ProductStockUpdateToOneWithWhereWithoutStock_HistoriesInput>;
  upsert?: InputMaybe<ProductStockUpsertWithoutStock_HistoriesInput>;
};

export type ProductStockUpdateOneRequiredWithoutStock_TransactionsNestedInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_TransactionsInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_TransactionsInput>;
  update?: InputMaybe<ProductStockUpdateToOneWithWhereWithoutStock_TransactionsInput>;
  upsert?: InputMaybe<ProductStockUpsertWithoutStock_TransactionsInput>;
};

export type ProductStockUpdateOneWithoutIs_DefaultNestedInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<ProductStockCreateWithoutIs_DefaultInput>;
  delete?: InputMaybe<ProductStockWhereInput>;
  disconnect?: InputMaybe<ProductStockWhereInput>;
  update?: InputMaybe<ProductStockUpdateToOneWithWhereWithoutIs_DefaultInput>;
  upsert?: InputMaybe<ProductStockUpsertWithoutIs_DefaultInput>;
};

export type ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput = {
  connect?: InputMaybe<ProductStockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductStockCreateOrConnectWithoutStock_Transaction_ItemsInput>;
  create?: InputMaybe<ProductStockCreateWithoutStock_Transaction_ItemsInput>;
  delete?: InputMaybe<ProductStockWhereInput>;
  disconnect?: InputMaybe<ProductStockWhereInput>;
  update?: InputMaybe<ProductStockUpdateToOneWithWhereWithoutStock_Transaction_ItemsInput>;
  upsert?: InputMaybe<ProductStockUpsertWithoutStock_Transaction_ItemsInput>;
};

export type ProductStockUpdateToOneWithWhereWithoutDaily_StocksInput = {
  data: ProductStockUpdateWithoutDaily_StocksInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpdateToOneWithWhereWithoutIs_DefaultInput = {
  data: ProductStockUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpdateToOneWithWhereWithoutStock_HistoriesInput = {
  data: ProductStockUpdateWithoutStock_HistoriesInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpdateToOneWithWhereWithoutStock_Transaction_ItemsInput = {
  data: ProductStockUpdateWithoutStock_Transaction_ItemsInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpdateToOneWithWhereWithoutStock_TransactionsInput = {
  data: ProductStockUpdateWithoutStock_TransactionsInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductStockUpdateWithoutProductInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpdateWithWhereUniqueWithoutProdutc_Stock_ItemInput = {
  data: ProductStockUpdateWithoutProdutc_Stock_ItemInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpdateWithWhereUniqueWithoutStoreInput = {
  data: ProductStockUpdateWithoutStoreInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpdateWithoutDaily_StocksInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutIs_DefaultInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutProductInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutProdutc_Stock_ItemInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutStock_HistoriesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutStock_Transaction_ItemsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutStock_TransactionsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutProduct_StocksNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpdateWithoutStoreInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  allow_negative_stock?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  committed_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  current_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  daily_stocks?: InputMaybe<DailyStockUpdateManyWithoutStockNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<ProductUpdateOneWithoutDefault_StockNestedInput>;
  is_deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  low_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  optimal_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneRequiredWithoutStocksNestedInput>;
  produtc_stock_item?: InputMaybe<ProductStockItemUpdateOneWithoutStocksNestedInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  sale_stock?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_histories?: InputMaybe<StockHistoryUpdateManyWithoutStockNestedInput>;
  stock_transaction_items?: InputMaybe<StockTransactionItemUpdateManyWithoutStockNestedInput>;
  stock_transactions?: InputMaybe<StockTransactionUpdateManyWithoutStockNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductStockUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductStockCreateWithoutProductInput;
  update: ProductStockUpdateWithoutProductInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpsertWithWhereUniqueWithoutProdutc_Stock_ItemInput = {
  create: ProductStockCreateWithoutProdutc_Stock_ItemInput;
  update: ProductStockUpdateWithoutProdutc_Stock_ItemInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpsertWithWhereUniqueWithoutStoreInput = {
  create: ProductStockCreateWithoutStoreInput;
  update: ProductStockUpdateWithoutStoreInput;
  where: ProductStockWhereUniqueInput;
};

export type ProductStockUpsertWithoutDaily_StocksInput = {
  create: ProductStockCreateWithoutDaily_StocksInput;
  update: ProductStockUpdateWithoutDaily_StocksInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpsertWithoutIs_DefaultInput = {
  create: ProductStockCreateWithoutIs_DefaultInput;
  update: ProductStockUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpsertWithoutStock_HistoriesInput = {
  create: ProductStockCreateWithoutStock_HistoriesInput;
  update: ProductStockUpdateWithoutStock_HistoriesInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpsertWithoutStock_Transaction_ItemsInput = {
  create: ProductStockCreateWithoutStock_Transaction_ItemsInput;
  update: ProductStockUpdateWithoutStock_Transaction_ItemsInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockUpsertWithoutStock_TransactionsInput = {
  create: ProductStockCreateWithoutStock_TransactionsInput;
  update: ProductStockUpdateWithoutStock_TransactionsInput;
  where?: InputMaybe<ProductStockWhereInput>;
};

export type ProductStockWhereInput = {
  AND?: InputMaybe<Array<ProductStockWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockWhereInput>>;
  OR?: InputMaybe<Array<ProductStockWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  allow_negative_stock?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  committed_stock?: InputMaybe<DecimalFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  current_stock?: InputMaybe<DecimalFilter>;
  daily_stocks?: InputMaybe<DailyStockListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<ProductNullableRelationFilter>;
  is_deleted?: InputMaybe<BoolFilter>;
  low_stock?: InputMaybe<DecimalFilter>;
  name?: InputMaybe<StringFilter>;
  optimal_stock?: InputMaybe<DecimalFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_stock_item_id?: InputMaybe<StringNullableFilter>;
  produtc_stock_item?: InputMaybe<ProductStockItemNullableRelationFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<EnumProductTypeFilter>;
  sale_stock?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock_histories?: InputMaybe<StockHistoryListRelationFilter>;
  stock_transaction_items?: InputMaybe<StockTransactionItemListRelationFilter>;
  stock_transactions?: InputMaybe<StockTransactionListRelationFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductStockWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductStockWhereInput>>;
  NOT?: InputMaybe<Array<ProductStockWhereInput>>;
  OR?: InputMaybe<Array<ProductStockWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  allow_negative_stock?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  committed_stock?: InputMaybe<DecimalFilter>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  current_stock?: InputMaybe<DecimalFilter>;
  daily_stocks?: InputMaybe<DailyStockListRelationFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<ProductNullableRelationFilter>;
  is_deleted?: InputMaybe<BoolFilter>;
  low_stock?: InputMaybe<DecimalFilter>;
  name?: InputMaybe<StringFilter>;
  optimal_stock?: InputMaybe<DecimalFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  product?: InputMaybe<ProductRelationFilter>;
  product_id?: InputMaybe<StringFilter>;
  product_stock_item_id?: InputMaybe<StringNullableFilter>;
  produtc_stock_item?: InputMaybe<ProductStockItemNullableRelationFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<EnumProductTypeFilter>;
  sale_stock?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock_histories?: InputMaybe<StockHistoryListRelationFilter>;
  stock_transaction_items?: InputMaybe<StockTransactionItemListRelationFilter>;
  stock_transactions?: InputMaybe<StockTransactionListRelationFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  store_id_ref_id?: InputMaybe<ProductStockStore_IdRef_IdCompoundUniqueInput>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductSumAggregate = {
  __typename?: 'ProductSumAggregate';
  seq?: Maybe<Scalars['Int']['output']>;
};

export type ProductSumOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
};

export enum ProductType {
  Composite = 'COMPOSITE',
  Single = 'SINGLE',
  Variant = 'VARIANT'
}

export type ProductUnit = {
  __typename?: 'ProductUnit';
  _count?: Maybe<ProductUnitCount>;
  abbreviation: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  products: Array<Product>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type ProductUnitProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUnitCount = {
  __typename?: 'ProductUnitCount';
  products: Scalars['Int']['output'];
};


export type ProductUnitCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUnitCountAggregate = {
  __typename?: 'ProductUnitCountAggregate';
  _all: Scalars['Int']['output'];
  abbreviation: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ProductUnitCountOrderByAggregateInput = {
  abbreviation?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductUnitCreateInput = {
  abbreviation: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_UnitsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  products?: InputMaybe<ProductCreateNestedManyWithoutUnitInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductUnitCreateManyBusinessInput = {
  abbreviation: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductUnitCreateManyBusinessInputEnvelope = {
  data: Array<ProductUnitCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductUnitCreateManyInput = {
  abbreviation: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductUnitCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<ProductUnitWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductUnitCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductUnitCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductUnitCreateManyBusinessInputEnvelope>;
};

export type ProductUnitCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<ProductUnitWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductUnitCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ProductUnitCreateWithoutProductsInput>;
};

export type ProductUnitCreateOrConnectWithoutBusinessInput = {
  create: ProductUnitCreateWithoutBusinessInput;
  where: ProductUnitWhereUniqueInput;
};

export type ProductUnitCreateOrConnectWithoutProductsInput = {
  create: ProductUnitCreateWithoutProductsInput;
  where: ProductUnitWhereUniqueInput;
};

export type ProductUnitCreateWithoutBusinessInput = {
  abbreviation: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  products?: InputMaybe<ProductCreateNestedManyWithoutUnitInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductUnitCreateWithoutProductsInput = {
  abbreviation: Scalars['String']['input'];
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutProduct_UnitsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductUnitGroupBy = {
  __typename?: 'ProductUnitGroupBy';
  _count?: Maybe<ProductUnitCountAggregate>;
  _max?: Maybe<ProductUnitMaxAggregate>;
  _min?: Maybe<ProductUnitMinAggregate>;
  abbreviation: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductUnitListRelationFilter = {
  every?: InputMaybe<ProductUnitWhereInput>;
  none?: InputMaybe<ProductUnitWhereInput>;
  some?: InputMaybe<ProductUnitWhereInput>;
};

export type ProductUnitMaxAggregate = {
  __typename?: 'ProductUnitMaxAggregate';
  abbreviation?: Maybe<Scalars['String']['output']>;
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductUnitMaxOrderByAggregateInput = {
  abbreviation?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductUnitMinAggregate = {
  __typename?: 'ProductUnitMinAggregate';
  abbreviation?: Maybe<Scalars['String']['output']>;
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductUnitMinOrderByAggregateInput = {
  abbreviation?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductUnitNullableRelationFilter = {
  is?: InputMaybe<ProductUnitWhereInput>;
  isNot?: InputMaybe<ProductUnitWhereInput>;
};

export type ProductUnitOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductUnitOrderByWithAggregationInput = {
  _count?: InputMaybe<ProductUnitCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductUnitMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductUnitMinOrderByAggregateInput>;
  abbreviation?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductUnitOrderByWithRelationInput = {
  abbreviation?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum ProductUnitScalarFieldEnum {
  Abbreviation = 'abbreviation',
  Active = 'active',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updated_at'
}

export type ProductUnitScalarWhereInput = {
  AND?: InputMaybe<Array<ProductUnitScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductUnitScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductUnitScalarWhereInput>>;
  abbreviation?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductUnitScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductUnitScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductUnitScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductUnitScalarWhereWithAggregatesInput>>;
  abbreviation?: InputMaybe<StringWithAggregatesFilter>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ProductUnitUpdateInput = {
  abbreviation?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_UnitsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutUnitNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUnitUpdateManyMutationInput = {
  abbreviation?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUnitUpdateManyWithWhereWithoutBusinessInput = {
  data: ProductUnitUpdateManyMutationInput;
  where: ProductUnitScalarWhereInput;
};

export type ProductUnitUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<ProductUnitWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductUnitCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductUnitCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductUnitCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<ProductUnitWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductUnitScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductUnitWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductUnitWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUnitUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<ProductUnitUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<ProductUnitUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type ProductUnitUpdateOneWithoutProductsNestedInput = {
  connect?: InputMaybe<ProductUnitWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductUnitCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<ProductUnitCreateWithoutProductsInput>;
  delete?: InputMaybe<ProductUnitWhereInput>;
  disconnect?: InputMaybe<ProductUnitWhereInput>;
  update?: InputMaybe<ProductUnitUpdateToOneWithWhereWithoutProductsInput>;
  upsert?: InputMaybe<ProductUnitUpsertWithoutProductsInput>;
};

export type ProductUnitUpdateToOneWithWhereWithoutProductsInput = {
  data: ProductUnitUpdateWithoutProductsInput;
  where?: InputMaybe<ProductUnitWhereInput>;
};

export type ProductUnitUpdateWithWhereUniqueWithoutBusinessInput = {
  data: ProductUnitUpdateWithoutBusinessInput;
  where: ProductUnitWhereUniqueInput;
};

export type ProductUnitUpdateWithoutBusinessInput = {
  abbreviation?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutUnitNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUnitUpdateWithoutProductsInput = {
  abbreviation?: InputMaybe<StringFieldUpdateOperationsInput>;
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProduct_UnitsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUnitUpsertWithWhereUniqueWithoutBusinessInput = {
  create: ProductUnitCreateWithoutBusinessInput;
  update: ProductUnitUpdateWithoutBusinessInput;
  where: ProductUnitWhereUniqueInput;
};

export type ProductUnitUpsertWithoutProductsInput = {
  create: ProductUnitCreateWithoutProductsInput;
  update: ProductUnitUpdateWithoutProductsInput;
  where?: InputMaybe<ProductUnitWhereInput>;
};

export type ProductUnitWhereInput = {
  AND?: InputMaybe<Array<ProductUnitWhereInput>>;
  NOT?: InputMaybe<Array<ProductUnitWhereInput>>;
  OR?: InputMaybe<Array<ProductUnitWhereInput>>;
  abbreviation?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductUnitWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductUnitWhereInput>>;
  NOT?: InputMaybe<Array<ProductUnitWhereInput>>;
  OR?: InputMaybe<Array<ProductUnitWhereInput>>;
  abbreviation?: InputMaybe<StringFilter>;
  active?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<StringFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutBusinessInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutCategoryInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutImageInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutImagesInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutOptionsInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutSale_ChannelsInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutSupplierInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutTaxesInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithWhereWithoutUnitInput = {
  data: ProductUpdateManyMutationInput;
  where: ProductScalarWhereInput;
};

export type ProductUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type ProductUpdateManyWithoutCategoryNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutCategoryInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutCategoryInput>>;
  createMany?: InputMaybe<ProductCreateManyCategoryInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutCategoryInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutCategoryInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutCategoryInput>>;
};

export type ProductUpdateManyWithoutImageNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutImageInput>>;
  createMany?: InputMaybe<ProductCreateManyImageInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutImageInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutImageInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutImageInput>>;
};

export type ProductUpdateManyWithoutImagesNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutImagesInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutImagesInput>>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutImagesInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutImagesInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutImagesInput>>;
};

export type ProductUpdateManyWithoutOptionsNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutOptionsInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutOptionsInput>>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutOptionsInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutOptionsInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutOptionsInput>>;
};

export type ProductUpdateManyWithoutSale_ChannelsNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutSale_ChannelsInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutSale_ChannelsInput>>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutSale_ChannelsInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutSale_ChannelsInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutSale_ChannelsInput>>;
};

export type ProductUpdateManyWithoutSupplierNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutSupplierInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutSupplierInput>>;
  createMany?: InputMaybe<ProductCreateManySupplierInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutSupplierInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutSupplierInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutSupplierInput>>;
};

export type ProductUpdateManyWithoutTaxesNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutTaxesInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutTaxesInput>>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutTaxesInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutTaxesInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutTaxesInput>>;
};

export type ProductUpdateManyWithoutUnitNestedInput = {
  connect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductCreateOrConnectWithoutUnitInput>>;
  create?: InputMaybe<Array<ProductCreateWithoutUnitInput>>;
  createMany?: InputMaybe<ProductCreateManyUnitInputEnvelope>;
  delete?: InputMaybe<Array<ProductWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductUpdateWithWhereUniqueWithoutUnitInput>>;
  updateMany?: InputMaybe<Array<ProductUpdateManyWithWhereWithoutUnitInput>>;
  upsert?: InputMaybe<Array<ProductUpsertWithWhereUniqueWithoutUnitInput>>;
};

export type ProductUpdateOneRequiredWithoutCompositesNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutCompositesInput>;
  create?: InputMaybe<ProductCreateWithoutCompositesInput>;
  update?: InputMaybe<ProductUpdateToOneWithWhereWithoutCompositesInput>;
  upsert?: InputMaybe<ProductUpsertWithoutCompositesInput>;
};

export type ProductUpdateOneRequiredWithoutStock_ItemsNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutStock_ItemsInput>;
  create?: InputMaybe<ProductCreateWithoutStock_ItemsInput>;
  update?: InputMaybe<ProductUpdateToOneWithWhereWithoutStock_ItemsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutStock_ItemsInput>;
};

export type ProductUpdateOneRequiredWithoutStocksNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<ProductCreateWithoutStocksInput>;
  update?: InputMaybe<ProductUpdateToOneWithWhereWithoutStocksInput>;
  upsert?: InputMaybe<ProductUpsertWithoutStocksInput>;
};

export type ProductUpdateOneWithoutDefault_StockNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutDefault_StockInput>;
  create?: InputMaybe<ProductCreateWithoutDefault_StockInput>;
  delete?: InputMaybe<ProductWhereInput>;
  disconnect?: InputMaybe<ProductWhereInput>;
  update?: InputMaybe<ProductUpdateToOneWithWhereWithoutDefault_StockInput>;
  upsert?: InputMaybe<ProductUpsertWithoutDefault_StockInput>;
};

export type ProductUpdateOneWithoutVariantsNestedInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutVariantsInput>;
  create?: InputMaybe<ProductCreateWithoutVariantsInput>;
  delete?: InputMaybe<ProductWhereInput>;
  disconnect?: InputMaybe<ProductWhereInput>;
  update?: InputMaybe<ProductUpdateToOneWithWhereWithoutVariantsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutVariantsInput>;
};

export type ProductUpdateToOneWithWhereWithoutCompositesInput = {
  data: ProductUpdateWithoutCompositesInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpdateToOneWithWhereWithoutDefault_StockInput = {
  data: ProductUpdateWithoutDefault_StockInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpdateToOneWithWhereWithoutStock_ItemsInput = {
  data: ProductUpdateWithoutStock_ItemsInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpdateToOneWithWhereWithoutStocksInput = {
  data: ProductUpdateWithoutStocksInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpdateToOneWithWhereWithoutVariantsInput = {
  data: ProductUpdateWithoutVariantsInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpdateWithWhereUniqueWithoutBusinessInput = {
  data: ProductUpdateWithoutBusinessInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
  data: ProductUpdateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutImageInput = {
  data: ProductUpdateWithoutImageInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutImagesInput = {
  data: ProductUpdateWithoutImagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutOptionsInput = {
  data: ProductUpdateWithoutOptionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutSale_ChannelsInput = {
  data: ProductUpdateWithoutSale_ChannelsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutSupplierInput = {
  data: ProductUpdateWithoutSupplierInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutTaxesInput = {
  data: ProductUpdateWithoutTaxesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithWhereUniqueWithoutUnitInput = {
  data: ProductUpdateWithoutUnitInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutCategoryInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutCompositesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutDefault_StockInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutImageInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutImagesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutOptionsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutSale_ChannelsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutStock_ItemsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutStocksInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutSupplierInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutTaxesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutUnitInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variants?: InputMaybe<ProductVariantUpdateManyWithoutProductNestedInput>;
};

export type ProductUpdateWithoutVariantsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  available_all_channel?: InputMaybe<BoolFieldUpdateOperationsInput>;
  barcode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutProductsNestedInput>;
  category?: InputMaybe<ProductCategoryUpdateOneWithoutProductsNestedInput>;
  composites?: InputMaybe<CompositeItemUpdateManyWithoutProductNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  default_stock?: InputMaybe<ProductStockUpdateOneWithoutIs_DefaultNestedInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutProductsNestedInput>;
  images?: InputMaybe<ImageUpdateManyWithoutProduct_ImagesNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  options?: InputMaybe<ProductVariantUpdateManyWithoutProductsNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutProductsNestedInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock_items?: InputMaybe<ProductStockItemUpdateManyWithoutProductNestedInput>;
  stocks?: InputMaybe<ProductStockUpdateManyWithoutProductNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneWithoutProductsNestedInput>;
  taxes?: InputMaybe<TaxSettingUpdateManyWithoutProductsNestedInput>;
  track_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumProductTypeFieldUpdateOperationsInput>;
  unit?: InputMaybe<ProductUnitUpdateOneWithoutProductsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductUpsertWithWhereUniqueWithoutBusinessInput = {
  create: ProductCreateWithoutBusinessInput;
  update: ProductUpdateWithoutBusinessInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
  create: ProductCreateWithoutCategoryInput;
  update: ProductUpdateWithoutCategoryInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutImageInput = {
  create: ProductCreateWithoutImageInput;
  update: ProductUpdateWithoutImageInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutImagesInput = {
  create: ProductCreateWithoutImagesInput;
  update: ProductUpdateWithoutImagesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutOptionsInput = {
  create: ProductCreateWithoutOptionsInput;
  update: ProductUpdateWithoutOptionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutSale_ChannelsInput = {
  create: ProductCreateWithoutSale_ChannelsInput;
  update: ProductUpdateWithoutSale_ChannelsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutSupplierInput = {
  create: ProductCreateWithoutSupplierInput;
  update: ProductUpdateWithoutSupplierInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutTaxesInput = {
  create: ProductCreateWithoutTaxesInput;
  update: ProductUpdateWithoutTaxesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithWhereUniqueWithoutUnitInput = {
  create: ProductCreateWithoutUnitInput;
  update: ProductUpdateWithoutUnitInput;
  where: ProductWhereUniqueInput;
};

export type ProductUpsertWithoutCompositesInput = {
  create: ProductCreateWithoutCompositesInput;
  update: ProductUpdateWithoutCompositesInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpsertWithoutDefault_StockInput = {
  create: ProductCreateWithoutDefault_StockInput;
  update: ProductUpdateWithoutDefault_StockInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpsertWithoutStock_ItemsInput = {
  create: ProductCreateWithoutStock_ItemsInput;
  update: ProductUpdateWithoutStock_ItemsInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpsertWithoutStocksInput = {
  create: ProductCreateWithoutStocksInput;
  update: ProductUpdateWithoutStocksInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductUpsertWithoutVariantsInput = {
  create: ProductCreateWithoutVariantsInput;
  update: ProductUpdateWithoutVariantsInput;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductVariant = {
  __typename?: 'ProductVariant';
  _count?: Maybe<ProductVariantCount>;
  active: Scalars['Boolean']['output'];
  attributes: Array<ProductVariantAttribute>;
  business?: Maybe<Business>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_single_select: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  product?: Maybe<Product>;
  product_id?: Maybe<Scalars['String']['output']>;
  products: Array<Product>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type ProductVariantAttributesArgs = {
  cursor?: InputMaybe<ProductVariantAttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantAttributeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type ProductVariantBusinessArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type ProductVariantProductArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type ProductVariantProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductVariantAttribute = {
  __typename?: 'ProductVariantAttribute';
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  original_price: Scalars['Decimal']['output'];
  selling_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  variant: ProductVariant;
  variant_id: Scalars['String']['output'];
};

export type ProductVariantAttributeAvgAggregate = {
  __typename?: 'ProductVariantAttributeAvgAggregate';
  order?: Maybe<Scalars['Float']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductVariantAttributeAvgOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeCountAggregate = {
  __typename?: 'ProductVariantAttributeCountAggregate';
  _all: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  order: Scalars['Int']['output'];
  original_price: Scalars['Int']['output'];
  selling_price: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  variant_id: Scalars['Int']['output'];
};

export type ProductVariantAttributeCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  variant_id?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variant: ProductVariantCreateNestedOneWithoutAttributesInput;
};

export type ProductVariantAttributeCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  variant_id: Scalars['String']['input'];
};

export type ProductVariantAttributeCreateManyVariantInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantAttributeCreateManyVariantInputEnvelope = {
  data: Array<ProductVariantAttributeCreateManyVariantInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductVariantAttributeCreateNestedManyWithoutVariantInput = {
  connect?: InputMaybe<Array<ProductVariantAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantAttributeCreateOrConnectWithoutVariantInput>>;
  create?: InputMaybe<Array<ProductVariantAttributeCreateWithoutVariantInput>>;
  createMany?: InputMaybe<ProductVariantAttributeCreateManyVariantInputEnvelope>;
};

export type ProductVariantAttributeCreateOrConnectWithoutVariantInput = {
  create: ProductVariantAttributeCreateWithoutVariantInput;
  where: ProductVariantAttributeWhereUniqueInput;
};

export type ProductVariantAttributeCreateWithoutVariantInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  original_price?: InputMaybe<Scalars['Decimal']['input']>;
  selling_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantAttributeGroupBy = {
  __typename?: 'ProductVariantAttributeGroupBy';
  _avg?: Maybe<ProductVariantAttributeAvgAggregate>;
  _count?: Maybe<ProductVariantAttributeCountAggregate>;
  _max?: Maybe<ProductVariantAttributeMaxAggregate>;
  _min?: Maybe<ProductVariantAttributeMinAggregate>;
  _sum?: Maybe<ProductVariantAttributeSumAggregate>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  original_price: Scalars['Decimal']['output'];
  selling_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  variant_id: Scalars['String']['output'];
};

export type ProductVariantAttributeListRelationFilter = {
  every?: InputMaybe<ProductVariantAttributeWhereInput>;
  none?: InputMaybe<ProductVariantAttributeWhereInput>;
  some?: InputMaybe<ProductVariantAttributeWhereInput>;
};

export type ProductVariantAttributeMaxAggregate = {
  __typename?: 'ProductVariantAttributeMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  variant_id?: Maybe<Scalars['String']['output']>;
};

export type ProductVariantAttributeMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  variant_id?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeMinAggregate = {
  __typename?: 'ProductVariantAttributeMinAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  variant_id?: Maybe<Scalars['String']['output']>;
};

export type ProductVariantAttributeMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  variant_id?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductVariantAttributeAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductVariantAttributeCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductVariantAttributeMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductVariantAttributeMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductVariantAttributeSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  variant_id?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeOrderByWithRelationInput = {
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  variant?: InputMaybe<ProductVariantOrderByWithRelationInput>;
  variant_id?: InputMaybe<SortOrder>;
};

export enum ProductVariantAttributeScalarFieldEnum {
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Order = 'order',
  OriginalPrice = 'original_price',
  SellingPrice = 'selling_price',
  UpdatedAt = 'updated_at',
  VariantId = 'variant_id'
}

export type ProductVariantAttributeScalarWhereInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantAttributeScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeScalarWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  variant_id?: InputMaybe<StringFilter>;
};

export type ProductVariantAttributeScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductVariantAttributeScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  order?: InputMaybe<IntWithAggregatesFilter>;
  original_price?: InputMaybe<DecimalWithAggregatesFilter>;
  selling_price?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  variant_id?: InputMaybe<StringWithAggregatesFilter>;
};

export type ProductVariantAttributeSumAggregate = {
  __typename?: 'ProductVariantAttributeSumAggregate';
  order?: Maybe<Scalars['Int']['output']>;
  original_price?: Maybe<Scalars['Decimal']['output']>;
  selling_price?: Maybe<Scalars['Decimal']['output']>;
};

export type ProductVariantAttributeSumOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
  original_price?: InputMaybe<SortOrder>;
  selling_price?: InputMaybe<SortOrder>;
};

export type ProductVariantAttributeUpdateInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  variant?: InputMaybe<ProductVariantUpdateOneRequiredWithoutAttributesNestedInput>;
};

export type ProductVariantAttributeUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeUpdateManyWithWhereWithoutVariantInput = {
  data: ProductVariantAttributeUpdateManyMutationInput;
  where: ProductVariantAttributeScalarWhereInput;
};

export type ProductVariantAttributeUpdateManyWithoutVariantNestedInput = {
  connect?: InputMaybe<Array<ProductVariantAttributeWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantAttributeCreateOrConnectWithoutVariantInput>>;
  create?: InputMaybe<Array<ProductVariantAttributeCreateWithoutVariantInput>>;
  createMany?: InputMaybe<ProductVariantAttributeCreateManyVariantInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantAttributeWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantAttributeScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantAttributeWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantAttributeWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductVariantAttributeUpdateWithWhereUniqueWithoutVariantInput>>;
  updateMany?: InputMaybe<Array<ProductVariantAttributeUpdateManyWithWhereWithoutVariantInput>>;
  upsert?: InputMaybe<Array<ProductVariantAttributeUpsertWithWhereUniqueWithoutVariantInput>>;
};

export type ProductVariantAttributeUpdateWithWhereUniqueWithoutVariantInput = {
  data: ProductVariantAttributeUpdateWithoutVariantInput;
  where: ProductVariantAttributeWhereUniqueInput;
};

export type ProductVariantAttributeUpdateWithoutVariantInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  original_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  selling_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantAttributeUpsertWithWhereUniqueWithoutVariantInput = {
  create: ProductVariantAttributeCreateWithoutVariantInput;
  update: ProductVariantAttributeUpdateWithoutVariantInput;
  where: ProductVariantAttributeWhereUniqueInput;
};

export type ProductVariantAttributeWhereInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  variant?: InputMaybe<ProductVariantRelationFilter>;
  variant_id?: InputMaybe<StringFilter>;
};

export type ProductVariantAttributeWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantAttributeWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  original_price?: InputMaybe<DecimalFilter>;
  selling_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  variant?: InputMaybe<ProductVariantRelationFilter>;
  variant_id?: InputMaybe<StringFilter>;
};

export type ProductVariantAvgAggregate = {
  __typename?: 'ProductVariantAvgAggregate';
  order?: Maybe<Scalars['Float']['output']>;
};

export type ProductVariantAvgOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
};

export type ProductVariantCount = {
  __typename?: 'ProductVariantCount';
  attributes: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
};


export type ProductVariantCountAttributesArgs = {
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type ProductVariantCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductVariantCountAggregate = {
  __typename?: 'ProductVariantCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_single_select: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  order: Scalars['Int']['output'];
  product_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type ProductVariantCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_single_select?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductVariantCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attributes?: InputMaybe<ProductVariantAttributeCreateNestedManyWithoutVariantInput>;
  business?: InputMaybe<BusinessCreateNestedOneWithoutModifiersInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutVariantsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutOptionsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateManyBusinessInputEnvelope = {
  data: Array<ProductVariantCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductVariantCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product_id?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateManyProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateManyProductInputEnvelope = {
  data: Array<ProductVariantCreateManyProductInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ProductVariantCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyBusinessInputEnvelope>;
};

export type ProductVariantCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyProductInputEnvelope>;
};

export type ProductVariantCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductsInput>>;
};

export type ProductVariantCreateNestedOneWithoutAttributesInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutAttributesInput>;
};

export type ProductVariantCreateOrConnectWithoutAttributesInput = {
  create: ProductVariantCreateWithoutAttributesInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateOrConnectWithoutBusinessInput = {
  create: ProductVariantCreateWithoutBusinessInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateOrConnectWithoutProductInput = {
  create: ProductVariantCreateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateOrConnectWithoutProductsInput = {
  create: ProductVariantCreateWithoutProductsInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantCreateWithoutAttributesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business?: InputMaybe<BusinessCreateNestedOneWithoutModifiersInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutVariantsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutOptionsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attributes?: InputMaybe<ProductVariantAttributeCreateNestedManyWithoutVariantInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutVariantsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutOptionsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateWithoutProductInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attributes?: InputMaybe<ProductVariantAttributeCreateNestedManyWithoutVariantInput>;
  business?: InputMaybe<BusinessCreateNestedOneWithoutModifiersInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutOptionsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  attributes?: InputMaybe<ProductVariantAttributeCreateNestedManyWithoutVariantInput>;
  business?: InputMaybe<BusinessCreateNestedOneWithoutModifiersInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Int']['input']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutVariantsInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type ProductVariantGroupBy = {
  __typename?: 'ProductVariantGroupBy';
  _avg?: Maybe<ProductVariantAvgAggregate>;
  _count?: Maybe<ProductVariantCountAggregate>;
  _max?: Maybe<ProductVariantMaxAggregate>;
  _min?: Maybe<ProductVariantMinAggregate>;
  _sum?: Maybe<ProductVariantSumAggregate>;
  active: Scalars['Boolean']['output'];
  business_id?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_single_select: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  order: Scalars['Int']['output'];
  product_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductVariantListRelationFilter = {
  every?: InputMaybe<ProductVariantWhereInput>;
  none?: InputMaybe<ProductVariantWhereInput>;
  some?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductVariantMaxAggregate = {
  __typename?: 'ProductVariantMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_single_select?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductVariantMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_single_select?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductVariantMinAggregate = {
  __typename?: 'ProductVariantMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_single_select?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  order?: Maybe<Scalars['Int']['output']>;
  product_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type ProductVariantMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_single_select?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type ProductVariantOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductVariantOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductVariantAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductVariantCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductVariantMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductVariantMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductVariantSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_single_select?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  product_id?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductVariantOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  attributes?: InputMaybe<ProductVariantAttributeOrderByRelationAggregateInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_single_select?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  product_id?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type ProductVariantRelationFilter = {
  is?: InputMaybe<ProductVariantWhereInput>;
  isNot?: InputMaybe<ProductVariantWhereInput>;
};

export enum ProductVariantScalarFieldEnum {
  Active = 'active',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  IsSingleSelect = 'is_single_select',
  Name = 'name',
  Order = 'order',
  ProductId = 'product_id',
  UpdatedAt = 'updated_at'
}

export type ProductVariantScalarWhereInput = {
  AND?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_single_select?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  product_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductVariantScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<ProductVariantScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<ProductVariantScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<ProductVariantScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_single_select?: InputMaybe<BoolWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  order?: InputMaybe<IntWithAggregatesFilter>;
  product_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type ProductVariantSumAggregate = {
  __typename?: 'ProductVariantSumAggregate';
  order?: Maybe<Scalars['Int']['output']>;
};

export type ProductVariantSumOrderByAggregateInput = {
  order?: InputMaybe<SortOrder>;
};

export type ProductVariantUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attributes?: InputMaybe<ProductVariantAttributeUpdateManyWithoutVariantNestedInput>;
  business?: InputMaybe<BusinessUpdateOneWithoutModifiersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutVariantsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutOptionsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateManyWithWhereWithoutBusinessInput = {
  data: ProductVariantUpdateManyMutationInput;
  where: ProductVariantScalarWhereInput;
};

export type ProductVariantUpdateManyWithWhereWithoutProductInput = {
  data: ProductVariantUpdateManyMutationInput;
  where: ProductVariantScalarWhereInput;
};

export type ProductVariantUpdateManyWithWhereWithoutProductsInput = {
  data: ProductVariantUpdateManyMutationInput;
  where: ProductVariantScalarWhereInput;
};

export type ProductVariantUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductVariantUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<ProductVariantUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<ProductVariantUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type ProductVariantUpdateManyWithoutProductNestedInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutProductInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductInput>>;
  createMany?: InputMaybe<ProductVariantCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductVariantUpdateWithWhereUniqueWithoutProductInput>>;
  updateMany?: InputMaybe<Array<ProductVariantUpdateManyWithWhereWithoutProductInput>>;
  upsert?: InputMaybe<Array<ProductVariantUpsertWithWhereUniqueWithoutProductInput>>;
};

export type ProductVariantUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<ProductVariantCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<ProductVariantCreateWithoutProductsInput>>;
  delete?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<ProductVariantScalarWhereInput>>;
  disconnect?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  set?: InputMaybe<Array<ProductVariantWhereUniqueInput>>;
  update?: InputMaybe<Array<ProductVariantUpdateWithWhereUniqueWithoutProductsInput>>;
  updateMany?: InputMaybe<Array<ProductVariantUpdateManyWithWhereWithoutProductsInput>>;
  upsert?: InputMaybe<Array<ProductVariantUpsertWithWhereUniqueWithoutProductsInput>>;
};

export type ProductVariantUpdateOneRequiredWithoutAttributesNestedInput = {
  connect?: InputMaybe<ProductVariantWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductVariantCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<ProductVariantCreateWithoutAttributesInput>;
  update?: InputMaybe<ProductVariantUpdateToOneWithWhereWithoutAttributesInput>;
  upsert?: InputMaybe<ProductVariantUpsertWithoutAttributesInput>;
};

export type ProductVariantUpdateToOneWithWhereWithoutAttributesInput = {
  data: ProductVariantUpdateWithoutAttributesInput;
  where?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductVariantUpdateWithWhereUniqueWithoutBusinessInput = {
  data: ProductVariantUpdateWithoutBusinessInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpdateWithWhereUniqueWithoutProductInput = {
  data: ProductVariantUpdateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpdateWithWhereUniqueWithoutProductsInput = {
  data: ProductVariantUpdateWithoutProductsInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpdateWithoutAttributesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneWithoutModifiersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutVariantsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutOptionsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attributes?: InputMaybe<ProductVariantAttributeUpdateManyWithoutVariantNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutVariantsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutOptionsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateWithoutProductInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attributes?: InputMaybe<ProductVariantAttributeUpdateManyWithoutVariantNestedInput>;
  business?: InputMaybe<BusinessUpdateOneWithoutModifiersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutOptionsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpdateWithoutProductsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  attributes?: InputMaybe<ProductVariantAttributeUpdateManyWithoutVariantNestedInput>;
  business?: InputMaybe<BusinessUpdateOneWithoutModifiersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_single_select?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<IntFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutVariantsNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type ProductVariantUpsertWithWhereUniqueWithoutBusinessInput = {
  create: ProductVariantCreateWithoutBusinessInput;
  update: ProductVariantUpdateWithoutBusinessInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpsertWithWhereUniqueWithoutProductInput = {
  create: ProductVariantCreateWithoutProductInput;
  update: ProductVariantUpdateWithoutProductInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpsertWithWhereUniqueWithoutProductsInput = {
  create: ProductVariantCreateWithoutProductsInput;
  update: ProductVariantUpdateWithoutProductsInput;
  where: ProductVariantWhereUniqueInput;
};

export type ProductVariantUpsertWithoutAttributesInput = {
  create: ProductVariantCreateWithoutAttributesInput;
  update: ProductVariantUpdateWithoutAttributesInput;
  where?: InputMaybe<ProductVariantWhereInput>;
};

export type ProductVariantWhereInput = {
  AND?: InputMaybe<Array<ProductVariantWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  attributes?: InputMaybe<ProductVariantAttributeListRelationFilter>;
  business?: InputMaybe<BusinessNullableRelationFilter>;
  business_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_single_select?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  product?: InputMaybe<ProductNullableRelationFilter>;
  product_id?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductVariantWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductVariantWhereInput>>;
  NOT?: InputMaybe<Array<ProductVariantWhereInput>>;
  OR?: InputMaybe<Array<ProductVariantWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  attributes?: InputMaybe<ProductVariantAttributeListRelationFilter>;
  business?: InputMaybe<BusinessNullableRelationFilter>;
  business_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_single_select?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  order?: InputMaybe<IntFilter>;
  product?: InputMaybe<ProductNullableRelationFilter>;
  product_id?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type ProductWhereInput = {
  AND?: InputMaybe<Array<ProductWhereInput>>;
  NOT?: InputMaybe<Array<ProductWhereInput>>;
  OR?: InputMaybe<Array<ProductWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  category?: InputMaybe<ProductCategoryNullableRelationFilter>;
  category_id?: InputMaybe<StringNullableFilter>;
  composites?: InputMaybe<CompositeItemListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  default_stock?: InputMaybe<ProductStockNullableRelationFilter>;
  default_stock_id?: InputMaybe<StringNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  images?: InputMaybe<ImageListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  options?: InputMaybe<ProductVariantListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  seq?: InputMaybe<IntFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock_items?: InputMaybe<ProductStockItemListRelationFilter>;
  stocks?: InputMaybe<ProductStockListRelationFilter>;
  supplier?: InputMaybe<SupplierNullableRelationFilter>;
  supplier_id?: InputMaybe<StringNullableFilter>;
  taxes?: InputMaybe<TaxSettingListRelationFilter>;
  track_inventory?: InputMaybe<BoolFilter>;
  type?: InputMaybe<EnumProductTypeFilter>;
  unit?: InputMaybe<ProductUnitNullableRelationFilter>;
  unit_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  variants?: InputMaybe<ProductVariantListRelationFilter>;
};

export type ProductWhereUniqueInput = {
  AND?: InputMaybe<Array<ProductWhereInput>>;
  NOT?: InputMaybe<Array<ProductWhereInput>>;
  OR?: InputMaybe<Array<ProductWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  available_all_channel?: InputMaybe<BoolFilter>;
  barcode?: InputMaybe<StringNullableFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  business_id_name?: InputMaybe<ProductBusiness_IdNameCompoundUniqueInput>;
  category?: InputMaybe<ProductCategoryNullableRelationFilter>;
  category_id?: InputMaybe<StringNullableFilter>;
  composites?: InputMaybe<CompositeItemListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  default_stock?: InputMaybe<ProductStockNullableRelationFilter>;
  default_stock_id?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  images?: InputMaybe<ImageListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  options?: InputMaybe<ProductVariantListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  seq?: InputMaybe<IntFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  stock_items?: InputMaybe<ProductStockItemListRelationFilter>;
  stocks?: InputMaybe<ProductStockListRelationFilter>;
  supplier?: InputMaybe<SupplierNullableRelationFilter>;
  supplier_id?: InputMaybe<StringNullableFilter>;
  taxes?: InputMaybe<TaxSettingListRelationFilter>;
  track_inventory?: InputMaybe<BoolFilter>;
  type?: InputMaybe<EnumProductTypeFilter>;
  unit?: InputMaybe<ProductUnitNullableRelationFilter>;
  unit_id?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  variants?: InputMaybe<ProductVariantListRelationFilter>;
};

export type PurchaseOrder = {
  __typename?: 'PurchaseOrder';
  _count?: Maybe<PurchaseOrderCount>;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  expected_date: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  items: Array<StockTransactionItem>;
  net_amount: Scalars['Decimal']['output'];
  note?: Maybe<Scalars['String']['output']>;
  order_date: Scalars['DateTime']['output'];
  received_qty: Scalars['Decimal']['output'];
  seq: Scalars['Int']['output'];
  status: PurchaseOrderStatus;
  store: Store;
  store_id: Scalars['String']['output'];
  supplier: Supplier;
  supplier_id: Scalars['String']['output'];
  total_amount: Scalars['Decimal']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user: User;
  user_id: Scalars['String']['output'];
};


export type PurchaseOrderItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type PurchaseOrderAvgAggregate = {
  __typename?: 'PurchaseOrderAvgAggregate';
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Float']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type PurchaseOrderAvgOrderByAggregateInput = {
  net_amount?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type PurchaseOrderCount = {
  __typename?: 'PurchaseOrderCount';
  items: Scalars['Int']['output'];
};


export type PurchaseOrderCountItemsArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type PurchaseOrderCountAggregate = {
  __typename?: 'PurchaseOrderCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  expected_date: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  net_amount: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  order_date: Scalars['Int']['output'];
  received_qty: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  status: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  supplier_id: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  total_qty: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type PurchaseOrderCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  expected_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type PurchaseOrderCreateInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutP_OrderInput>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store: StoreCreateNestedOneWithoutPurchase_OrdersInput;
  supplier: SupplierCreateNestedOneWithoutPurchase_OrdersInput;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutPurchase_OrdersInput;
};

export type PurchaseOrderCreateManyInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store_id: Scalars['String']['input'];
  supplier_id: Scalars['String']['input'];
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type PurchaseOrderCreateManyStoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  supplier_id: Scalars['String']['input'];
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type PurchaseOrderCreateManyStoreInputEnvelope = {
  data: Array<PurchaseOrderCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PurchaseOrderCreateManySupplierInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store_id: Scalars['String']['input'];
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type PurchaseOrderCreateManySupplierInputEnvelope = {
  data: Array<PurchaseOrderCreateManySupplierInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PurchaseOrderCreateManyUserInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store_id: Scalars['String']['input'];
  supplier_id: Scalars['String']['input'];
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PurchaseOrderCreateManyUserInputEnvelope = {
  data: Array<PurchaseOrderCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PurchaseOrderCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutStoreInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManyStoreInputEnvelope>;
};

export type PurchaseOrderCreateNestedManyWithoutSupplierInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutSupplierInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutSupplierInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManySupplierInputEnvelope>;
};

export type PurchaseOrderCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutUserInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManyUserInputEnvelope>;
};

export type PurchaseOrderCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PurchaseOrderCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<PurchaseOrderCreateWithoutItemsInput>;
};

export type PurchaseOrderCreateOrConnectWithoutItemsInput = {
  create: PurchaseOrderCreateWithoutItemsInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderCreateOrConnectWithoutStoreInput = {
  create: PurchaseOrderCreateWithoutStoreInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderCreateOrConnectWithoutSupplierInput = {
  create: PurchaseOrderCreateWithoutSupplierInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderCreateOrConnectWithoutUserInput = {
  create: PurchaseOrderCreateWithoutUserInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderCreateWithoutItemsInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store: StoreCreateNestedOneWithoutPurchase_OrdersInput;
  supplier: SupplierCreateNestedOneWithoutPurchase_OrdersInput;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutPurchase_OrdersInput;
};

export type PurchaseOrderCreateWithoutStoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutP_OrderInput>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  supplier: SupplierCreateNestedOneWithoutPurchase_OrdersInput;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutPurchase_OrdersInput;
};

export type PurchaseOrderCreateWithoutSupplierInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutP_OrderInput>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store: StoreCreateNestedOneWithoutPurchase_OrdersInput;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutPurchase_OrdersInput;
};

export type PurchaseOrderCreateWithoutUserInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  expected_date: Scalars['DateTime']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutP_OrderInput>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: PurchaseOrderStatus;
  store: StoreCreateNestedOneWithoutPurchase_OrdersInput;
  supplier: SupplierCreateNestedOneWithoutPurchase_OrdersInput;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type PurchaseOrderGroupBy = {
  __typename?: 'PurchaseOrderGroupBy';
  _avg?: Maybe<PurchaseOrderAvgAggregate>;
  _count?: Maybe<PurchaseOrderCountAggregate>;
  _max?: Maybe<PurchaseOrderMaxAggregate>;
  _min?: Maybe<PurchaseOrderMinAggregate>;
  _sum?: Maybe<PurchaseOrderSumAggregate>;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  expected_date: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  net_amount: Scalars['Decimal']['output'];
  note?: Maybe<Scalars['String']['output']>;
  order_date: Scalars['DateTime']['output'];
  received_qty: Scalars['Decimal']['output'];
  seq: Scalars['Int']['output'];
  status: PurchaseOrderStatus;
  store_id: Scalars['String']['output'];
  supplier_id: Scalars['String']['output'];
  total_amount: Scalars['Decimal']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id: Scalars['String']['output'];
};

export type PurchaseOrderListRelationFilter = {
  every?: InputMaybe<PurchaseOrderWhereInput>;
  none?: InputMaybe<PurchaseOrderWhereInput>;
  some?: InputMaybe<PurchaseOrderWhereInput>;
};

export type PurchaseOrderMaxAggregate = {
  __typename?: 'PurchaseOrderMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  expected_date?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  order_date?: Maybe<Scalars['DateTime']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<PurchaseOrderStatus>;
  store_id?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type PurchaseOrderMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  expected_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type PurchaseOrderMinAggregate = {
  __typename?: 'PurchaseOrderMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  expected_date?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  order_date?: Maybe<Scalars['DateTime']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<PurchaseOrderStatus>;
  store_id?: Maybe<Scalars['String']['output']>;
  supplier_id?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type PurchaseOrderMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  expected_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type PurchaseOrderNullableRelationFilter = {
  is?: InputMaybe<PurchaseOrderWhereInput>;
  isNot?: InputMaybe<PurchaseOrderWhereInput>;
};

export type PurchaseOrderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PurchaseOrderOrderByWithAggregationInput = {
  _avg?: InputMaybe<PurchaseOrderAvgOrderByAggregateInput>;
  _count?: InputMaybe<PurchaseOrderCountOrderByAggregateInput>;
  _max?: InputMaybe<PurchaseOrderMaxOrderByAggregateInput>;
  _min?: InputMaybe<PurchaseOrderMinOrderByAggregateInput>;
  _sum?: InputMaybe<PurchaseOrderSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  expected_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  order_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  supplier_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user_id?: InputMaybe<SortOrder>;
};

export type PurchaseOrderOrderByWithRelationInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  expected_date?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  order_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  supplier?: InputMaybe<SupplierOrderByWithRelationInput>;
  supplier_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  user_id?: InputMaybe<SortOrder>;
};

export enum PurchaseOrderScalarFieldEnum {
  BusinessId = 'business_id',
  Code = 'code',
  CreatedAt = 'created_at',
  ExpectedDate = 'expected_date',
  Id = 'id',
  NetAmount = 'net_amount',
  Note = 'note',
  OrderDate = 'order_date',
  ReceivedQty = 'received_qty',
  Seq = 'seq',
  Status = 'status',
  StoreId = 'store_id',
  SupplierId = 'supplier_id',
  TotalAmount = 'total_amount',
  TotalQty = 'total_qty',
  UpdatedAt = 'updated_at',
  UserId = 'user_id'
}

export type PurchaseOrderScalarWhereInput = {
  AND?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  NOT?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  OR?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  expected_date?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumPurchaseOrderStatusFilter>;
  store_id?: InputMaybe<StringFilter>;
  supplier_id?: InputMaybe<StringFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type PurchaseOrderScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<PurchaseOrderScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<PurchaseOrderScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<PurchaseOrderScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  expected_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  net_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  order_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  received_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  status?: InputMaybe<EnumPurchaseOrderStatusWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  supplier_id?: InputMaybe<StringWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringWithAggregatesFilter>;
};

export enum PurchaseOrderStatus {
  Closed = 'CLOSED',
  Draft = 'DRAFT',
  PartiallyReceived = 'PARTIALLY_RECEIVED',
  Pending = 'PENDING'
}

export type PurchaseOrderSumAggregate = {
  __typename?: 'PurchaseOrderSumAggregate';
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type PurchaseOrderSumOrderByAggregateInput = {
  net_amount?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type PurchaseOrderUpdateInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutP_OrderNestedInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
};

export type PurchaseOrderUpdateManyMutationInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PurchaseOrderUpdateManyWithWhereWithoutStoreInput = {
  data: PurchaseOrderUpdateManyMutationInput;
  where: PurchaseOrderScalarWhereInput;
};

export type PurchaseOrderUpdateManyWithWhereWithoutSupplierInput = {
  data: PurchaseOrderUpdateManyMutationInput;
  where: PurchaseOrderScalarWhereInput;
};

export type PurchaseOrderUpdateManyWithWhereWithoutUserInput = {
  data: PurchaseOrderUpdateManyMutationInput;
  where: PurchaseOrderScalarWhereInput;
};

export type PurchaseOrderUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutStoreInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<PurchaseOrderUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<PurchaseOrderUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<PurchaseOrderUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type PurchaseOrderUpdateManyWithoutSupplierNestedInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutSupplierInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutSupplierInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManySupplierInputEnvelope>;
  delete?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput>>;
  updateMany?: InputMaybe<Array<PurchaseOrderUpdateManyWithWhereWithoutSupplierInput>>;
  upsert?: InputMaybe<Array<PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput>>;
};

export type PurchaseOrderUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<PurchaseOrderCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<PurchaseOrderCreateWithoutUserInput>>;
  createMany?: InputMaybe<PurchaseOrderCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<PurchaseOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<PurchaseOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<PurchaseOrderUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<PurchaseOrderUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<PurchaseOrderUpsertWithWhereUniqueWithoutUserInput>>;
};

export type PurchaseOrderUpdateOneWithoutItemsNestedInput = {
  connect?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PurchaseOrderCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<PurchaseOrderCreateWithoutItemsInput>;
  delete?: InputMaybe<PurchaseOrderWhereInput>;
  disconnect?: InputMaybe<PurchaseOrderWhereInput>;
  update?: InputMaybe<PurchaseOrderUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<PurchaseOrderUpsertWithoutItemsInput>;
};

export type PurchaseOrderUpdateToOneWithWhereWithoutItemsInput = {
  data: PurchaseOrderUpdateWithoutItemsInput;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};

export type PurchaseOrderUpdateWithWhereUniqueWithoutStoreInput = {
  data: PurchaseOrderUpdateWithoutStoreInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpdateWithWhereUniqueWithoutSupplierInput = {
  data: PurchaseOrderUpdateWithoutSupplierInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpdateWithWhereUniqueWithoutUserInput = {
  data: PurchaseOrderUpdateWithoutUserInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpdateWithoutItemsInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
};

export type PurchaseOrderUpdateWithoutStoreInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutP_OrderNestedInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  supplier?: InputMaybe<SupplierUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
};

export type PurchaseOrderUpdateWithoutSupplierInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutP_OrderNestedInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
};

export type PurchaseOrderUpdateWithoutUserInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  expected_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutP_OrderNestedInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumPurchaseOrderStatusFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  supplier?: InputMaybe<SupplierUpdateOneRequiredWithoutPurchase_OrdersNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type PurchaseOrderUpsertWithWhereUniqueWithoutStoreInput = {
  create: PurchaseOrderCreateWithoutStoreInput;
  update: PurchaseOrderUpdateWithoutStoreInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpsertWithWhereUniqueWithoutSupplierInput = {
  create: PurchaseOrderCreateWithoutSupplierInput;
  update: PurchaseOrderUpdateWithoutSupplierInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpsertWithWhereUniqueWithoutUserInput = {
  create: PurchaseOrderCreateWithoutUserInput;
  update: PurchaseOrderUpdateWithoutUserInput;
  where: PurchaseOrderWhereUniqueInput;
};

export type PurchaseOrderUpsertWithoutItemsInput = {
  create: PurchaseOrderCreateWithoutItemsInput;
  update: PurchaseOrderUpdateWithoutItemsInput;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};

export type PurchaseOrderWhereInput = {
  AND?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  NOT?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  OR?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  expected_date?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumPurchaseOrderStatusFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  supplier?: InputMaybe<SupplierRelationFilter>;
  supplier_id?: InputMaybe<StringFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type PurchaseOrderWhereUniqueInput = {
  AND?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  NOT?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  OR?: InputMaybe<Array<PurchaseOrderWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  expected_date?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumPurchaseOrderStatusFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  supplier?: InputMaybe<SupplierRelationFilter>;
  supplier_id?: InputMaybe<StringFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type Query = {
  __typename?: 'Query';
  address?: Maybe<Address>;
  addresses: Array<Address>;
  aggregateAddress: AggregateAddress;
  aggregateAppVersion: AggregateAppVersion;
  aggregateBusiness: AggregateBusiness;
  aggregateCompositeAdjustment: AggregateCompositeAdjustment;
  aggregateCompositeItem: AggregateCompositeItem;
  aggregateCurrency: AggregateCurrency;
  aggregateCustomer: AggregateCustomer;
  aggregateDailySale: AggregateDailySale;
  aggregateDailySaleAddonItem: AggregateDailySaleAddonItem;
  aggregateDailySaleDetail: AggregateDailySaleDetail;
  aggregateDailySaleItem: AggregateDailySaleItem;
  aggregateDailyStock: AggregateDailyStock;
  aggregateImage: AggregateImage;
  aggregateLocation: AggregateLocation;
  aggregatePaymentAccount: AggregatePaymentAccount;
  aggregatePaymentDetail: AggregatePaymentDetail;
  aggregatePaymentMethod: AggregatePaymentMethod;
  aggregatePermission: AggregatePermission;
  aggregateProduct: AggregateProduct;
  aggregateProductCategory: AggregateProductCategory;
  aggregateProductStock: AggregateProductStock;
  aggregateProductStockItem: AggregateProductStockItem;
  aggregateProductUnit: AggregateProductUnit;
  aggregateProductVariant: AggregateProductVariant;
  aggregateProductVariantAttribute: AggregateProductVariantAttribute;
  aggregatePurchaseOrder: AggregatePurchaseOrder;
  aggregateRole: AggregateRole;
  aggregateSale: AggregateSale;
  aggregateSaleAddon: AggregateSaleAddon;
  aggregateSaleAddonItem: AggregateSaleAddonItem;
  aggregateSaleChannel: AggregateSaleChannel;
  aggregateSaleItem: AggregateSaleItem;
  aggregateSaleItemStock: AggregateSaleItemStock;
  aggregateSequenceData: AggregateSequenceData;
  aggregateStockAdjustment: AggregateStockAdjustment;
  aggregateStockHistory: AggregateStockHistory;
  aggregateStockTransaction: AggregateStockTransaction;
  aggregateStockTransactionItem: AggregateStockTransactionItem;
  aggregateStore: AggregateStore;
  aggregateSupplier: AggregateSupplier;
  aggregateSystemData: AggregateSystemData;
  aggregateSystemLog: AggregateSystemLog;
  aggregateTaxSetting: AggregateTaxSetting;
  aggregateTransferOrder: AggregateTransferOrder;
  aggregateUser: AggregateUser;
  appVersion?: Maybe<AppVersion>;
  appVersions: Array<AppVersion>;
  business?: Maybe<Business>;
  businesses: Array<Business>;
  compositeAdjustment?: Maybe<CompositeAdjustment>;
  compositeAdjustments: Array<CompositeAdjustment>;
  compositeItem?: Maybe<CompositeItem>;
  compositeItems: Array<CompositeItem>;
  currencies: Array<Currency>;
  currency?: Maybe<Currency>;
  customer?: Maybe<Customer>;
  customers: Array<Customer>;
  dailySale?: Maybe<DailySale>;
  dailySaleAddonItem?: Maybe<DailySaleAddonItem>;
  dailySaleAddonItems: Array<DailySaleAddonItem>;
  dailySaleDetail?: Maybe<DailySaleDetail>;
  dailySaleDetails: Array<DailySaleDetail>;
  dailySaleItem?: Maybe<DailySaleItem>;
  dailySaleItems: Array<DailySaleItem>;
  dailySales: Array<DailySale>;
  dailyStock?: Maybe<DailyStock>;
  dailyStocks: Array<DailyStock>;
  findFirstAddress?: Maybe<Address>;
  findFirstAddressOrThrow?: Maybe<Address>;
  findFirstAppVersion?: Maybe<AppVersion>;
  findFirstAppVersionOrThrow?: Maybe<AppVersion>;
  findFirstBusiness?: Maybe<Business>;
  findFirstBusinessOrThrow?: Maybe<Business>;
  findFirstCompositeAdjustment?: Maybe<CompositeAdjustment>;
  findFirstCompositeAdjustmentOrThrow?: Maybe<CompositeAdjustment>;
  findFirstCompositeItem?: Maybe<CompositeItem>;
  findFirstCompositeItemOrThrow?: Maybe<CompositeItem>;
  findFirstCurrency?: Maybe<Currency>;
  findFirstCurrencyOrThrow?: Maybe<Currency>;
  findFirstCustomer?: Maybe<Customer>;
  findFirstCustomerOrThrow?: Maybe<Customer>;
  findFirstDailySale?: Maybe<DailySale>;
  findFirstDailySaleAddonItem?: Maybe<DailySaleAddonItem>;
  findFirstDailySaleAddonItemOrThrow?: Maybe<DailySaleAddonItem>;
  findFirstDailySaleDetail?: Maybe<DailySaleDetail>;
  findFirstDailySaleDetailOrThrow?: Maybe<DailySaleDetail>;
  findFirstDailySaleItem?: Maybe<DailySaleItem>;
  findFirstDailySaleItemOrThrow?: Maybe<DailySaleItem>;
  findFirstDailySaleOrThrow?: Maybe<DailySale>;
  findFirstDailyStock?: Maybe<DailyStock>;
  findFirstDailyStockOrThrow?: Maybe<DailyStock>;
  findFirstImage?: Maybe<Image>;
  findFirstImageOrThrow?: Maybe<Image>;
  findFirstLocation?: Maybe<Location>;
  findFirstLocationOrThrow?: Maybe<Location>;
  findFirstPaymentAccount?: Maybe<PaymentAccount>;
  findFirstPaymentAccountOrThrow?: Maybe<PaymentAccount>;
  findFirstPaymentDetail?: Maybe<PaymentDetail>;
  findFirstPaymentDetailOrThrow?: Maybe<PaymentDetail>;
  findFirstPaymentMethod?: Maybe<PaymentMethod>;
  findFirstPaymentMethodOrThrow?: Maybe<PaymentMethod>;
  findFirstPermission?: Maybe<Permission>;
  findFirstPermissionOrThrow?: Maybe<Permission>;
  findFirstProduct?: Maybe<Product>;
  findFirstProductCategory?: Maybe<ProductCategory>;
  findFirstProductCategoryOrThrow?: Maybe<ProductCategory>;
  findFirstProductOrThrow?: Maybe<Product>;
  findFirstProductStock?: Maybe<ProductStock>;
  findFirstProductStockItem?: Maybe<ProductStockItem>;
  findFirstProductStockItemOrThrow?: Maybe<ProductStockItem>;
  findFirstProductStockOrThrow?: Maybe<ProductStock>;
  findFirstProductUnit?: Maybe<ProductUnit>;
  findFirstProductUnitOrThrow?: Maybe<ProductUnit>;
  findFirstProductVariant?: Maybe<ProductVariant>;
  findFirstProductVariantAttribute?: Maybe<ProductVariantAttribute>;
  findFirstProductVariantAttributeOrThrow?: Maybe<ProductVariantAttribute>;
  findFirstProductVariantOrThrow?: Maybe<ProductVariant>;
  findFirstPurchaseOrder?: Maybe<PurchaseOrder>;
  findFirstPurchaseOrderOrThrow?: Maybe<PurchaseOrder>;
  findFirstRole?: Maybe<Role>;
  findFirstRoleOrThrow?: Maybe<Role>;
  findFirstSale?: Maybe<Sale>;
  findFirstSaleAddon?: Maybe<SaleAddon>;
  findFirstSaleAddonItem?: Maybe<SaleAddonItem>;
  findFirstSaleAddonItemOrThrow?: Maybe<SaleAddonItem>;
  findFirstSaleAddonOrThrow?: Maybe<SaleAddon>;
  findFirstSaleChannel?: Maybe<SaleChannel>;
  findFirstSaleChannelOrThrow?: Maybe<SaleChannel>;
  findFirstSaleItem?: Maybe<SaleItem>;
  findFirstSaleItemOrThrow?: Maybe<SaleItem>;
  findFirstSaleItemStock?: Maybe<SaleItemStock>;
  findFirstSaleItemStockOrThrow?: Maybe<SaleItemStock>;
  findFirstSaleOrThrow?: Maybe<Sale>;
  findFirstSequenceData?: Maybe<SequenceData>;
  findFirstSequenceDataOrThrow?: Maybe<SequenceData>;
  findFirstStockAdjustment?: Maybe<StockAdjustment>;
  findFirstStockAdjustmentOrThrow?: Maybe<StockAdjustment>;
  findFirstStockHistory?: Maybe<StockHistory>;
  findFirstStockHistoryOrThrow?: Maybe<StockHistory>;
  findFirstStockTransaction?: Maybe<StockTransaction>;
  findFirstStockTransactionItem?: Maybe<StockTransactionItem>;
  findFirstStockTransactionItemOrThrow?: Maybe<StockTransactionItem>;
  findFirstStockTransactionOrThrow?: Maybe<StockTransaction>;
  findFirstStore?: Maybe<Store>;
  findFirstStoreOrThrow?: Maybe<Store>;
  findFirstSupplier?: Maybe<Supplier>;
  findFirstSupplierOrThrow?: Maybe<Supplier>;
  findFirstSystemData?: Maybe<SystemData>;
  findFirstSystemDataOrThrow?: Maybe<SystemData>;
  findFirstSystemLog?: Maybe<SystemLog>;
  findFirstSystemLogOrThrow?: Maybe<SystemLog>;
  findFirstTaxSetting?: Maybe<TaxSetting>;
  findFirstTaxSettingOrThrow?: Maybe<TaxSetting>;
  findFirstTransferOrder?: Maybe<TransferOrder>;
  findFirstTransferOrderOrThrow?: Maybe<TransferOrder>;
  findFirstUser?: Maybe<User>;
  findFirstUserOrThrow?: Maybe<User>;
  findManySequenceData: Array<SequenceData>;
  findManySystemData: Array<SystemData>;
  findUniqueSequenceData?: Maybe<SequenceData>;
  findUniqueSequenceDataOrThrow?: Maybe<SequenceData>;
  findUniqueSystemData?: Maybe<SystemData>;
  findUniqueSystemDataOrThrow?: Maybe<SystemData>;
  getAddress?: Maybe<Address>;
  getApp?: Maybe<Scalars['String']['output']>;
  getAppVersion?: Maybe<AppVersion>;
  getBusiness?: Maybe<Business>;
  getCompositeAdjustment?: Maybe<CompositeAdjustment>;
  getCompositeItem?: Maybe<CompositeItem>;
  getCurrency?: Maybe<Currency>;
  getCustomer?: Maybe<Customer>;
  getDailySale?: Maybe<DailySale>;
  getDailySaleAddonItem?: Maybe<DailySaleAddonItem>;
  getDailySaleDetail?: Maybe<DailySaleDetail>;
  getDailySaleItem?: Maybe<DailySaleItem>;
  getDailyStock?: Maybe<DailyStock>;
  getImage?: Maybe<Image>;
  getInventorySummary?: Maybe<Array<InventorySummaryResult>>;
  getInventoryValuation?: Maybe<Array<InventoryValuationResult>>;
  getInventoryValuationSummary?: Maybe<Array<InventoryValuationSummaryResult>>;
  getLocation?: Maybe<Location>;
  getPaymentAccount?: Maybe<PaymentAccount>;
  getPaymentDetail?: Maybe<PaymentDetail>;
  getPaymentMethod?: Maybe<PaymentMethod>;
  getPermission?: Maybe<Permission>;
  getProduct?: Maybe<Product>;
  getProductCategory?: Maybe<ProductCategory>;
  getProductStock?: Maybe<ProductStock>;
  getProductStockItem?: Maybe<ProductStockItem>;
  getProductUnit?: Maybe<ProductUnit>;
  getProductVariant?: Maybe<ProductVariant>;
  getProductVariantAttribute?: Maybe<ProductVariantAttribute>;
  getPurchaseOrder?: Maybe<PurchaseOrder>;
  getRole?: Maybe<Role>;
  getSale?: Maybe<Sale>;
  getSaleAddon?: Maybe<SaleAddon>;
  getSaleAddonItem?: Maybe<SaleAddonItem>;
  getSaleAddonSummary?: Maybe<SaleAddonResult>;
  getSaleChannel?: Maybe<SaleChannel>;
  getSaleDetailSummary?: Maybe<SaleDetailResult>;
  getSaleItem?: Maybe<SaleItem>;
  getSaleItemStock?: Maybe<SaleItemStock>;
  getSaleSummary?: Maybe<SaleSummaryResult>;
  getStockAdjustment?: Maybe<StockAdjustment>;
  getStockHistory?: Maybe<StockHistory>;
  getStockSummary?: Maybe<Array<StockSummaryResult>>;
  getStockTransaction?: Maybe<StockTransaction>;
  getStockTransactionItem?: Maybe<StockTransactionItem>;
  getStore?: Maybe<Store>;
  getStoreInventoryReport?: Maybe<Array<StoreInventoryResult>>;
  getSupplier?: Maybe<Supplier>;
  getSystemLog?: Maybe<SystemLog>;
  getTaxSetting?: Maybe<TaxSetting>;
  getTransferOrder?: Maybe<TransferOrder>;
  getUser?: Maybe<User>;
  greeting: Scalars['String']['output'];
  groupByAddress: Array<AddressGroupBy>;
  groupByAppVersion: Array<AppVersionGroupBy>;
  groupByBusiness: Array<BusinessGroupBy>;
  groupByCompositeAdjustment: Array<CompositeAdjustmentGroupBy>;
  groupByCompositeItem: Array<CompositeItemGroupBy>;
  groupByCurrency: Array<CurrencyGroupBy>;
  groupByCustomer: Array<CustomerGroupBy>;
  groupByDailySale: Array<DailySaleGroupBy>;
  groupByDailySaleAddonItem: Array<DailySaleAddonItemGroupBy>;
  groupByDailySaleDetail: Array<DailySaleDetailGroupBy>;
  groupByDailySaleItem: Array<DailySaleItemGroupBy>;
  groupByDailyStock: Array<DailyStockGroupBy>;
  groupByImage: Array<ImageGroupBy>;
  groupByLocation: Array<LocationGroupBy>;
  groupByPaymentAccount: Array<PaymentAccountGroupBy>;
  groupByPaymentDetail: Array<PaymentDetailGroupBy>;
  groupByPaymentMethod: Array<PaymentMethodGroupBy>;
  groupByPermission: Array<PermissionGroupBy>;
  groupByProduct: Array<ProductGroupBy>;
  groupByProductCategory: Array<ProductCategoryGroupBy>;
  groupByProductStock: Array<ProductStockGroupBy>;
  groupByProductStockItem: Array<ProductStockItemGroupBy>;
  groupByProductUnit: Array<ProductUnitGroupBy>;
  groupByProductVariant: Array<ProductVariantGroupBy>;
  groupByProductVariantAttribute: Array<ProductVariantAttributeGroupBy>;
  groupByPurchaseOrder: Array<PurchaseOrderGroupBy>;
  groupByRole: Array<RoleGroupBy>;
  groupBySale: Array<SaleGroupBy>;
  groupBySaleAddon: Array<SaleAddonGroupBy>;
  groupBySaleAddonItem: Array<SaleAddonItemGroupBy>;
  groupBySaleChannel: Array<SaleChannelGroupBy>;
  groupBySaleItem: Array<SaleItemGroupBy>;
  groupBySaleItemStock: Array<SaleItemStockGroupBy>;
  groupBySequenceData: Array<SequenceDataGroupBy>;
  groupByStockAdjustment: Array<StockAdjustmentGroupBy>;
  groupByStockHistory: Array<StockHistoryGroupBy>;
  groupByStockTransaction: Array<StockTransactionGroupBy>;
  groupByStockTransactionItem: Array<StockTransactionItemGroupBy>;
  groupByStore: Array<StoreGroupBy>;
  groupBySupplier: Array<SupplierGroupBy>;
  groupBySystemData: Array<SystemDataGroupBy>;
  groupBySystemLog: Array<SystemLogGroupBy>;
  groupByTaxSetting: Array<TaxSettingGroupBy>;
  groupByTransferOrder: Array<TransferOrderGroupBy>;
  groupByUser: Array<UserGroupBy>;
  image?: Maybe<Image>;
  images: Array<Image>;
  location?: Maybe<Location>;
  locations: Array<Location>;
  paymentAccount?: Maybe<PaymentAccount>;
  paymentAccounts: Array<PaymentAccount>;
  paymentDetail?: Maybe<PaymentDetail>;
  paymentDetails: Array<PaymentDetail>;
  paymentMethod?: Maybe<PaymentMethod>;
  paymentMethods: Array<PaymentMethod>;
  permission?: Maybe<Permission>;
  permissions: Array<Permission>;
  product?: Maybe<Product>;
  productCategories: Array<ProductCategory>;
  productCategory?: Maybe<ProductCategory>;
  productStock?: Maybe<ProductStock>;
  productStockItem?: Maybe<ProductStockItem>;
  productStockItems: Array<ProductStockItem>;
  productStocks: Array<ProductStock>;
  productUnit?: Maybe<ProductUnit>;
  productUnits: Array<ProductUnit>;
  productVariant?: Maybe<ProductVariant>;
  productVariantAttribute?: Maybe<ProductVariantAttribute>;
  productVariantAttributes: Array<ProductVariantAttribute>;
  productVariants: Array<ProductVariant>;
  products: Array<Product>;
  purchaseOrder?: Maybe<PurchaseOrder>;
  purchaseOrders: Array<PurchaseOrder>;
  role?: Maybe<Role>;
  roles: Array<Role>;
  sale?: Maybe<Sale>;
  saleAddon?: Maybe<SaleAddon>;
  saleAddonItem?: Maybe<SaleAddonItem>;
  saleAddonItems: Array<SaleAddonItem>;
  saleAddons: Array<SaleAddon>;
  saleChannel?: Maybe<SaleChannel>;
  saleChannels: Array<SaleChannel>;
  saleItem?: Maybe<SaleItem>;
  saleItemStock?: Maybe<SaleItemStock>;
  saleItemStocks: Array<SaleItemStock>;
  saleItems: Array<SaleItem>;
  sales: Array<Sale>;
  stockAdjustment?: Maybe<StockAdjustment>;
  stockAdjustments: Array<StockAdjustment>;
  stockHistories: Array<StockHistory>;
  stockHistory?: Maybe<StockHistory>;
  stockTransaction?: Maybe<StockTransaction>;
  stockTransactionItem?: Maybe<StockTransactionItem>;
  stockTransactionItems: Array<StockTransactionItem>;
  stockTransactions: Array<StockTransaction>;
  store?: Maybe<Store>;
  stores: Array<Store>;
  supplier?: Maybe<Supplier>;
  suppliers: Array<Supplier>;
  systemLog?: Maybe<SystemLog>;
  systemLogs: Array<SystemLog>;
  taxSetting?: Maybe<TaxSetting>;
  taxSettings: Array<TaxSetting>;
  transferOrder?: Maybe<TransferOrder>;
  transferOrders: Array<TransferOrder>;
  user?: Maybe<User>;
  users: Array<User>;
};


export type QueryAddressArgs = {
  where: AddressWhereUniqueInput;
};


export type QueryAddressesArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type QueryAggregateAddressArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type QueryAggregateAppVersionArgs = {
  cursor?: InputMaybe<AppVersionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<AppVersionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type QueryAggregateBusinessArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryAggregateCompositeAdjustmentArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type QueryAggregateCompositeItemArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type QueryAggregateCurrencyArgs = {
  cursor?: InputMaybe<CurrencyWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CurrencyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type QueryAggregateCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryAggregateDailySaleArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type QueryAggregateDailySaleAddonItemArgs = {
  cursor?: InputMaybe<DailySaleAddonItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type QueryAggregateDailySaleDetailArgs = {
  cursor?: InputMaybe<DailySaleDetailWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type QueryAggregateDailySaleItemArgs = {
  cursor?: InputMaybe<DailySaleItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type QueryAggregateDailyStockArgs = {
  cursor?: InputMaybe<DailyStockWhereUniqueInput>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type QueryAggregateImageArgs = {
  cursor?: InputMaybe<ImageWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ImageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type QueryAggregateLocationArgs = {
  cursor?: InputMaybe<LocationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type QueryAggregatePaymentAccountArgs = {
  cursor?: InputMaybe<PaymentAccountWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type QueryAggregatePaymentDetailArgs = {
  cursor?: InputMaybe<PaymentDetailWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type QueryAggregatePaymentMethodArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type QueryAggregatePermissionArgs = {
  cursor?: InputMaybe<PermissionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type QueryAggregateProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryAggregateProductCategoryArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type QueryAggregateProductStockArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type QueryAggregateProductStockItemArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type QueryAggregateProductUnitArgs = {
  cursor?: InputMaybe<ProductUnitWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type QueryAggregateProductVariantArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type QueryAggregateProductVariantAttributeArgs = {
  cursor?: InputMaybe<ProductVariantAttributeWhereUniqueInput>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type QueryAggregatePurchaseOrderArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type QueryAggregateRoleArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QueryAggregateSaleArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type QueryAggregateSaleAddonArgs = {
  cursor?: InputMaybe<SaleAddonWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type QueryAggregateSaleAddonItemArgs = {
  cursor?: InputMaybe<SaleAddonItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type QueryAggregateSaleChannelArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type QueryAggregateSaleItemArgs = {
  cursor?: InputMaybe<SaleItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type QueryAggregateSaleItemStockArgs = {
  cursor?: InputMaybe<SaleItemStockWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type QueryAggregateSequenceDataArgs = {
  cursor?: InputMaybe<SequenceDataWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SequenceDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type QueryAggregateStockAdjustmentArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type QueryAggregateStockHistoryArgs = {
  cursor?: InputMaybe<StockHistoryWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type QueryAggregateStockTransactionArgs = {
  cursor?: InputMaybe<StockTransactionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type QueryAggregateStockTransactionItemArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type QueryAggregateStoreArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type QueryAggregateSupplierArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type QueryAggregateSystemDataArgs = {
  cursor?: InputMaybe<SystemDataWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SystemDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type QueryAggregateSystemLogArgs = {
  cursor?: InputMaybe<SystemLogWhereUniqueInput>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type QueryAggregateTaxSettingArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type QueryAggregateTransferOrderArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type QueryAggregateUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryAppVersionArgs = {
  where: AppVersionWhereUniqueInput;
};


export type QueryAppVersionsArgs = {
  cursor?: InputMaybe<AppVersionWhereUniqueInput>;
  distinct?: InputMaybe<Array<AppVersionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AppVersionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type QueryBusinessArgs = {
  where: BusinessWhereUniqueInput;
};


export type QueryBusinessesArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryCompositeAdjustmentArgs = {
  where: CompositeAdjustmentWhereUniqueInput;
};


export type QueryCompositeAdjustmentsArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type QueryCompositeItemArgs = {
  where: CompositeItemWhereUniqueInput;
};


export type QueryCompositeItemsArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type QueryCurrenciesArgs = {
  cursor?: InputMaybe<CurrencyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CurrencyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CurrencyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type QueryCurrencyArgs = {
  where: CurrencyWhereUniqueInput;
};


export type QueryCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type QueryCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryDailySaleArgs = {
  where: DailySaleWhereUniqueInput;
};


export type QueryDailySaleAddonItemArgs = {
  where: DailySaleAddonItemWhereUniqueInput;
};


export type QueryDailySaleAddonItemsArgs = {
  cursor?: InputMaybe<DailySaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type QueryDailySaleDetailArgs = {
  where: DailySaleDetailWhereUniqueInput;
};


export type QueryDailySaleDetailsArgs = {
  cursor?: InputMaybe<DailySaleDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type QueryDailySaleItemArgs = {
  where: DailySaleItemWhereUniqueInput;
};


export type QueryDailySaleItemsArgs = {
  cursor?: InputMaybe<DailySaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type QueryDailySalesArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type QueryDailyStockArgs = {
  where: DailyStockWhereUniqueInput;
};


export type QueryDailyStocksArgs = {
  cursor?: InputMaybe<DailyStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailyStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type QueryFindFirstAddressArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type QueryFindFirstAddressOrThrowArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type QueryFindFirstAppVersionArgs = {
  cursor?: InputMaybe<AppVersionWhereUniqueInput>;
  distinct?: InputMaybe<Array<AppVersionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AppVersionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type QueryFindFirstAppVersionOrThrowArgs = {
  cursor?: InputMaybe<AppVersionWhereUniqueInput>;
  distinct?: InputMaybe<Array<AppVersionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AppVersionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type QueryFindFirstBusinessArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryFindFirstBusinessOrThrowArgs = {
  cursor?: InputMaybe<BusinessWhereUniqueInput>;
  distinct?: InputMaybe<Array<BusinessScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryFindFirstCompositeAdjustmentArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type QueryFindFirstCompositeAdjustmentOrThrowArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type QueryFindFirstCompositeItemArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type QueryFindFirstCompositeItemOrThrowArgs = {
  cursor?: InputMaybe<CompositeItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type QueryFindFirstCurrencyArgs = {
  cursor?: InputMaybe<CurrencyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CurrencyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CurrencyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type QueryFindFirstCurrencyOrThrowArgs = {
  cursor?: InputMaybe<CurrencyWhereUniqueInput>;
  distinct?: InputMaybe<Array<CurrencyScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CurrencyOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type QueryFindFirstCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindFirstCustomerOrThrowArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<CustomerScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindFirstDailySaleArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type QueryFindFirstDailySaleAddonItemArgs = {
  cursor?: InputMaybe<DailySaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type QueryFindFirstDailySaleAddonItemOrThrowArgs = {
  cursor?: InputMaybe<DailySaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type QueryFindFirstDailySaleDetailArgs = {
  cursor?: InputMaybe<DailySaleDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type QueryFindFirstDailySaleDetailOrThrowArgs = {
  cursor?: InputMaybe<DailySaleDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type QueryFindFirstDailySaleItemArgs = {
  cursor?: InputMaybe<DailySaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type QueryFindFirstDailySaleItemOrThrowArgs = {
  cursor?: InputMaybe<DailySaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type QueryFindFirstDailySaleOrThrowArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type QueryFindFirstDailyStockArgs = {
  cursor?: InputMaybe<DailyStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailyStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type QueryFindFirstDailyStockOrThrowArgs = {
  cursor?: InputMaybe<DailyStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailyStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type QueryFindFirstImageArgs = {
  cursor?: InputMaybe<ImageWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type QueryFindFirstImageOrThrowArgs = {
  cursor?: InputMaybe<ImageWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type QueryFindFirstLocationArgs = {
  cursor?: InputMaybe<LocationWhereUniqueInput>;
  distinct?: InputMaybe<Array<LocationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type QueryFindFirstLocationOrThrowArgs = {
  cursor?: InputMaybe<LocationWhereUniqueInput>;
  distinct?: InputMaybe<Array<LocationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type QueryFindFirstPaymentAccountArgs = {
  cursor?: InputMaybe<PaymentAccountWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentAccountScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type QueryFindFirstPaymentAccountOrThrowArgs = {
  cursor?: InputMaybe<PaymentAccountWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentAccountScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type QueryFindFirstPaymentDetailArgs = {
  cursor?: InputMaybe<PaymentDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type QueryFindFirstPaymentDetailOrThrowArgs = {
  cursor?: InputMaybe<PaymentDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type QueryFindFirstPaymentMethodArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentMethodScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type QueryFindFirstPaymentMethodOrThrowArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentMethodScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type QueryFindFirstPermissionArgs = {
  cursor?: InputMaybe<PermissionWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type QueryFindFirstPermissionOrThrowArgs = {
  cursor?: InputMaybe<PermissionWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type QueryFindFirstProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindFirstProductCategoryArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type QueryFindFirstProductCategoryOrThrowArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type QueryFindFirstProductOrThrowArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindFirstProductStockArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type QueryFindFirstProductStockItemArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type QueryFindFirstProductStockItemOrThrowArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type QueryFindFirstProductStockOrThrowArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type QueryFindFirstProductUnitArgs = {
  cursor?: InputMaybe<ProductUnitWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductUnitScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type QueryFindFirstProductUnitOrThrowArgs = {
  cursor?: InputMaybe<ProductUnitWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductUnitScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type QueryFindFirstProductVariantArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type QueryFindFirstProductVariantAttributeArgs = {
  cursor?: InputMaybe<ProductVariantAttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantAttributeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type QueryFindFirstProductVariantAttributeOrThrowArgs = {
  cursor?: InputMaybe<ProductVariantAttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantAttributeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type QueryFindFirstProductVariantOrThrowArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type QueryFindFirstPurchaseOrderArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type QueryFindFirstPurchaseOrderOrThrowArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type QueryFindFirstRoleArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QueryFindFirstRoleOrThrowArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QueryFindFirstSaleArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type QueryFindFirstSaleAddonArgs = {
  cursor?: InputMaybe<SaleAddonWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type QueryFindFirstSaleAddonItemArgs = {
  cursor?: InputMaybe<SaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type QueryFindFirstSaleAddonItemOrThrowArgs = {
  cursor?: InputMaybe<SaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type QueryFindFirstSaleAddonOrThrowArgs = {
  cursor?: InputMaybe<SaleAddonWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type QueryFindFirstSaleChannelArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type QueryFindFirstSaleChannelOrThrowArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type QueryFindFirstSaleItemArgs = {
  cursor?: InputMaybe<SaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type QueryFindFirstSaleItemOrThrowArgs = {
  cursor?: InputMaybe<SaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type QueryFindFirstSaleItemStockArgs = {
  cursor?: InputMaybe<SaleItemStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type QueryFindFirstSaleItemStockOrThrowArgs = {
  cursor?: InputMaybe<SaleItemStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type QueryFindFirstSaleOrThrowArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type QueryFindFirstSequenceDataArgs = {
  cursor?: InputMaybe<SequenceDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SequenceDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SequenceDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type QueryFindFirstSequenceDataOrThrowArgs = {
  cursor?: InputMaybe<SequenceDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SequenceDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SequenceDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type QueryFindFirstStockAdjustmentArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type QueryFindFirstStockAdjustmentOrThrowArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type QueryFindFirstStockHistoryArgs = {
  cursor?: InputMaybe<StockHistoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockHistoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type QueryFindFirstStockHistoryOrThrowArgs = {
  cursor?: InputMaybe<StockHistoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockHistoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type QueryFindFirstStockTransactionArgs = {
  cursor?: InputMaybe<StockTransactionWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type QueryFindFirstStockTransactionItemArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type QueryFindFirstStockTransactionItemOrThrowArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type QueryFindFirstStockTransactionOrThrowArgs = {
  cursor?: InputMaybe<StockTransactionWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type QueryFindFirstStoreArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type QueryFindFirstStoreOrThrowArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type QueryFindFirstSupplierArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  distinct?: InputMaybe<Array<SupplierScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type QueryFindFirstSupplierOrThrowArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  distinct?: InputMaybe<Array<SupplierScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type QueryFindFirstSystemDataArgs = {
  cursor?: InputMaybe<SystemDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type QueryFindFirstSystemDataOrThrowArgs = {
  cursor?: InputMaybe<SystemDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type QueryFindFirstSystemLogArgs = {
  cursor?: InputMaybe<SystemLogWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemLogScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type QueryFindFirstSystemLogOrThrowArgs = {
  cursor?: InputMaybe<SystemLogWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemLogScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type QueryFindFirstTaxSettingArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TaxSettingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type QueryFindFirstTaxSettingOrThrowArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TaxSettingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type QueryFindFirstTransferOrderArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type QueryFindFirstTransferOrderOrThrowArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type QueryFindFirstUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindFirstUserOrThrowArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindManySequenceDataArgs = {
  cursor?: InputMaybe<SequenceDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SequenceDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SequenceDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type QueryFindManySystemDataArgs = {
  cursor?: InputMaybe<SystemDataWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemDataScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemDataOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type QueryFindUniqueSequenceDataArgs = {
  where: SequenceDataWhereUniqueInput;
};


export type QueryFindUniqueSequenceDataOrThrowArgs = {
  where: SequenceDataWhereUniqueInput;
};


export type QueryFindUniqueSystemDataArgs = {
  where: SystemDataWhereUniqueInput;
};


export type QueryFindUniqueSystemDataOrThrowArgs = {
  where: SystemDataWhereUniqueInput;
};


export type QueryGetAddressArgs = {
  where: AddressWhereUniqueInput;
};


export type QueryGetAppArgs = {
  appId: Scalars['String']['input'];
};


export type QueryGetAppVersionArgs = {
  where: AppVersionWhereUniqueInput;
};


export type QueryGetBusinessArgs = {
  where: BusinessWhereUniqueInput;
};


export type QueryGetCompositeAdjustmentArgs = {
  where: CompositeAdjustmentWhereUniqueInput;
};


export type QueryGetCompositeItemArgs = {
  where: CompositeItemWhereUniqueInput;
};


export type QueryGetCurrencyArgs = {
  where: CurrencyWhereUniqueInput;
};


export type QueryGetCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type QueryGetDailySaleArgs = {
  where: DailySaleWhereUniqueInput;
};


export type QueryGetDailySaleAddonItemArgs = {
  where: DailySaleAddonItemWhereUniqueInput;
};


export type QueryGetDailySaleDetailArgs = {
  where: DailySaleDetailWhereUniqueInput;
};


export type QueryGetDailySaleItemArgs = {
  where: DailySaleItemWhereUniqueInput;
};


export type QueryGetDailyStockArgs = {
  where: DailyStockWhereUniqueInput;
};


export type QueryGetImageArgs = {
  where: ImageWhereUniqueInput;
};


export type QueryGetInventorySummaryArgs = {
  fromDate: Scalars['DateTime']['input'];
  skip: Scalars['Int']['input'];
  stores: Array<Scalars['String']['input']>;
  take: Scalars['Int']['input'];
  toDate: Scalars['DateTime']['input'];
  where: ProductWhereInput;
};


export type QueryGetInventoryValuationArgs = {
  fromDate: Scalars['DateTime']['input'];
  stores: Array<Scalars['String']['input']>;
  toDate: Scalars['DateTime']['input'];
  where: ProductWhereUniqueInput;
};


export type QueryGetInventoryValuationSummaryArgs = {
  skip: Scalars['Int']['input'];
  stores: Array<Scalars['String']['input']>;
  take: Scalars['Int']['input'];
  toDate: Scalars['DateTime']['input'];
  where: ProductWhereInput;
};


export type QueryGetLocationArgs = {
  where: LocationWhereUniqueInput;
};


export type QueryGetPaymentAccountArgs = {
  where: PaymentAccountWhereUniqueInput;
};


export type QueryGetPaymentDetailArgs = {
  where: PaymentDetailWhereUniqueInput;
};


export type QueryGetPaymentMethodArgs = {
  where: PaymentMethodWhereUniqueInput;
};


export type QueryGetPermissionArgs = {
  where: PermissionWhereUniqueInput;
};


export type QueryGetProductArgs = {
  where: ProductWhereUniqueInput;
};


export type QueryGetProductCategoryArgs = {
  where: ProductCategoryWhereUniqueInput;
};


export type QueryGetProductStockArgs = {
  where: ProductStockWhereUniqueInput;
};


export type QueryGetProductStockItemArgs = {
  where: ProductStockItemWhereUniqueInput;
};


export type QueryGetProductUnitArgs = {
  where: ProductUnitWhereUniqueInput;
};


export type QueryGetProductVariantArgs = {
  where: ProductVariantWhereUniqueInput;
};


export type QueryGetProductVariantAttributeArgs = {
  where: ProductVariantAttributeWhereUniqueInput;
};


export type QueryGetPurchaseOrderArgs = {
  where: PurchaseOrderWhereUniqueInput;
};


export type QueryGetRoleArgs = {
  where: RoleWhereUniqueInput;
};


export type QueryGetSaleArgs = {
  where: SaleWhereUniqueInput;
};


export type QueryGetSaleAddonArgs = {
  where: SaleAddonWhereUniqueInput;
};


export type QueryGetSaleAddonItemArgs = {
  where: SaleAddonItemWhereUniqueInput;
};


export type QueryGetSaleAddonSummaryArgs = {
  fromDate: Scalars['DateTime']['input'];
  includeDetails: Scalars['Boolean']['input'];
  stores: Array<Scalars['String']['input']>;
  toDate: Scalars['DateTime']['input'];
  types?: InputMaybe<Array<SaleAddonType>>;
};


export type QueryGetSaleChannelArgs = {
  where: SaleChannelWhereUniqueInput;
};


export type QueryGetSaleDetailSummaryArgs = {
  fromDate: Scalars['DateTime']['input'];
  includeDetails: Scalars['Boolean']['input'];
  stores: Array<Scalars['String']['input']>;
  toDate: Scalars['DateTime']['input'];
  types?: InputMaybe<Array<Scalars['String']['input']>>;
};


export type QueryGetSaleItemArgs = {
  where: SaleItemWhereUniqueInput;
};


export type QueryGetSaleItemStockArgs = {
  where: SaleItemStockWhereUniqueInput;
};


export type QueryGetSaleSummaryArgs = {
  fromDate: Scalars['DateTime']['input'];
  includeDetails: Scalars['Boolean']['input'];
  stores: Array<Scalars['String']['input']>;
  toDate: Scalars['DateTime']['input'];
};


export type QueryGetStockAdjustmentArgs = {
  where: StockAdjustmentWhereUniqueInput;
};


export type QueryGetStockHistoryArgs = {
  where: StockHistoryWhereUniqueInput;
};


export type QueryGetStockSummaryArgs = {
  fromDate: Scalars['DateTime']['input'];
  skip: Scalars['Int']['input'];
  stores: Array<Scalars['String']['input']>;
  take: Scalars['Int']['input'];
  toDate: Scalars['DateTime']['input'];
  where: ProductWhereInput;
};


export type QueryGetStockTransactionArgs = {
  where: StockTransactionWhereUniqueInput;
};


export type QueryGetStockTransactionItemArgs = {
  where: StockTransactionItemWhereUniqueInput;
};


export type QueryGetStoreArgs = {
  where: StoreWhereUniqueInput;
};


export type QueryGetStoreInventoryReportArgs = {
  skip: Scalars['Int']['input'];
  stores: Array<Scalars['String']['input']>;
  take: Scalars['Int']['input'];
  toDate: Scalars['DateTime']['input'];
  where: ProductWhereInput;
};


export type QueryGetSupplierArgs = {
  where: SupplierWhereUniqueInput;
};


export type QueryGetSystemLogArgs = {
  where: SystemLogWhereUniqueInput;
};


export type QueryGetTaxSettingArgs = {
  where: TaxSettingWhereUniqueInput;
};


export type QueryGetTransferOrderArgs = {
  where: TransferOrderWhereUniqueInput;
};


export type QueryGetUserArgs = {
  where: UserWhereUniqueInput;
};


export type QueryGroupByAddressArgs = {
  by: Array<AddressScalarFieldEnum>;
  having?: InputMaybe<AddressScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AddressOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type QueryGroupByAppVersionArgs = {
  by: Array<AppVersionScalarFieldEnum>;
  having?: InputMaybe<AppVersionScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<AppVersionOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AppVersionWhereInput>;
};


export type QueryGroupByBusinessArgs = {
  by: Array<BusinessScalarFieldEnum>;
  having?: InputMaybe<BusinessScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<BusinessOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<BusinessWhereInput>;
};


export type QueryGroupByCompositeAdjustmentArgs = {
  by: Array<CompositeAdjustmentScalarFieldEnum>;
  having?: InputMaybe<CompositeAdjustmentScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type QueryGroupByCompositeItemArgs = {
  by: Array<CompositeItemScalarFieldEnum>;
  having?: InputMaybe<CompositeItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CompositeItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeItemWhereInput>;
};


export type QueryGroupByCurrencyArgs = {
  by: Array<CurrencyScalarFieldEnum>;
  having?: InputMaybe<CurrencyScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CurrencyOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CurrencyWhereInput>;
};


export type QueryGroupByCustomerArgs = {
  by: Array<CustomerScalarFieldEnum>;
  having?: InputMaybe<CustomerScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryGroupByDailySaleArgs = {
  by: Array<DailySaleScalarFieldEnum>;
  having?: InputMaybe<DailySaleScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type QueryGroupByDailySaleAddonItemArgs = {
  by: Array<DailySaleAddonItemScalarFieldEnum>;
  having?: InputMaybe<DailySaleAddonItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DailySaleAddonItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleAddonItemWhereInput>;
};


export type QueryGroupByDailySaleDetailArgs = {
  by: Array<DailySaleDetailScalarFieldEnum>;
  having?: InputMaybe<DailySaleDetailScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DailySaleDetailOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleDetailWhereInput>;
};


export type QueryGroupByDailySaleItemArgs = {
  by: Array<DailySaleItemScalarFieldEnum>;
  having?: InputMaybe<DailySaleItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DailySaleItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleItemWhereInput>;
};


export type QueryGroupByDailyStockArgs = {
  by: Array<DailyStockScalarFieldEnum>;
  having?: InputMaybe<DailyStockScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<DailyStockOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailyStockWhereInput>;
};


export type QueryGroupByImageArgs = {
  by: Array<ImageScalarFieldEnum>;
  having?: InputMaybe<ImageScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ImageOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type QueryGroupByLocationArgs = {
  by: Array<LocationScalarFieldEnum>;
  having?: InputMaybe<LocationScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<LocationOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type QueryGroupByPaymentAccountArgs = {
  by: Array<PaymentAccountScalarFieldEnum>;
  having?: InputMaybe<PaymentAccountScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type QueryGroupByPaymentDetailArgs = {
  by: Array<PaymentDetailScalarFieldEnum>;
  having?: InputMaybe<PaymentDetailScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type QueryGroupByPaymentMethodArgs = {
  by: Array<PaymentMethodScalarFieldEnum>;
  having?: InputMaybe<PaymentMethodScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type QueryGroupByPermissionArgs = {
  by: Array<PermissionScalarFieldEnum>;
  having?: InputMaybe<PermissionScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type QueryGroupByProductArgs = {
  by: Array<ProductScalarFieldEnum>;
  having?: InputMaybe<ProductScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryGroupByProductCategoryArgs = {
  by: Array<ProductCategoryScalarFieldEnum>;
  having?: InputMaybe<ProductCategoryScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type QueryGroupByProductStockArgs = {
  by: Array<ProductStockScalarFieldEnum>;
  having?: InputMaybe<ProductStockScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type QueryGroupByProductStockItemArgs = {
  by: Array<ProductStockItemScalarFieldEnum>;
  having?: InputMaybe<ProductStockItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type QueryGroupByProductUnitArgs = {
  by: Array<ProductUnitScalarFieldEnum>;
  having?: InputMaybe<ProductUnitScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type QueryGroupByProductVariantArgs = {
  by: Array<ProductVariantScalarFieldEnum>;
  having?: InputMaybe<ProductVariantScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type QueryGroupByProductVariantAttributeArgs = {
  by: Array<ProductVariantAttributeScalarFieldEnum>;
  having?: InputMaybe<ProductVariantAttributeScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type QueryGroupByPurchaseOrderArgs = {
  by: Array<PurchaseOrderScalarFieldEnum>;
  having?: InputMaybe<PurchaseOrderScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type QueryGroupByRoleArgs = {
  by: Array<RoleScalarFieldEnum>;
  having?: InputMaybe<RoleScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<RoleOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QueryGroupBySaleArgs = {
  by: Array<SaleScalarFieldEnum>;
  having?: InputMaybe<SaleScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type QueryGroupBySaleAddonArgs = {
  by: Array<SaleAddonScalarFieldEnum>;
  having?: InputMaybe<SaleAddonScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type QueryGroupBySaleAddonItemArgs = {
  by: Array<SaleAddonItemScalarFieldEnum>;
  having?: InputMaybe<SaleAddonItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type QueryGroupBySaleChannelArgs = {
  by: Array<SaleChannelScalarFieldEnum>;
  having?: InputMaybe<SaleChannelScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type QueryGroupBySaleItemArgs = {
  by: Array<SaleItemScalarFieldEnum>;
  having?: InputMaybe<SaleItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type QueryGroupBySaleItemStockArgs = {
  by: Array<SaleItemStockScalarFieldEnum>;
  having?: InputMaybe<SaleItemStockScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type QueryGroupBySequenceDataArgs = {
  by: Array<SequenceDataScalarFieldEnum>;
  having?: InputMaybe<SequenceDataScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SequenceDataOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SequenceDataWhereInput>;
};


export type QueryGroupByStockAdjustmentArgs = {
  by: Array<StockAdjustmentScalarFieldEnum>;
  having?: InputMaybe<StockAdjustmentScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type QueryGroupByStockHistoryArgs = {
  by: Array<StockHistoryScalarFieldEnum>;
  having?: InputMaybe<StockHistoryScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type QueryGroupByStockTransactionArgs = {
  by: Array<StockTransactionScalarFieldEnum>;
  having?: InputMaybe<StockTransactionScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type QueryGroupByStockTransactionItemArgs = {
  by: Array<StockTransactionItemScalarFieldEnum>;
  having?: InputMaybe<StockTransactionItemScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type QueryGroupByStoreArgs = {
  by: Array<StoreScalarFieldEnum>;
  having?: InputMaybe<StoreScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<StoreOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type QueryGroupBySupplierArgs = {
  by: Array<SupplierScalarFieldEnum>;
  having?: InputMaybe<SupplierScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type QueryGroupBySystemDataArgs = {
  by: Array<SystemDataScalarFieldEnum>;
  having?: InputMaybe<SystemDataScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SystemDataOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemDataWhereInput>;
};


export type QueryGroupBySystemLogArgs = {
  by: Array<SystemLogScalarFieldEnum>;
  having?: InputMaybe<SystemLogScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type QueryGroupByTaxSettingArgs = {
  by: Array<TaxSettingScalarFieldEnum>;
  having?: InputMaybe<TaxSettingScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type QueryGroupByTransferOrderArgs = {
  by: Array<TransferOrderScalarFieldEnum>;
  having?: InputMaybe<TransferOrderScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type QueryGroupByUserArgs = {
  by: Array<UserScalarFieldEnum>;
  having?: InputMaybe<UserScalarWhereWithAggregatesInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithAggregationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryImageArgs = {
  where: ImageWhereUniqueInput;
};


export type QueryImagesArgs = {
  cursor?: InputMaybe<ImageWhereUniqueInput>;
  distinct?: InputMaybe<Array<ImageScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ImageOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ImageWhereInput>;
};


export type QueryLocationArgs = {
  where: LocationWhereUniqueInput;
};


export type QueryLocationsArgs = {
  cursor?: InputMaybe<LocationWhereUniqueInput>;
  distinct?: InputMaybe<Array<LocationScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<LocationWhereInput>;
};


export type QueryPaymentAccountArgs = {
  where: PaymentAccountWhereUniqueInput;
};


export type QueryPaymentAccountsArgs = {
  cursor?: InputMaybe<PaymentAccountWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentAccountScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentAccountOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentAccountWhereInput>;
};


export type QueryPaymentDetailArgs = {
  where: PaymentDetailWhereUniqueInput;
};


export type QueryPaymentDetailsArgs = {
  cursor?: InputMaybe<PaymentDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type QueryPaymentMethodArgs = {
  where: PaymentMethodWhereUniqueInput;
};


export type QueryPaymentMethodsArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentMethodScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type QueryPermissionArgs = {
  where: PermissionWhereUniqueInput;
};


export type QueryPermissionsArgs = {
  cursor?: InputMaybe<PermissionWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type QueryProductArgs = {
  where: ProductWhereUniqueInput;
};


export type QueryProductCategoriesArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type QueryProductCategoryArgs = {
  where: ProductCategoryWhereUniqueInput;
};


export type QueryProductStockArgs = {
  where: ProductStockWhereUniqueInput;
};


export type QueryProductStockItemArgs = {
  where: ProductStockItemWhereUniqueInput;
};


export type QueryProductStockItemsArgs = {
  cursor?: InputMaybe<ProductStockItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockItemWhereInput>;
};


export type QueryProductStocksArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type QueryProductUnitArgs = {
  where: ProductUnitWhereUniqueInput;
};


export type QueryProductUnitsArgs = {
  cursor?: InputMaybe<ProductUnitWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductUnitScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductUnitOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductUnitWhereInput>;
};


export type QueryProductVariantArgs = {
  where: ProductVariantWhereUniqueInput;
};


export type QueryProductVariantAttributeArgs = {
  where: ProductVariantAttributeWhereUniqueInput;
};


export type QueryProductVariantAttributesArgs = {
  cursor?: InputMaybe<ProductVariantAttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantAttributeScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantAttributeOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantAttributeWhereInput>;
};


export type QueryProductVariantsArgs = {
  cursor?: InputMaybe<ProductVariantWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductVariantScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductVariantOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductVariantWhereInput>;
};


export type QueryProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryPurchaseOrderArgs = {
  where: PurchaseOrderWhereUniqueInput;
};


export type QueryPurchaseOrdersArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type QueryRoleArgs = {
  where: RoleWhereUniqueInput;
};


export type QueryRolesArgs = {
  cursor?: InputMaybe<RoleWhereUniqueInput>;
  distinct?: InputMaybe<Array<RoleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<RoleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<RoleWhereInput>;
};


export type QuerySaleArgs = {
  where: SaleWhereUniqueInput;
};


export type QuerySaleAddonArgs = {
  where: SaleAddonWhereUniqueInput;
};


export type QuerySaleAddonItemArgs = {
  where: SaleAddonItemWhereUniqueInput;
};


export type QuerySaleAddonItemsArgs = {
  cursor?: InputMaybe<SaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type QuerySaleAddonsArgs = {
  cursor?: InputMaybe<SaleAddonWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonWhereInput>;
};


export type QuerySaleChannelArgs = {
  where: SaleChannelWhereUniqueInput;
};


export type QuerySaleChannelsArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type QuerySaleItemArgs = {
  where: SaleItemWhereUniqueInput;
};


export type QuerySaleItemStockArgs = {
  where: SaleItemStockWhereUniqueInput;
};


export type QuerySaleItemStocksArgs = {
  cursor?: InputMaybe<SaleItemStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};


export type QuerySaleItemsArgs = {
  cursor?: InputMaybe<SaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type QuerySalesArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type QueryStockAdjustmentArgs = {
  where: StockAdjustmentWhereUniqueInput;
};


export type QueryStockAdjustmentsArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type QueryStockHistoriesArgs = {
  cursor?: InputMaybe<StockHistoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockHistoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockHistoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockHistoryWhereInput>;
};


export type QueryStockHistoryArgs = {
  where: StockHistoryWhereUniqueInput;
};


export type QueryStockTransactionArgs = {
  where: StockTransactionWhereUniqueInput;
};


export type QueryStockTransactionItemArgs = {
  where: StockTransactionItemWhereUniqueInput;
};


export type QueryStockTransactionItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type QueryStockTransactionsArgs = {
  cursor?: InputMaybe<StockTransactionWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionWhereInput>;
};


export type QueryStoreArgs = {
  where: StoreWhereUniqueInput;
};


export type QueryStoresArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type QuerySupplierArgs = {
  where: SupplierWhereUniqueInput;
};


export type QuerySuppliersArgs = {
  cursor?: InputMaybe<SupplierWhereUniqueInput>;
  distinct?: InputMaybe<Array<SupplierScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SupplierOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SupplierWhereInput>;
};


export type QuerySystemLogArgs = {
  where: SystemLogWhereUniqueInput;
};


export type QuerySystemLogsArgs = {
  cursor?: InputMaybe<SystemLogWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemLogScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type QueryTaxSettingArgs = {
  where: TaxSettingWhereUniqueInput;
};


export type QueryTaxSettingsArgs = {
  cursor?: InputMaybe<TaxSettingWhereUniqueInput>;
  distinct?: InputMaybe<Array<TaxSettingScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TaxSettingOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TaxSettingWhereInput>;
};


export type QueryTransferOrderArgs = {
  where: TransferOrderWhereUniqueInput;
};


export type QueryTransferOrdersArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type QueryUserArgs = {
  where: UserWhereUniqueInput;
};


export type QueryUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export type Role = {
  __typename?: 'Role';
  _count?: Maybe<RoleCount>;
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  permissions: Array<Permission>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  users: Array<User>;
};


export type RolePermissionsArgs = {
  cursor?: InputMaybe<PermissionWhereUniqueInput>;
  distinct?: InputMaybe<Array<PermissionScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PermissionOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PermissionWhereInput>;
};


export type RoleUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export type RoleCount = {
  __typename?: 'RoleCount';
  permissions: Scalars['Int']['output'];
  users: Scalars['Int']['output'];
};


export type RoleCountPermissionsArgs = {
  where?: InputMaybe<PermissionWhereInput>;
};


export type RoleCountUsersArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type RoleCountAggregate = {
  __typename?: 'RoleCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_default: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type RoleCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type RoleCreateInput = {
  business: BusinessCreateNestedOneWithoutRolesInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  permissions?: InputMaybe<PermissionCreateNestedManyWithoutRolesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutRoleInput>;
};

export type RoleCreateManyBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RoleCreateManyBusinessInputEnvelope = {
  data: Array<RoleCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type RoleCreateManyInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RoleCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<RoleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<RoleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<RoleCreateManyBusinessInputEnvelope>;
};

export type RoleCreateNestedManyWithoutPermissionsInput = {
  connect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<RoleCreateOrConnectWithoutPermissionsInput>>;
  create?: InputMaybe<Array<RoleCreateWithoutPermissionsInput>>;
};

export type RoleCreateNestedOneWithoutUsersInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<RoleCreateWithoutUsersInput>;
};

export type RoleCreateOrConnectWithoutBusinessInput = {
  create: RoleCreateWithoutBusinessInput;
  where: RoleWhereUniqueInput;
};

export type RoleCreateOrConnectWithoutPermissionsInput = {
  create: RoleCreateWithoutPermissionsInput;
  where: RoleWhereUniqueInput;
};

export type RoleCreateOrConnectWithoutUsersInput = {
  create: RoleCreateWithoutUsersInput;
  where: RoleWhereUniqueInput;
};

export type RoleCreateWithoutBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  permissions?: InputMaybe<PermissionCreateNestedManyWithoutRolesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutRoleInput>;
};

export type RoleCreateWithoutPermissionsInput = {
  business: BusinessCreateNestedOneWithoutRolesInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutRoleInput>;
};

export type RoleCreateWithoutUsersInput = {
  business: BusinessCreateNestedOneWithoutRolesInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  permissions?: InputMaybe<PermissionCreateNestedManyWithoutRolesInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type RoleGroupBy = {
  __typename?: 'RoleGroupBy';
  _count?: Maybe<RoleCountAggregate>;
  _max?: Maybe<RoleMaxAggregate>;
  _min?: Maybe<RoleMinAggregate>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type RoleListRelationFilter = {
  every?: InputMaybe<RoleWhereInput>;
  none?: InputMaybe<RoleWhereInput>;
  some?: InputMaybe<RoleWhereInput>;
};

export type RoleMaxAggregate = {
  __typename?: 'RoleMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_default?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type RoleMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type RoleMinAggregate = {
  __typename?: 'RoleMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_default?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type RoleMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type RoleOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RoleOrderByWithAggregationInput = {
  _count?: InputMaybe<RoleCountOrderByAggregateInput>;
  _max?: InputMaybe<RoleMaxOrderByAggregateInput>;
  _min?: InputMaybe<RoleMinOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type RoleOrderByWithRelationInput = {
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  permissions?: InputMaybe<PermissionOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
  users?: InputMaybe<UserOrderByRelationAggregateInput>;
};

export type RoleRelationFilter = {
  is?: InputMaybe<RoleWhereInput>;
  isNot?: InputMaybe<RoleWhereInput>;
};

export enum RoleScalarFieldEnum {
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  IsDefault = 'is_default',
  Name = 'name',
  UpdatedAt = 'updated_at'
}

export type RoleScalarWhereInput = {
  AND?: InputMaybe<Array<RoleScalarWhereInput>>;
  NOT?: InputMaybe<Array<RoleScalarWhereInput>>;
  OR?: InputMaybe<Array<RoleScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type RoleScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<RoleScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<RoleScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<RoleScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_default?: InputMaybe<BoolWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type RoleUpdateInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutRolesNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  permissions?: InputMaybe<PermissionUpdateManyWithoutRolesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutRoleNestedInput>;
};

export type RoleUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type RoleUpdateManyWithWhereWithoutBusinessInput = {
  data: RoleUpdateManyMutationInput;
  where: RoleScalarWhereInput;
};

export type RoleUpdateManyWithWhereWithoutPermissionsInput = {
  data: RoleUpdateManyMutationInput;
  where: RoleScalarWhereInput;
};

export type RoleUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<RoleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<RoleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<RoleCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<RoleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<RoleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  set?: InputMaybe<Array<RoleWhereUniqueInput>>;
  update?: InputMaybe<Array<RoleUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<RoleUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<RoleUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type RoleUpdateManyWithoutPermissionsNestedInput = {
  connect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<RoleCreateOrConnectWithoutPermissionsInput>>;
  create?: InputMaybe<Array<RoleCreateWithoutPermissionsInput>>;
  delete?: InputMaybe<Array<RoleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<RoleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<RoleWhereUniqueInput>>;
  set?: InputMaybe<Array<RoleWhereUniqueInput>>;
  update?: InputMaybe<Array<RoleUpdateWithWhereUniqueWithoutPermissionsInput>>;
  updateMany?: InputMaybe<Array<RoleUpdateManyWithWhereWithoutPermissionsInput>>;
  upsert?: InputMaybe<Array<RoleUpsertWithWhereUniqueWithoutPermissionsInput>>;
};

export type RoleUpdateOneRequiredWithoutUsersNestedInput = {
  connect?: InputMaybe<RoleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RoleCreateOrConnectWithoutUsersInput>;
  create?: InputMaybe<RoleCreateWithoutUsersInput>;
  update?: InputMaybe<RoleUpdateToOneWithWhereWithoutUsersInput>;
  upsert?: InputMaybe<RoleUpsertWithoutUsersInput>;
};

export type RoleUpdateToOneWithWhereWithoutUsersInput = {
  data: RoleUpdateWithoutUsersInput;
  where?: InputMaybe<RoleWhereInput>;
};

export type RoleUpdateWithWhereUniqueWithoutBusinessInput = {
  data: RoleUpdateWithoutBusinessInput;
  where: RoleWhereUniqueInput;
};

export type RoleUpdateWithWhereUniqueWithoutPermissionsInput = {
  data: RoleUpdateWithoutPermissionsInput;
  where: RoleWhereUniqueInput;
};

export type RoleUpdateWithoutBusinessInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  permissions?: InputMaybe<PermissionUpdateManyWithoutRolesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutRoleNestedInput>;
};

export type RoleUpdateWithoutPermissionsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutRolesNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutRoleNestedInput>;
};

export type RoleUpdateWithoutUsersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutRolesNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  permissions?: InputMaybe<PermissionUpdateManyWithoutRolesNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type RoleUpsertWithWhereUniqueWithoutBusinessInput = {
  create: RoleCreateWithoutBusinessInput;
  update: RoleUpdateWithoutBusinessInput;
  where: RoleWhereUniqueInput;
};

export type RoleUpsertWithWhereUniqueWithoutPermissionsInput = {
  create: RoleCreateWithoutPermissionsInput;
  update: RoleUpdateWithoutPermissionsInput;
  where: RoleWhereUniqueInput;
};

export type RoleUpsertWithoutUsersInput = {
  create: RoleCreateWithoutUsersInput;
  update: RoleUpdateWithoutUsersInput;
  where?: InputMaybe<RoleWhereInput>;
};

export type RoleWhereInput = {
  AND?: InputMaybe<Array<RoleWhereInput>>;
  NOT?: InputMaybe<Array<RoleWhereInput>>;
  OR?: InputMaybe<Array<RoleWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  permissions?: InputMaybe<PermissionListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type RoleWhereUniqueInput = {
  AND?: InputMaybe<Array<RoleWhereInput>>;
  NOT?: InputMaybe<Array<RoleWhereInput>>;
  OR?: InputMaybe<Array<RoleWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  permissions?: InputMaybe<PermissionListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type Sale = {
  __typename?: 'Sale';
  _count?: Maybe<SaleCount>;
  addon_items: Array<SaleAddonItem>;
  business: Business;
  business_id: Scalars['String']['output'];
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  customer?: Maybe<Customer>;
  customer_addr?: Maybe<Address>;
  customer_addr_id?: Maybe<Scalars['String']['output']>;
  customer_id?: Maybe<Scalars['String']['output']>;
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  items: Array<SaleItem>;
  metadata?: Maybe<Scalars['String']['output']>;
  net_amount: Scalars['Decimal']['output'];
  note?: Maybe<Scalars['String']['output']>;
  payment_details: Array<PaymentDetail>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_status: PaymentStatus;
  received_amount: Scalars['Decimal']['output'];
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_no?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  refund_amount: Scalars['Decimal']['output'];
  sale_channel: Scalars['String']['output'];
  sale_date: Scalars['DateTime']['output'];
  sale_number: Scalars['String']['output'];
  sale_status: SaleStatus;
  seller_id?: Maybe<Scalars['String']['output']>;
  seller_name?: Maybe<Scalars['String']['output']>;
  seq: Scalars['Int']['output'];
  shipping_amount: Scalars['Decimal']['output'];
  stocks: Array<SaleItemStock>;
  store: Store;
  store_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type SaleAddon_ItemsArgs = {
  cursor?: InputMaybe<SaleAddonItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleAddonItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleAddonItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type SaleCustomerArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type SaleCustomer_AddrArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type SaleItemsArgs = {
  cursor?: InputMaybe<SaleItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemWhereInput>;
};


export type SalePayment_DetailsArgs = {
  cursor?: InputMaybe<PaymentDetailWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentDetailScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentDetailOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type SaleStocksArgs = {
  cursor?: InputMaybe<SaleItemStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleItemStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleItemStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleItemStockWhereInput>;
};

export type SaleAddon = {
  __typename?: 'SaleAddon';
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_percentage: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  type: SaleAddonType;
  updated_at: Scalars['DateTime']['output'];
  value: Scalars['Decimal']['output'];
};

export type SaleAddonAvgAggregate = {
  __typename?: 'SaleAddonAvgAggregate';
  value?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonAvgOrderByAggregateInput = {
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonCountAggregate = {
  __typename?: 'SaleAddonCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_percentage: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  type: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  value: Scalars['Int']['output'];
};

export type SaleAddonCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonCreateInput = {
  business: BusinessCreateNestedOneWithoutSale_AddonsInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  type: SaleAddonType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  value?: InputMaybe<Scalars['Decimal']['input']>;
};

export type SaleAddonCreateManyBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  type: SaleAddonType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  value?: InputMaybe<Scalars['Decimal']['input']>;
};

export type SaleAddonCreateManyBusinessInputEnvelope = {
  data: Array<SaleAddonCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleAddonCreateManyInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  type: SaleAddonType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  value?: InputMaybe<Scalars['Decimal']['input']>;
};

export type SaleAddonCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<SaleAddonWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleAddonCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleAddonCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleAddonCreateManyBusinessInputEnvelope>;
};

export type SaleAddonCreateOrConnectWithoutBusinessInput = {
  create: SaleAddonCreateWithoutBusinessInput;
  where: SaleAddonWhereUniqueInput;
};

export type SaleAddonCreateWithoutBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  type: SaleAddonType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  value?: InputMaybe<Scalars['Decimal']['input']>;
};

export type SaleAddonGroupBy = {
  __typename?: 'SaleAddonGroupBy';
  _avg?: Maybe<SaleAddonAvgAggregate>;
  _count?: Maybe<SaleAddonCountAggregate>;
  _max?: Maybe<SaleAddonMaxAggregate>;
  _min?: Maybe<SaleAddonMinAggregate>;
  _sum?: Maybe<SaleAddonSumAggregate>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_percentage: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  type: SaleAddonType;
  updated_at: Scalars['DateTime']['output'];
  value: Scalars['Decimal']['output'];
};

export type SaleAddonItem = {
  __typename?: 'SaleAddonItem';
  applicable_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_percentage: Scalars['Boolean']['output'];
  item_id?: Maybe<Scalars['String']['output']>;
  item_name: Scalars['String']['output'];
  item_type: SaleAddonType;
  quantity: Scalars['Int']['output'];
  sale: Sale;
  sale_id: Scalars['String']['output'];
  sale_item_id?: Maybe<Scalars['String']['output']>;
  sale_item_name?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleAddonItemAvgAggregate = {
  __typename?: 'SaleAddonItemAvgAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonItemAvgOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
};

export type SaleAddonItemCountAggregate = {
  __typename?: 'SaleAddonItemCountAggregate';
  _all: Scalars['Int']['output'];
  applicable_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_percentage: Scalars['Int']['output'];
  item_id: Scalars['Int']['output'];
  item_name: Scalars['Int']['output'];
  item_type: Scalars['Int']['output'];
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['Int']['output'];
  sale_item_id: Scalars['Int']['output'];
  sale_item_name: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  unit_price: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SaleAddonItemCountOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  sale_item_name?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleAddonItemCreateInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  item_id?: InputMaybe<Scalars['String']['input']>;
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  sale: SaleCreateNestedOneWithoutAddon_ItemsInput;
  sale_item_id?: InputMaybe<Scalars['String']['input']>;
  sale_item_name?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleAddonItemCreateManyInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  item_id?: InputMaybe<Scalars['String']['input']>;
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  sale_id: Scalars['String']['input'];
  sale_item_id?: InputMaybe<Scalars['String']['input']>;
  sale_item_name?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleAddonItemCreateManySaleInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  item_id?: InputMaybe<Scalars['String']['input']>;
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  sale_item_id?: InputMaybe<Scalars['String']['input']>;
  sale_item_name?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleAddonItemCreateManySaleInputEnvelope = {
  data: Array<SaleAddonItemCreateManySaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleAddonItemCreateNestedManyWithoutSaleInput = {
  connect?: InputMaybe<Array<SaleAddonItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleAddonItemCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleAddonItemCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleAddonItemCreateManySaleInputEnvelope>;
};

export type SaleAddonItemCreateOrConnectWithoutSaleInput = {
  create: SaleAddonItemCreateWithoutSaleInput;
  where: SaleAddonItemWhereUniqueInput;
};

export type SaleAddonItemCreateWithoutSaleInput = {
  applicable_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<Scalars['Boolean']['input']>;
  item_id?: InputMaybe<Scalars['String']['input']>;
  item_name: Scalars['String']['input'];
  item_type: SaleAddonType;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  sale_item_id?: InputMaybe<Scalars['String']['input']>;
  sale_item_name?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleAddonItemGroupBy = {
  __typename?: 'SaleAddonItemGroupBy';
  _avg?: Maybe<SaleAddonItemAvgAggregate>;
  _count?: Maybe<SaleAddonItemCountAggregate>;
  _max?: Maybe<SaleAddonItemMaxAggregate>;
  _min?: Maybe<SaleAddonItemMinAggregate>;
  _sum?: Maybe<SaleAddonItemSumAggregate>;
  applicable_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_percentage: Scalars['Boolean']['output'];
  item_id?: Maybe<Scalars['String']['output']>;
  item_name: Scalars['String']['output'];
  item_type: SaleAddonType;
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['String']['output'];
  sale_item_id?: Maybe<Scalars['String']['output']>;
  sale_item_name?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleAddonItemListRelationFilter = {
  every?: InputMaybe<SaleAddonItemWhereInput>;
  none?: InputMaybe<SaleAddonItemWhereInput>;
  some?: InputMaybe<SaleAddonItemWhereInput>;
};

export type SaleAddonItemMaxAggregate = {
  __typename?: 'SaleAddonItemMaxAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_percentage?: Maybe<Scalars['Boolean']['output']>;
  item_id?: Maybe<Scalars['String']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<SaleAddonType>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  sale_item_id?: Maybe<Scalars['String']['output']>;
  sale_item_name?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleAddonItemMaxOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  sale_item_name?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleAddonItemMinAggregate = {
  __typename?: 'SaleAddonItemMinAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_percentage?: Maybe<Scalars['Boolean']['output']>;
  item_id?: Maybe<Scalars['String']['output']>;
  item_name?: Maybe<Scalars['String']['output']>;
  item_type?: Maybe<SaleAddonType>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  sale_item_id?: Maybe<Scalars['String']['output']>;
  sale_item_name?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleAddonItemMinOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrder>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  sale_item_name?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleAddonItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleAddonItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<SaleAddonItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<SaleAddonItemCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleAddonItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleAddonItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<SaleAddonItemSumOrderByAggregateInput>;
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrderInput>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrderInput>;
  sale_item_name?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleAddonItemOrderByWithRelationInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  item_id?: InputMaybe<SortOrderInput>;
  item_name?: InputMaybe<SortOrder>;
  item_type?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale?: InputMaybe<SaleOrderByWithRelationInput>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrderInput>;
  sale_item_name?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum SaleAddonItemScalarFieldEnum {
  ApplicableAmount = 'applicable_amount',
  CreatedAt = 'created_at',
  Id = 'id',
  IsPercentage = 'is_percentage',
  ItemId = 'item_id',
  ItemName = 'item_name',
  ItemType = 'item_type',
  Quantity = 'quantity',
  SaleId = 'sale_id',
  SaleItemId = 'sale_item_id',
  SaleItemName = 'sale_item_name',
  TotalAmount = 'total_amount',
  UnitPrice = 'unit_price',
  UpdatedAt = 'updated_at'
}

export type SaleAddonItemScalarWhereInput = {
  AND?: InputMaybe<Array<SaleAddonItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonItemScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonItemScalarWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_percentage?: InputMaybe<BoolFilter>;
  item_id?: InputMaybe<StringNullableFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringNullableFilter>;
  sale_item_name?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleAddonItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleAddonItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleAddonItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleAddonItemScalarWhereWithAggregatesInput>>;
  applicable_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_percentage?: InputMaybe<BoolWithAggregatesFilter>;
  item_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  item_name?: InputMaybe<StringWithAggregatesFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  sale_id?: InputMaybe<StringWithAggregatesFilter>;
  sale_item_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  sale_item_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  unit_price?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SaleAddonItemSumAggregate = {
  __typename?: 'SaleAddonItemSumAggregate';
  applicable_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonItemSumOrderByAggregateInput = {
  applicable_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
};

export type SaleAddonItemUpdateInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale?: InputMaybe<SaleUpdateOneRequiredWithoutAddon_ItemsNestedInput>;
  sale_item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sale_item_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleAddonItemUpdateManyMutationInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale_item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sale_item_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleAddonItemUpdateManyWithWhereWithoutSaleInput = {
  data: SaleAddonItemUpdateManyMutationInput;
  where: SaleAddonItemScalarWhereInput;
};

export type SaleAddonItemUpdateManyWithoutSaleNestedInput = {
  connect?: InputMaybe<Array<SaleAddonItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleAddonItemCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleAddonItemCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleAddonItemCreateManySaleInputEnvelope>;
  delete?: InputMaybe<Array<SaleAddonItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleAddonItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleAddonItemWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleAddonItemWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleAddonItemUpdateWithWhereUniqueWithoutSaleInput>>;
  updateMany?: InputMaybe<Array<SaleAddonItemUpdateManyWithWhereWithoutSaleInput>>;
  upsert?: InputMaybe<Array<SaleAddonItemUpsertWithWhereUniqueWithoutSaleInput>>;
};

export type SaleAddonItemUpdateWithWhereUniqueWithoutSaleInput = {
  data: SaleAddonItemUpdateWithoutSaleInput;
  where: SaleAddonItemWhereUniqueInput;
};

export type SaleAddonItemUpdateWithoutSaleInput = {
  applicable_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  item_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  item_type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale_item_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  sale_item_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleAddonItemUpsertWithWhereUniqueWithoutSaleInput = {
  create: SaleAddonItemCreateWithoutSaleInput;
  update: SaleAddonItemUpdateWithoutSaleInput;
  where: SaleAddonItemWhereUniqueInput;
};

export type SaleAddonItemWhereInput = {
  AND?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_percentage?: InputMaybe<BoolFilter>;
  item_id?: InputMaybe<StringNullableFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringNullableFilter>;
  sale_item_name?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleAddonItemWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonItemWhereInput>>;
  applicable_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<BoolFilter>;
  item_id?: InputMaybe<StringNullableFilter>;
  item_name?: InputMaybe<StringFilter>;
  item_type?: InputMaybe<EnumSaleAddonTypeFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringNullableFilter>;
  sale_item_name?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleAddonListRelationFilter = {
  every?: InputMaybe<SaleAddonWhereInput>;
  none?: InputMaybe<SaleAddonWhereInput>;
  some?: InputMaybe<SaleAddonWhereInput>;
};

export type SaleAddonMaxAggregate = {
  __typename?: 'SaleAddonMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_percentage?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<SaleAddonType>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  value?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonMinAggregate = {
  __typename?: 'SaleAddonMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_percentage?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<SaleAddonType>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  value?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleAddonOrderByWithAggregationInput = {
  _avg?: InputMaybe<SaleAddonAvgOrderByAggregateInput>;
  _count?: InputMaybe<SaleAddonCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleAddonMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleAddonMinOrderByAggregateInput>;
  _sum?: InputMaybe<SaleAddonSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonOrderByWithRelationInput = {
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_percentage?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type SaleAddonResult = {
  __typename?: 'SaleAddonResult';
  details: Array<DailySaleAddonItem>;
  summary?: Maybe<Array<DailySaleAddonItem>>;
};

export enum SaleAddonScalarFieldEnum {
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  IsPercentage = 'is_percentage',
  Name = 'name',
  Type = 'type',
  UpdatedAt = 'updated_at',
  Value = 'value'
}

export type SaleAddonScalarWhereInput = {
  AND?: InputMaybe<Array<SaleAddonScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_percentage?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  type?: InputMaybe<EnumSaleAddonTypeFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  value?: InputMaybe<DecimalFilter>;
};

export type SaleAddonScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleAddonScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleAddonScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleAddonScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_percentage?: InputMaybe<BoolWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  type?: InputMaybe<EnumSaleAddonTypeWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  value?: InputMaybe<DecimalWithAggregatesFilter>;
};

export type SaleAddonSumAggregate = {
  __typename?: 'SaleAddonSumAggregate';
  value?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAddonSumOrderByAggregateInput = {
  value?: InputMaybe<SortOrder>;
};

export enum SaleAddonType {
  Charge = 'CHARGE',
  Discount = 'DISCOUNT',
  Modifier = 'MODIFIER',
  Shipping = 'SHIPPING',
  Tax = 'TAX'
}

export type SaleAddonUpdateInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSale_AddonsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type SaleAddonUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type SaleAddonUpdateManyWithWhereWithoutBusinessInput = {
  data: SaleAddonUpdateManyMutationInput;
  where: SaleAddonScalarWhereInput;
};

export type SaleAddonUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<SaleAddonWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleAddonCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleAddonCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleAddonCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<SaleAddonWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleAddonScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleAddonWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleAddonWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleAddonUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<SaleAddonUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<SaleAddonUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type SaleAddonUpdateWithWhereUniqueWithoutBusinessInput = {
  data: SaleAddonUpdateWithoutBusinessInput;
  where: SaleAddonWhereUniqueInput;
};

export type SaleAddonUpdateWithoutBusinessInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_percentage?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  type?: InputMaybe<EnumSaleAddonTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
};

export type SaleAddonUpsertWithWhereUniqueWithoutBusinessInput = {
  create: SaleAddonCreateWithoutBusinessInput;
  update: SaleAddonUpdateWithoutBusinessInput;
  where: SaleAddonWhereUniqueInput;
};

export type SaleAddonWhereInput = {
  AND?: InputMaybe<Array<SaleAddonWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_percentage?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  type?: InputMaybe<EnumSaleAddonTypeFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  value?: InputMaybe<DecimalFilter>;
};

export type SaleAddonWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleAddonWhereInput>>;
  NOT?: InputMaybe<Array<SaleAddonWhereInput>>;
  OR?: InputMaybe<Array<SaleAddonWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_percentage?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  type?: InputMaybe<EnumSaleAddonTypeFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
  value?: InputMaybe<DecimalFilter>;
};

export type SaleAvgAggregate = {
  __typename?: 'SaleAvgAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Float']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleAvgOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type SaleChannel = {
  __typename?: 'SaleChannel';
  _count?: Maybe<SaleChannelCount>;
  active: Scalars['Boolean']['output'];
  business: Business;
  business_id: Scalars['String']['output'];
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  product_categories: Array<ProductCategory>;
  products: Array<Product>;
  store?: Maybe<Store>;
  store_id?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type SaleChannelProduct_CategoriesArgs = {
  cursor?: InputMaybe<ProductCategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductCategoryScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductCategoryOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type SaleChannelProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type SaleChannelStoreArgs = {
  where?: InputMaybe<StoreWhereInput>;
};

export type SaleChannelCodeBusiness_IdCompoundUniqueInput = {
  business_id: Scalars['String']['input'];
  code: Scalars['String']['input'];
};

export type SaleChannelCount = {
  __typename?: 'SaleChannelCount';
  product_categories: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
};


export type SaleChannelCountProduct_CategoriesArgs = {
  where?: InputMaybe<ProductCategoryWhereInput>;
};


export type SaleChannelCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};

export type SaleChannelCountAggregate = {
  __typename?: 'SaleChannelCountAggregate';
  _all: Scalars['Int']['output'];
  active: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_default: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  type: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SaleChannelCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleChannelCreateInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutSale_ChannelsInput;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutSale_ChannelsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSale_ChannelsInput>;
  store?: InputMaybe<StoreCreateNestedOneWithoutSale_ChannelsInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateManyBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  store_id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateManyBusinessInputEnvelope = {
  data: Array<SaleChannelCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleChannelCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  store_id?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateManyStoreInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business_id: Scalars['String']['input'];
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateManyStoreInputEnvelope = {
  data: Array<SaleChannelCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleChannelCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleChannelCreateManyBusinessInputEnvelope>;
};

export type SaleChannelCreateNestedManyWithoutProduct_CategoriesInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutProduct_CategoriesInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutProduct_CategoriesInput>>;
};

export type SaleChannelCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutProductsInput>>;
};

export type SaleChannelCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutStoreInput>>;
  createMany?: InputMaybe<SaleChannelCreateManyStoreInputEnvelope>;
};

export type SaleChannelCreateOrConnectWithoutBusinessInput = {
  create: SaleChannelCreateWithoutBusinessInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelCreateOrConnectWithoutProduct_CategoriesInput = {
  create: SaleChannelCreateWithoutProduct_CategoriesInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelCreateOrConnectWithoutProductsInput = {
  create: SaleChannelCreateWithoutProductsInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelCreateOrConnectWithoutStoreInput = {
  create: SaleChannelCreateWithoutStoreInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelCreateWithoutBusinessInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutSale_ChannelsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSale_ChannelsInput>;
  store?: InputMaybe<StoreCreateNestedOneWithoutSale_ChannelsInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateWithoutProduct_CategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutSale_ChannelsInput;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  products?: InputMaybe<ProductCreateNestedManyWithoutSale_ChannelsInput>;
  store?: InputMaybe<StoreCreateNestedOneWithoutSale_ChannelsInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutSale_ChannelsInput;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutSale_ChannelsInput>;
  store?: InputMaybe<StoreCreateNestedOneWithoutSale_ChannelsInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelCreateWithoutStoreInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  business: BusinessCreateNestedOneWithoutSale_ChannelsInput;
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  product_categories?: InputMaybe<ProductCategoryCreateNestedManyWithoutSale_ChannelsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSale_ChannelsInput>;
  type?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleChannelGroupBy = {
  __typename?: 'SaleChannelGroupBy';
  _count?: Maybe<SaleChannelCountAggregate>;
  _max?: Maybe<SaleChannelMaxAggregate>;
  _min?: Maybe<SaleChannelMinAggregate>;
  active: Scalars['Boolean']['output'];
  business_id: Scalars['String']['output'];
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  is_default: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  store_id?: Maybe<Scalars['String']['output']>;
  type: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleChannelListRelationFilter = {
  every?: InputMaybe<SaleChannelWhereInput>;
  none?: InputMaybe<SaleChannelWhereInput>;
  some?: InputMaybe<SaleChannelWhereInput>;
};

export type SaleChannelMaxAggregate = {
  __typename?: 'SaleChannelMaxAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_default?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleChannelMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleChannelMinAggregate = {
  __typename?: 'SaleChannelMinAggregate';
  active?: Maybe<Scalars['Boolean']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  is_default?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleChannelMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleChannelOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleChannelOrderByWithAggregationInput = {
  _count?: InputMaybe<SaleChannelCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleChannelMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleChannelMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrderInput>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleChannelOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product_categories?: InputMaybe<ProductCategoryOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrderInput>;
  type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum SaleChannelScalarFieldEnum {
  Active = 'active',
  BusinessId = 'business_id',
  Code = 'code',
  CreatedAt = 'created_at',
  Id = 'id',
  IsDefault = 'is_default',
  Name = 'name',
  StoreId = 'store_id',
  Type = 'type',
  UpdatedAt = 'updated_at'
}

export type SaleChannelScalarWhereInput = {
  AND?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  store_id?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleChannelScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleChannelScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleChannelScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleChannelScalarWhereWithAggregatesInput>>;
  active?: InputMaybe<BoolWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  code?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  is_default?: InputMaybe<BoolWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  store_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SaleChannelUpdateInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSale_ChannelsNestedInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutSale_ChannelsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSale_ChannelsNestedInput>;
  store?: InputMaybe<StoreUpdateOneWithoutSale_ChannelsNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpdateManyMutationInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpdateManyWithWhereWithoutBusinessInput = {
  data: SaleChannelUpdateManyMutationInput;
  where: SaleChannelScalarWhereInput;
};

export type SaleChannelUpdateManyWithWhereWithoutProduct_CategoriesInput = {
  data: SaleChannelUpdateManyMutationInput;
  where: SaleChannelScalarWhereInput;
};

export type SaleChannelUpdateManyWithWhereWithoutProductsInput = {
  data: SaleChannelUpdateManyMutationInput;
  where: SaleChannelScalarWhereInput;
};

export type SaleChannelUpdateManyWithWhereWithoutStoreInput = {
  data: SaleChannelUpdateManyMutationInput;
  where: SaleChannelScalarWhereInput;
};

export type SaleChannelUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleChannelCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleChannelUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<SaleChannelUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<SaleChannelUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type SaleChannelUpdateManyWithoutProduct_CategoriesNestedInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutProduct_CategoriesInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutProduct_CategoriesInput>>;
  delete?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleChannelUpdateWithWhereUniqueWithoutProduct_CategoriesInput>>;
  updateMany?: InputMaybe<Array<SaleChannelUpdateManyWithWhereWithoutProduct_CategoriesInput>>;
  upsert?: InputMaybe<Array<SaleChannelUpsertWithWhereUniqueWithoutProduct_CategoriesInput>>;
};

export type SaleChannelUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutProductsInput>>;
  delete?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleChannelUpdateWithWhereUniqueWithoutProductsInput>>;
  updateMany?: InputMaybe<Array<SaleChannelUpdateManyWithWhereWithoutProductsInput>>;
  upsert?: InputMaybe<Array<SaleChannelUpsertWithWhereUniqueWithoutProductsInput>>;
};

export type SaleChannelUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleChannelCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<SaleChannelCreateWithoutStoreInput>>;
  createMany?: InputMaybe<SaleChannelCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleChannelScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleChannelWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleChannelUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<SaleChannelUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<SaleChannelUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type SaleChannelUpdateWithWhereUniqueWithoutBusinessInput = {
  data: SaleChannelUpdateWithoutBusinessInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpdateWithWhereUniqueWithoutProduct_CategoriesInput = {
  data: SaleChannelUpdateWithoutProduct_CategoriesInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpdateWithWhereUniqueWithoutProductsInput = {
  data: SaleChannelUpdateWithoutProductsInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpdateWithWhereUniqueWithoutStoreInput = {
  data: SaleChannelUpdateWithoutStoreInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpdateWithoutBusinessInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutSale_ChannelsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSale_ChannelsNestedInput>;
  store?: InputMaybe<StoreUpdateOneWithoutSale_ChannelsNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpdateWithoutProduct_CategoriesInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSale_ChannelsNestedInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSale_ChannelsNestedInput>;
  store?: InputMaybe<StoreUpdateOneWithoutSale_ChannelsNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpdateWithoutProductsInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSale_ChannelsNestedInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutSale_ChannelsNestedInput>;
  store?: InputMaybe<StoreUpdateOneWithoutSale_ChannelsNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpdateWithoutStoreInput = {
  active?: InputMaybe<BoolFieldUpdateOperationsInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSale_ChannelsNestedInput>;
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_categories?: InputMaybe<ProductCategoryUpdateManyWithoutSale_ChannelsNestedInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSale_ChannelsNestedInput>;
  type?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleChannelUpsertWithWhereUniqueWithoutBusinessInput = {
  create: SaleChannelCreateWithoutBusinessInput;
  update: SaleChannelUpdateWithoutBusinessInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpsertWithWhereUniqueWithoutProduct_CategoriesInput = {
  create: SaleChannelCreateWithoutProduct_CategoriesInput;
  update: SaleChannelUpdateWithoutProduct_CategoriesInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpsertWithWhereUniqueWithoutProductsInput = {
  create: SaleChannelCreateWithoutProductsInput;
  update: SaleChannelUpdateWithoutProductsInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelUpsertWithWhereUniqueWithoutStoreInput = {
  create: SaleChannelCreateWithoutStoreInput;
  update: SaleChannelUpdateWithoutStoreInput;
  where: SaleChannelWhereUniqueInput;
};

export type SaleChannelWhereInput = {
  AND?: InputMaybe<Array<SaleChannelWhereInput>>;
  NOT?: InputMaybe<Array<SaleChannelWhereInput>>;
  OR?: InputMaybe<Array<SaleChannelWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  store?: InputMaybe<StoreNullableRelationFilter>;
  store_id?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleChannelWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleChannelWhereInput>>;
  NOT?: InputMaybe<Array<SaleChannelWhereInput>>;
  OR?: InputMaybe<Array<SaleChannelWhereInput>>;
  active?: InputMaybe<BoolFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringFilter>;
  code_business_id?: InputMaybe<SaleChannelCodeBusiness_IdCompoundUniqueInput>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  product_categories?: InputMaybe<ProductCategoryListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  store?: InputMaybe<StoreNullableRelationFilter>;
  store_id?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleCount = {
  __typename?: 'SaleCount';
  addon_items: Scalars['Int']['output'];
  items: Scalars['Int']['output'];
  payment_details: Scalars['Int']['output'];
  stocks: Scalars['Int']['output'];
};


export type SaleCountAddon_ItemsArgs = {
  where?: InputMaybe<SaleAddonItemWhereInput>;
};


export type SaleCountItemsArgs = {
  where?: InputMaybe<SaleItemWhereInput>;
};


export type SaleCountPayment_DetailsArgs = {
  where?: InputMaybe<PaymentDetailWhereInput>;
};


export type SaleCountStocksArgs = {
  where?: InputMaybe<SaleItemStockWhereInput>;
};

export type SaleCountAggregate = {
  __typename?: 'SaleCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  charge_amount: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  customer_addr_id: Scalars['Int']['output'];
  customer_id: Scalars['Int']['output'];
  discount_amount: Scalars['Int']['output'];
  gross_amount: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  net_amount: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  payment_method: Scalars['Int']['output'];
  payment_method_id: Scalars['Int']['output'];
  payment_status: Scalars['Int']['output'];
  received_amount: Scalars['Int']['output'];
  ref_id: Scalars['Int']['output'];
  ref_no: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  refund_amount: Scalars['Int']['output'];
  sale_channel: Scalars['Int']['output'];
  sale_date: Scalars['Int']['output'];
  sale_number: Scalars['Int']['output'];
  sale_status: Scalars['Int']['output'];
  seller_id: Scalars['Int']['output'];
  seller_name: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  shipping_amount: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  tax_amount: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SaleCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_addr_id?: InputMaybe<SortOrder>;
  customer_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_status?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_no?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_channel?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  sale_number?: InputMaybe<SortOrder>;
  sale_status?: InputMaybe<SortOrder>;
  seller_id?: InputMaybe<SortOrder>;
  seller_name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleCreateInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyBusinessInput = {
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_addr_id?: InputMaybe<Scalars['String']['input']>;
  customer_id?: InputMaybe<Scalars['String']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyBusinessInputEnvelope = {
  data: Array<SaleCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleCreateManyCustomerInput = {
  business_id: Scalars['String']['input'];
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_addr_id?: InputMaybe<Scalars['String']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyCustomerInputEnvelope = {
  data: Array<SaleCreateManyCustomerInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleCreateManyCustomer_AddrInput = {
  business_id: Scalars['String']['input'];
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_id?: InputMaybe<Scalars['String']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyCustomer_AddrInputEnvelope = {
  data: Array<SaleCreateManyCustomer_AddrInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleCreateManyInput = {
  business_id: Scalars['String']['input'];
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_addr_id?: InputMaybe<Scalars['String']['input']>;
  customer_id?: InputMaybe<Scalars['String']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyStoreInput = {
  business_id: Scalars['String']['input'];
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_addr_id?: InputMaybe<Scalars['String']['input']>;
  customer_id?: InputMaybe<Scalars['String']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateManyStoreInputEnvelope = {
  data: Array<SaleCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleCreateManyBusinessInputEnvelope>;
};

export type SaleCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutCustomerInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<SaleCreateManyCustomerInputEnvelope>;
};

export type SaleCreateNestedManyWithoutCustomer_AddrInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutCustomer_AddrInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutCustomer_AddrInput>>;
  createMany?: InputMaybe<SaleCreateManyCustomer_AddrInputEnvelope>;
};

export type SaleCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutStoreInput>>;
  createMany?: InputMaybe<SaleCreateManyStoreInputEnvelope>;
};

export type SaleCreateNestedOneWithoutAddon_ItemsInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutAddon_ItemsInput>;
  create?: InputMaybe<SaleCreateWithoutAddon_ItemsInput>;
};

export type SaleCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<SaleCreateWithoutItemsInput>;
};

export type SaleCreateNestedOneWithoutPayment_DetailsInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutPayment_DetailsInput>;
  create?: InputMaybe<SaleCreateWithoutPayment_DetailsInput>;
};

export type SaleCreateNestedOneWithoutStocksInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<SaleCreateWithoutStocksInput>;
};

export type SaleCreateOrConnectWithoutAddon_ItemsInput = {
  create: SaleCreateWithoutAddon_ItemsInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutBusinessInput = {
  create: SaleCreateWithoutBusinessInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutCustomerInput = {
  create: SaleCreateWithoutCustomerInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutCustomer_AddrInput = {
  create: SaleCreateWithoutCustomer_AddrInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutItemsInput = {
  create: SaleCreateWithoutItemsInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutPayment_DetailsInput = {
  create: SaleCreateWithoutPayment_DetailsInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutStocksInput = {
  create: SaleCreateWithoutStocksInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateOrConnectWithoutStoreInput = {
  create: SaleCreateWithoutStoreInput;
  where: SaleWhereUniqueInput;
};

export type SaleCreateWithoutAddon_ItemsInput = {
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutBusinessInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutCustomerInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutCustomer_AddrInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutItemsInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutPayment_DetailsInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutStocksInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  store: StoreCreateNestedOneWithoutSalesInput;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleCreateWithoutStoreInput = {
  addon_items?: InputMaybe<SaleAddonItemCreateNestedManyWithoutSaleInput>;
  business: BusinessCreateNestedOneWithoutSalesInput;
  charge_amount?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutSalesInput>;
  customer_addr?: InputMaybe<AddressCreateNestedOneWithoutSalesInput>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemCreateNestedManyWithoutSaleInput>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  payment_details?: InputMaybe<PaymentDetailCreateNestedManyWithoutSaleInput>;
  payment_method?: InputMaybe<Scalars['String']['input']>;
  payment_method_id?: InputMaybe<Scalars['String']['input']>;
  payment_status?: InputMaybe<PaymentStatus>;
  received_amount?: InputMaybe<Scalars['Decimal']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_no?: InputMaybe<Scalars['String']['input']>;
  ref_type?: InputMaybe<Scalars['String']['input']>;
  refund_amount?: InputMaybe<Scalars['Decimal']['input']>;
  sale_channel: Scalars['String']['input'];
  sale_date?: InputMaybe<Scalars['DateTime']['input']>;
  sale_number: Scalars['String']['input'];
  sale_status?: InputMaybe<SaleStatus>;
  seller_id?: InputMaybe<Scalars['String']['input']>;
  seller_name?: InputMaybe<Scalars['String']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  shipping_amount?: InputMaybe<Scalars['Decimal']['input']>;
  stocks?: InputMaybe<SaleItemStockCreateNestedManyWithoutSaleInput>;
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleDetailResult = {
  __typename?: 'SaleDetailResult';
  details: Array<DailySaleDetail>;
  summary?: Maybe<Array<DailySaleDetail>>;
};

export type SaleGroupBy = {
  __typename?: 'SaleGroupBy';
  _avg?: Maybe<SaleAvgAggregate>;
  _count?: Maybe<SaleCountAggregate>;
  _max?: Maybe<SaleMaxAggregate>;
  _min?: Maybe<SaleMinAggregate>;
  _sum?: Maybe<SaleSumAggregate>;
  business_id: Scalars['String']['output'];
  charge_amount: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  customer_addr_id?: Maybe<Scalars['String']['output']>;
  customer_id?: Maybe<Scalars['String']['output']>;
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  net_amount: Scalars['Decimal']['output'];
  note?: Maybe<Scalars['String']['output']>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_status: PaymentStatus;
  received_amount: Scalars['Decimal']['output'];
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_no?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  refund_amount: Scalars['Decimal']['output'];
  sale_channel: Scalars['String']['output'];
  sale_date: Scalars['DateTime']['output'];
  sale_number: Scalars['String']['output'];
  sale_status: SaleStatus;
  seller_id?: Maybe<Scalars['String']['output']>;
  seller_name?: Maybe<Scalars['String']['output']>;
  seq: Scalars['Int']['output'];
  shipping_amount: Scalars['Decimal']['output'];
  store_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  total_amount: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleItem = {
  __typename?: 'SaleItem';
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  image?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  net_amount: Scalars['Decimal']['output'];
  optional_amount: Scalars['Decimal']['output'];
  quantity: Scalars['Int']['output'];
  sale: Sale;
  sale_id: Scalars['String']['output'];
  stock_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  thumbnail_image?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  use_inventory: Scalars['Boolean']['output'];
};

export type SaleItemAvgAggregate = {
  __typename?: 'SaleItemAvgAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Float']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleItemAvgOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
};

export type SaleItemCountAggregate = {
  __typename?: 'SaleItemCountAggregate';
  _all: Scalars['Int']['output'];
  cost_price: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  discount_amount: Scalars['Int']['output'];
  gross_amount: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  net_amount: Scalars['Int']['output'];
  optional_amount: Scalars['Int']['output'];
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  tax_amount: Scalars['Int']['output'];
  thumbnail_image: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  unit_price: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  use_inventory: Scalars['Int']['output'];
};

export type SaleItemCountOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  thumbnail_image?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  use_inventory?: InputMaybe<SortOrder>;
};

export type SaleItemCreateInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity: Scalars['Int']['input'];
  sale: SaleCreateNestedOneWithoutItemsInput;
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  thumbnail_image?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  use_inventory?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemCreateManyInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity: Scalars['Int']['input'];
  sale_id: Scalars['String']['input'];
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  thumbnail_image?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  use_inventory?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemCreateManySaleInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity: Scalars['Int']['input'];
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  thumbnail_image?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  use_inventory?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemCreateManySaleInputEnvelope = {
  data: Array<SaleItemCreateManySaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemCreateNestedManyWithoutSaleInput = {
  connect?: InputMaybe<Array<SaleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleItemCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleItemCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleItemCreateManySaleInputEnvelope>;
};

export type SaleItemCreateOrConnectWithoutSaleInput = {
  create: SaleItemCreateWithoutSaleInput;
  where: SaleItemWhereUniqueInput;
};

export type SaleItemCreateWithoutSaleInput = {
  cost_price?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  discount_amount?: InputMaybe<Scalars['Decimal']['input']>;
  gross_amount?: InputMaybe<Scalars['Decimal']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  net_amount?: InputMaybe<Scalars['Decimal']['input']>;
  optional_amount?: InputMaybe<Scalars['Decimal']['input']>;
  quantity: Scalars['Int']['input'];
  stock_id: Scalars['String']['input'];
  tax_amount?: InputMaybe<Scalars['Decimal']['input']>;
  thumbnail_image?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_price?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  use_inventory?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemGroupBy = {
  __typename?: 'SaleItemGroupBy';
  _avg?: Maybe<SaleItemAvgAggregate>;
  _count?: Maybe<SaleItemCountAggregate>;
  _max?: Maybe<SaleItemMaxAggregate>;
  _min?: Maybe<SaleItemMinAggregate>;
  _sum?: Maybe<SaleItemSumAggregate>;
  cost_price: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  discount_amount: Scalars['Decimal']['output'];
  gross_amount: Scalars['Decimal']['output'];
  id: Scalars['String']['output'];
  image?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  net_amount: Scalars['Decimal']['output'];
  optional_amount: Scalars['Decimal']['output'];
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['String']['output'];
  stock_id: Scalars['String']['output'];
  tax_amount: Scalars['Decimal']['output'];
  thumbnail_image?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_price: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  use_inventory: Scalars['Boolean']['output'];
};

export type SaleItemListRelationFilter = {
  every?: InputMaybe<SaleItemWhereInput>;
  none?: InputMaybe<SaleItemWhereInput>;
  some?: InputMaybe<SaleItemWhereInput>;
};

export type SaleItemMaxAggregate = {
  __typename?: 'SaleItemMaxAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  thumbnail_image?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  use_inventory?: Maybe<Scalars['Boolean']['output']>;
};

export type SaleItemMaxOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  thumbnail_image?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  use_inventory?: InputMaybe<SortOrder>;
};

export type SaleItemMinAggregate = {
  __typename?: 'SaleItemMinAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  thumbnail_image?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  use_inventory?: Maybe<Scalars['Boolean']['output']>;
};

export type SaleItemMinOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  thumbnail_image?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  use_inventory?: InputMaybe<SortOrder>;
};

export type SaleItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<SaleItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<SaleItemCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<SaleItemSumOrderByAggregateInput>;
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  thumbnail_image?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  use_inventory?: InputMaybe<SortOrder>;
};

export type SaleItemOrderByWithRelationInput = {
  cost_price?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale?: InputMaybe<SaleOrderByWithRelationInput>;
  sale_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  thumbnail_image?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  use_inventory?: InputMaybe<SortOrder>;
};

export enum SaleItemScalarFieldEnum {
  CostPrice = 'cost_price',
  CreatedAt = 'created_at',
  DiscountAmount = 'discount_amount',
  GrossAmount = 'gross_amount',
  Id = 'id',
  Image = 'image',
  Name = 'name',
  NetAmount = 'net_amount',
  OptionalAmount = 'optional_amount',
  Quantity = 'quantity',
  SaleId = 'sale_id',
  StockId = 'stock_id',
  TaxAmount = 'tax_amount',
  ThumbnailImage = 'thumbnail_image',
  TotalAmount = 'total_amount',
  UnitPrice = 'unit_price',
  UpdatedAt = 'updated_at',
  UseInventory = 'use_inventory'
}

export type SaleItemScalarWhereInput = {
  AND?: InputMaybe<Array<SaleItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleItemScalarWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale_id?: InputMaybe<StringFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  thumbnail_image?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  use_inventory?: InputMaybe<BoolFilter>;
};

export type SaleItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleItemScalarWhereWithAggregatesInput>>;
  cost_price?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  discount_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  gross_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  net_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  optional_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  sale_id?: InputMaybe<StringWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  tax_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  thumbnail_image?: InputMaybe<StringNullableWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  unit_price?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  use_inventory?: InputMaybe<BoolWithAggregatesFilter>;
};

export type SaleItemStock = {
  __typename?: 'SaleItemStock';
  created_at: Scalars['DateTime']['output'];
  is_committed: Scalars['Boolean']['output'];
  quantity: Scalars['Int']['output'];
  sale: Sale;
  sale_id: Scalars['String']['output'];
  sale_item_id: Scalars['String']['output'];
  stock: Scalars['Int']['output'];
  stock_history_id: Scalars['BigInt']['output'];
  stock_id: Scalars['String']['output'];
  stock_transaction_id: Scalars['BigInt']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleItemStockAvgAggregate = {
  __typename?: 'SaleItemStockAvgAggregate';
  quantity?: Maybe<Scalars['Float']['output']>;
  stock?: Maybe<Scalars['Float']['output']>;
  stock_history_id?: Maybe<Scalars['Float']['output']>;
  stock_transaction_id?: Maybe<Scalars['Float']['output']>;
};

export type SaleItemStockAvgOrderByAggregateInput = {
  quantity?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
};

export type SaleItemStockCountAggregate = {
  __typename?: 'SaleItemStockCountAggregate';
  _all: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  is_committed: Scalars['Int']['output'];
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['Int']['output'];
  sale_item_id: Scalars['Int']['output'];
  stock: Scalars['Int']['output'];
  stock_history_id: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  stock_transaction_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SaleItemStockCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  is_committed?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleItemStockCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  is_committed?: InputMaybe<Scalars['Boolean']['input']>;
  quantity: Scalars['Int']['input'];
  sale: SaleCreateNestedOneWithoutStocksInput;
  sale_item_id: Scalars['String']['input'];
  stock: Scalars['Int']['input'];
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id: Scalars['String']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleItemStockCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  is_committed?: InputMaybe<Scalars['Boolean']['input']>;
  quantity: Scalars['Int']['input'];
  sale_id: Scalars['String']['input'];
  sale_item_id: Scalars['String']['input'];
  stock: Scalars['Int']['input'];
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id: Scalars['String']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleItemStockCreateManySaleInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  is_committed?: InputMaybe<Scalars['Boolean']['input']>;
  quantity: Scalars['Int']['input'];
  sale_item_id: Scalars['String']['input'];
  stock: Scalars['Int']['input'];
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id: Scalars['String']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleItemStockCreateManySaleInputEnvelope = {
  data: Array<SaleItemStockCreateManySaleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SaleItemStockCreateNestedManyWithoutSaleInput = {
  connect?: InputMaybe<Array<SaleItemStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleItemStockCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleItemStockCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleItemStockCreateManySaleInputEnvelope>;
};

export type SaleItemStockCreateOrConnectWithoutSaleInput = {
  create: SaleItemStockCreateWithoutSaleInput;
  where: SaleItemStockWhereUniqueInput;
};

export type SaleItemStockCreateWithoutSaleInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  is_committed?: InputMaybe<Scalars['Boolean']['input']>;
  quantity: Scalars['Int']['input'];
  sale_item_id: Scalars['String']['input'];
  stock: Scalars['Int']['input'];
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id: Scalars['String']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SaleItemStockGroupBy = {
  __typename?: 'SaleItemStockGroupBy';
  _avg?: Maybe<SaleItemStockAvgAggregate>;
  _count?: Maybe<SaleItemStockCountAggregate>;
  _max?: Maybe<SaleItemStockMaxAggregate>;
  _min?: Maybe<SaleItemStockMinAggregate>;
  _sum?: Maybe<SaleItemStockSumAggregate>;
  created_at: Scalars['DateTime']['output'];
  is_committed: Scalars['Boolean']['output'];
  quantity: Scalars['Int']['output'];
  sale_id: Scalars['String']['output'];
  sale_item_id: Scalars['String']['output'];
  stock: Scalars['Int']['output'];
  stock_history_id: Scalars['BigInt']['output'];
  stock_id: Scalars['String']['output'];
  stock_transaction_id: Scalars['BigInt']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleItemStockListRelationFilter = {
  every?: InputMaybe<SaleItemStockWhereInput>;
  none?: InputMaybe<SaleItemStockWhereInput>;
  some?: InputMaybe<SaleItemStockWhereInput>;
};

export type SaleItemStockMaxAggregate = {
  __typename?: 'SaleItemStockMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  is_committed?: Maybe<Scalars['Boolean']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  sale_item_id?: Maybe<Scalars['String']['output']>;
  stock?: Maybe<Scalars['Int']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleItemStockMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  is_committed?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleItemStockMinAggregate = {
  __typename?: 'SaleItemStockMinAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  is_committed?: Maybe<Scalars['Boolean']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  sale_id?: Maybe<Scalars['String']['output']>;
  sale_item_id?: Maybe<Scalars['String']['output']>;
  stock?: Maybe<Scalars['Int']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleItemStockMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  is_committed?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleItemStockOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleItemStockOrderByWithAggregationInput = {
  _avg?: InputMaybe<SaleItemStockAvgOrderByAggregateInput>;
  _count?: InputMaybe<SaleItemStockCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleItemStockMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleItemStockMinOrderByAggregateInput>;
  _sum?: InputMaybe<SaleItemStockSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  is_committed?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleItemStockOrderByWithRelationInput = {
  created_at?: InputMaybe<SortOrder>;
  is_committed?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale?: InputMaybe<SaleOrderByWithRelationInput>;
  sale_id?: InputMaybe<SortOrder>;
  sale_item_id?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleItemStockSale_Item_IdStock_IdIs_CommittedCompoundUniqueInput = {
  is_committed: Scalars['Boolean']['input'];
  sale_item_id: Scalars['String']['input'];
  stock_id: Scalars['String']['input'];
};

export enum SaleItemStockScalarFieldEnum {
  CreatedAt = 'created_at',
  IsCommitted = 'is_committed',
  Quantity = 'quantity',
  SaleId = 'sale_id',
  SaleItemId = 'sale_item_id',
  Stock = 'stock',
  StockHistoryId = 'stock_history_id',
  StockId = 'stock_id',
  StockTransactionId = 'stock_transaction_id',
  UpdatedAt = 'updated_at'
}

export type SaleItemStockScalarWhereInput = {
  AND?: InputMaybe<Array<SaleItemStockScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemStockScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleItemStockScalarWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  is_committed?: InputMaybe<BoolFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringFilter>;
  stock?: InputMaybe<IntFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleItemStockScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleItemStockScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleItemStockScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleItemStockScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  is_committed?: InputMaybe<BoolWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  sale_id?: InputMaybe<StringWithAggregatesFilter>;
  sale_item_id?: InputMaybe<StringWithAggregatesFilter>;
  stock?: InputMaybe<IntWithAggregatesFilter>;
  stock_history_id?: InputMaybe<BigIntWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  stock_transaction_id?: InputMaybe<BigIntWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SaleItemStockSumAggregate = {
  __typename?: 'SaleItemStockSumAggregate';
  quantity?: Maybe<Scalars['Int']['output']>;
  stock?: Maybe<Scalars['Int']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
};

export type SaleItemStockSumOrderByAggregateInput = {
  quantity?: InputMaybe<SortOrder>;
  stock?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
};

export type SaleItemStockUpdateInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  is_committed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale?: InputMaybe<SaleUpdateOneRequiredWithoutStocksNestedInput>;
  sale_item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock?: InputMaybe<IntFieldUpdateOperationsInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleItemStockUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  is_committed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale_item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock?: InputMaybe<IntFieldUpdateOperationsInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleItemStockUpdateManyWithWhereWithoutSaleInput = {
  data: SaleItemStockUpdateManyMutationInput;
  where: SaleItemStockScalarWhereInput;
};

export type SaleItemStockUpdateManyWithoutSaleNestedInput = {
  connect?: InputMaybe<Array<SaleItemStockWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleItemStockCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleItemStockCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleItemStockCreateManySaleInputEnvelope>;
  delete?: InputMaybe<Array<SaleItemStockWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleItemStockScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleItemStockWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleItemStockWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleItemStockUpdateWithWhereUniqueWithoutSaleInput>>;
  updateMany?: InputMaybe<Array<SaleItemStockUpdateManyWithWhereWithoutSaleInput>>;
  upsert?: InputMaybe<Array<SaleItemStockUpsertWithWhereUniqueWithoutSaleInput>>;
};

export type SaleItemStockUpdateWithWhereUniqueWithoutSaleInput = {
  data: SaleItemStockUpdateWithoutSaleInput;
  where: SaleItemStockWhereUniqueInput;
};

export type SaleItemStockUpdateWithoutSaleInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  is_committed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale_item_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock?: InputMaybe<IntFieldUpdateOperationsInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleItemStockUpsertWithWhereUniqueWithoutSaleInput = {
  create: SaleItemStockCreateWithoutSaleInput;
  update: SaleItemStockUpdateWithoutSaleInput;
  where: SaleItemStockWhereUniqueInput;
};

export type SaleItemStockWhereInput = {
  AND?: InputMaybe<Array<SaleItemStockWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemStockWhereInput>>;
  OR?: InputMaybe<Array<SaleItemStockWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  is_committed?: InputMaybe<BoolFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringFilter>;
  stock?: InputMaybe<IntFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleItemStockWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleItemStockWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemStockWhereInput>>;
  OR?: InputMaybe<Array<SaleItemStockWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  is_committed?: InputMaybe<BoolFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  sale_item_id?: InputMaybe<StringFilter>;
  sale_item_id_stock_id_is_committed?: InputMaybe<SaleItemStockSale_Item_IdStock_IdIs_CommittedCompoundUniqueInput>;
  stock?: InputMaybe<IntFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleItemSumAggregate = {
  __typename?: 'SaleItemSumAggregate';
  cost_price?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  optional_amount?: Maybe<Scalars['Decimal']['output']>;
  quantity?: Maybe<Scalars['Int']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_price?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleItemSumOrderByAggregateInput = {
  cost_price?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  optional_amount?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_price?: InputMaybe<SortOrder>;
};

export type SaleItemUpdateInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  sale?: InputMaybe<SaleUpdateOneRequiredWithoutItemsNestedInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  thumbnail_image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  use_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type SaleItemUpdateManyMutationInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  thumbnail_image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  use_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type SaleItemUpdateManyWithWhereWithoutSaleInput = {
  data: SaleItemUpdateManyMutationInput;
  where: SaleItemScalarWhereInput;
};

export type SaleItemUpdateManyWithoutSaleNestedInput = {
  connect?: InputMaybe<Array<SaleItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleItemCreateOrConnectWithoutSaleInput>>;
  create?: InputMaybe<Array<SaleItemCreateWithoutSaleInput>>;
  createMany?: InputMaybe<SaleItemCreateManySaleInputEnvelope>;
  delete?: InputMaybe<Array<SaleItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleItemWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleItemWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleItemUpdateWithWhereUniqueWithoutSaleInput>>;
  updateMany?: InputMaybe<Array<SaleItemUpdateManyWithWhereWithoutSaleInput>>;
  upsert?: InputMaybe<Array<SaleItemUpsertWithWhereUniqueWithoutSaleInput>>;
};

export type SaleItemUpdateWithWhereUniqueWithoutSaleInput = {
  data: SaleItemUpdateWithoutSaleInput;
  where: SaleItemWhereUniqueInput;
};

export type SaleItemUpdateWithoutSaleInput = {
  cost_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  optional_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  stock_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  thumbnail_image?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_price?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  use_inventory?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type SaleItemUpsertWithWhereUniqueWithoutSaleInput = {
  create: SaleItemCreateWithoutSaleInput;
  update: SaleItemUpdateWithoutSaleInput;
  where: SaleItemWhereUniqueInput;
};

export type SaleItemWhereInput = {
  AND?: InputMaybe<Array<SaleItemWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemWhereInput>>;
  OR?: InputMaybe<Array<SaleItemWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  thumbnail_image?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  use_inventory?: InputMaybe<BoolFilter>;
};

export type SaleItemWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleItemWhereInput>>;
  NOT?: InputMaybe<Array<SaleItemWhereInput>>;
  OR?: InputMaybe<Array<SaleItemWhereInput>>;
  cost_price?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  optional_amount?: InputMaybe<DecimalFilter>;
  quantity?: InputMaybe<IntFilter>;
  sale?: InputMaybe<SaleRelationFilter>;
  sale_id?: InputMaybe<StringFilter>;
  stock_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  thumbnail_image?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_price?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  use_inventory?: InputMaybe<BoolFilter>;
};

export type SaleListRelationFilter = {
  every?: InputMaybe<SaleWhereInput>;
  none?: InputMaybe<SaleWhereInput>;
  some?: InputMaybe<SaleWhereInput>;
};

export type SaleMaxAggregate = {
  __typename?: 'SaleMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  customer_addr_id?: Maybe<Scalars['String']['output']>;
  customer_id?: Maybe<Scalars['String']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_status?: Maybe<PaymentStatus>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_no?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  sale_channel?: Maybe<Scalars['String']['output']>;
  sale_date?: Maybe<Scalars['DateTime']['output']>;
  sale_number?: Maybe<Scalars['String']['output']>;
  sale_status?: Maybe<SaleStatus>;
  seller_id?: Maybe<Scalars['String']['output']>;
  seller_name?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_addr_id?: InputMaybe<SortOrder>;
  customer_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_status?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_no?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_channel?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  sale_number?: InputMaybe<SortOrder>;
  sale_status?: InputMaybe<SortOrder>;
  seller_id?: InputMaybe<SortOrder>;
  seller_name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleMinAggregate = {
  __typename?: 'SaleMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  customer_addr_id?: Maybe<Scalars['String']['output']>;
  customer_id?: Maybe<Scalars['String']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  payment_method?: Maybe<Scalars['String']['output']>;
  payment_method_id?: Maybe<Scalars['String']['output']>;
  payment_status?: Maybe<PaymentStatus>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_no?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  sale_channel?: Maybe<Scalars['String']['output']>;
  sale_date?: Maybe<Scalars['DateTime']['output']>;
  sale_number?: Maybe<Scalars['String']['output']>;
  sale_status?: Maybe<SaleStatus>;
  seller_id?: Maybe<Scalars['String']['output']>;
  seller_name?: Maybe<Scalars['String']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SaleMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_addr_id?: InputMaybe<SortOrder>;
  customer_id?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  payment_method?: InputMaybe<SortOrder>;
  payment_method_id?: InputMaybe<SortOrder>;
  payment_status?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_no?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_channel?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  sale_number?: InputMaybe<SortOrder>;
  sale_status?: InputMaybe<SortOrder>;
  seller_id?: InputMaybe<SortOrder>;
  seller_name?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SaleNullableRelationFilter = {
  is?: InputMaybe<SaleWhereInput>;
  isNot?: InputMaybe<SaleWhereInput>;
};

export type SaleOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SaleOrderByWithAggregationInput = {
  _avg?: InputMaybe<SaleAvgOrderByAggregateInput>;
  _count?: InputMaybe<SaleCountOrderByAggregateInput>;
  _max?: InputMaybe<SaleMaxOrderByAggregateInput>;
  _min?: InputMaybe<SaleMinOrderByAggregateInput>;
  _sum?: InputMaybe<SaleSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer_addr_id?: InputMaybe<SortOrderInput>;
  customer_id?: InputMaybe<SortOrderInput>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  payment_method?: InputMaybe<SortOrderInput>;
  payment_method_id?: InputMaybe<SortOrderInput>;
  payment_status?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrderInput>;
  ref_no?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrderInput>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_channel?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  sale_number?: InputMaybe<SortOrder>;
  sale_status?: InputMaybe<SortOrder>;
  seller_id?: InputMaybe<SortOrderInput>;
  seller_name?: InputMaybe<SortOrderInput>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleOrderByWithRelationInput = {
  addon_items?: InputMaybe<SaleAddonItemOrderByRelationAggregateInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  charge_amount?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customer_addr?: InputMaybe<AddressOrderByWithRelationInput>;
  customer_addr_id?: InputMaybe<SortOrderInput>;
  customer_id?: InputMaybe<SortOrderInput>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<SaleItemOrderByRelationAggregateInput>;
  metadata?: InputMaybe<SortOrderInput>;
  net_amount?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  payment_details?: InputMaybe<PaymentDetailOrderByRelationAggregateInput>;
  payment_method?: InputMaybe<SortOrderInput>;
  payment_method_id?: InputMaybe<SortOrderInput>;
  payment_status?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrderInput>;
  ref_no?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrderInput>;
  refund_amount?: InputMaybe<SortOrder>;
  sale_channel?: InputMaybe<SortOrder>;
  sale_date?: InputMaybe<SortOrder>;
  sale_number?: InputMaybe<SortOrder>;
  sale_status?: InputMaybe<SortOrder>;
  seller_id?: InputMaybe<SortOrderInput>;
  seller_name?: InputMaybe<SortOrderInput>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  stocks?: InputMaybe<SaleItemStockOrderByRelationAggregateInput>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SaleRelationFilter = {
  is?: InputMaybe<SaleWhereInput>;
  isNot?: InputMaybe<SaleWhereInput>;
};

export enum SaleScalarFieldEnum {
  BusinessId = 'business_id',
  ChargeAmount = 'charge_amount',
  CreatedAt = 'created_at',
  CustomerAddrId = 'customer_addr_id',
  CustomerId = 'customer_id',
  DiscountAmount = 'discount_amount',
  GrossAmount = 'gross_amount',
  Id = 'id',
  Metadata = 'metadata',
  NetAmount = 'net_amount',
  Note = 'note',
  PaymentMethod = 'payment_method',
  PaymentMethodId = 'payment_method_id',
  PaymentStatus = 'payment_status',
  ReceivedAmount = 'received_amount',
  RefId = 'ref_id',
  RefNo = 'ref_no',
  RefType = 'ref_type',
  RefundAmount = 'refund_amount',
  SaleChannel = 'sale_channel',
  SaleDate = 'sale_date',
  SaleNumber = 'sale_number',
  SaleStatus = 'sale_status',
  SellerId = 'seller_id',
  SellerName = 'seller_name',
  Seq = 'seq',
  ShippingAmount = 'shipping_amount',
  StoreId = 'store_id',
  TaxAmount = 'tax_amount',
  TotalAmount = 'total_amount',
  UpdatedAt = 'updated_at'
}

export type SaleScalarWhereInput = {
  AND?: InputMaybe<Array<SaleScalarWhereInput>>;
  NOT?: InputMaybe<Array<SaleScalarWhereInput>>;
  OR?: InputMaybe<Array<SaleScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customer_addr_id?: InputMaybe<StringNullableFilter>;
  customer_id?: InputMaybe<StringNullableFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  payment_method?: InputMaybe<StringNullableFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_status?: InputMaybe<EnumPaymentStatusFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_no?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<StringNullableFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_channel?: InputMaybe<StringFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  sale_number?: InputMaybe<StringFilter>;
  sale_status?: InputMaybe<EnumSaleStatusFilter>;
  seller_id?: InputMaybe<StringNullableFilter>;
  seller_name?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  store_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SaleScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SaleScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SaleScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  charge_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  customer_addr_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  customer_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  gross_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  net_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_method?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_method_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  payment_status?: InputMaybe<EnumPaymentStatusWithAggregatesFilter>;
  received_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  ref_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_no?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_type?: InputMaybe<StringNullableWithAggregatesFilter>;
  refund_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  sale_channel?: InputMaybe<StringWithAggregatesFilter>;
  sale_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  sale_number?: InputMaybe<StringWithAggregatesFilter>;
  sale_status?: InputMaybe<EnumSaleStatusWithAggregatesFilter>;
  seller_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  seller_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  shipping_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  tax_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export enum SaleStatus {
  Canceled = 'CANCELED',
  Completed = 'COMPLETED',
  Pending = 'PENDING'
}

export type SaleSumAggregate = {
  __typename?: 'SaleSumAggregate';
  charge_amount?: Maybe<Scalars['Decimal']['output']>;
  discount_amount?: Maybe<Scalars['Decimal']['output']>;
  gross_amount?: Maybe<Scalars['Decimal']['output']>;
  net_amount?: Maybe<Scalars['Decimal']['output']>;
  received_amount?: Maybe<Scalars['Decimal']['output']>;
  refund_amount?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  shipping_amount?: Maybe<Scalars['Decimal']['output']>;
  tax_amount?: Maybe<Scalars['Decimal']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
};

export type SaleSumOrderByAggregateInput = {
  charge_amount?: InputMaybe<SortOrder>;
  discount_amount?: InputMaybe<SortOrder>;
  gross_amount?: InputMaybe<SortOrder>;
  net_amount?: InputMaybe<SortOrder>;
  received_amount?: InputMaybe<SortOrder>;
  refund_amount?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  shipping_amount?: InputMaybe<SortOrder>;
  tax_amount?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
};

export type SaleSummaryResult = {
  __typename?: 'SaleSummaryResult';
  details: Array<DailySale>;
  summary?: Maybe<DailySale>;
};

export type SaleUpdateInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateManyMutationInput = {
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateManyWithWhereWithoutBusinessInput = {
  data: SaleUpdateManyMutationInput;
  where: SaleScalarWhereInput;
};

export type SaleUpdateManyWithWhereWithoutCustomerInput = {
  data: SaleUpdateManyMutationInput;
  where: SaleScalarWhereInput;
};

export type SaleUpdateManyWithWhereWithoutCustomer_AddrInput = {
  data: SaleUpdateManyMutationInput;
  where: SaleScalarWhereInput;
};

export type SaleUpdateManyWithWhereWithoutStoreInput = {
  data: SaleUpdateManyMutationInput;
  where: SaleScalarWhereInput;
};

export type SaleUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SaleCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<SaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<SaleUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<SaleUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type SaleUpdateManyWithoutCustomerNestedInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutCustomerInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutCustomerInput>>;
  createMany?: InputMaybe<SaleCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<SaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleUpdateWithWhereUniqueWithoutCustomerInput>>;
  updateMany?: InputMaybe<Array<SaleUpdateManyWithWhereWithoutCustomerInput>>;
  upsert?: InputMaybe<Array<SaleUpsertWithWhereUniqueWithoutCustomerInput>>;
};

export type SaleUpdateManyWithoutCustomer_AddrNestedInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutCustomer_AddrInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutCustomer_AddrInput>>;
  createMany?: InputMaybe<SaleCreateManyCustomer_AddrInputEnvelope>;
  delete?: InputMaybe<Array<SaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleUpdateWithWhereUniqueWithoutCustomer_AddrInput>>;
  updateMany?: InputMaybe<Array<SaleUpdateManyWithWhereWithoutCustomer_AddrInput>>;
  upsert?: InputMaybe<Array<SaleUpsertWithWhereUniqueWithoutCustomer_AddrInput>>;
};

export type SaleUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SaleCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<SaleCreateWithoutStoreInput>>;
  createMany?: InputMaybe<SaleCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<SaleWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SaleScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SaleWhereUniqueInput>>;
  set?: InputMaybe<Array<SaleWhereUniqueInput>>;
  update?: InputMaybe<Array<SaleUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<SaleUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<SaleUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type SaleUpdateOneRequiredWithoutAddon_ItemsNestedInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutAddon_ItemsInput>;
  create?: InputMaybe<SaleCreateWithoutAddon_ItemsInput>;
  update?: InputMaybe<SaleUpdateToOneWithWhereWithoutAddon_ItemsInput>;
  upsert?: InputMaybe<SaleUpsertWithoutAddon_ItemsInput>;
};

export type SaleUpdateOneRequiredWithoutItemsNestedInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<SaleCreateWithoutItemsInput>;
  update?: InputMaybe<SaleUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<SaleUpsertWithoutItemsInput>;
};

export type SaleUpdateOneRequiredWithoutStocksNestedInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutStocksInput>;
  create?: InputMaybe<SaleCreateWithoutStocksInput>;
  update?: InputMaybe<SaleUpdateToOneWithWhereWithoutStocksInput>;
  upsert?: InputMaybe<SaleUpsertWithoutStocksInput>;
};

export type SaleUpdateOneWithoutPayment_DetailsNestedInput = {
  connect?: InputMaybe<SaleWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SaleCreateOrConnectWithoutPayment_DetailsInput>;
  create?: InputMaybe<SaleCreateWithoutPayment_DetailsInput>;
  delete?: InputMaybe<SaleWhereInput>;
  disconnect?: InputMaybe<SaleWhereInput>;
  update?: InputMaybe<SaleUpdateToOneWithWhereWithoutPayment_DetailsInput>;
  upsert?: InputMaybe<SaleUpsertWithoutPayment_DetailsInput>;
};

export type SaleUpdateToOneWithWhereWithoutAddon_ItemsInput = {
  data: SaleUpdateWithoutAddon_ItemsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpdateToOneWithWhereWithoutItemsInput = {
  data: SaleUpdateWithoutItemsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpdateToOneWithWhereWithoutPayment_DetailsInput = {
  data: SaleUpdateWithoutPayment_DetailsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpdateToOneWithWhereWithoutStocksInput = {
  data: SaleUpdateWithoutStocksInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpdateWithWhereUniqueWithoutBusinessInput = {
  data: SaleUpdateWithoutBusinessInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpdateWithWhereUniqueWithoutCustomerInput = {
  data: SaleUpdateWithoutCustomerInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpdateWithWhereUniqueWithoutCustomer_AddrInput = {
  data: SaleUpdateWithoutCustomer_AddrInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpdateWithWhereUniqueWithoutStoreInput = {
  data: SaleUpdateWithoutStoreInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpdateWithoutAddon_ItemsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutBusinessInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutCustomerInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutCustomer_AddrInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutItemsInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutPayment_DetailsInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutStocksInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutSalesNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpdateWithoutStoreInput = {
  addon_items?: InputMaybe<SaleAddonItemUpdateManyWithoutSaleNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSalesNestedInput>;
  charge_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutSalesNestedInput>;
  customer_addr?: InputMaybe<AddressUpdateOneWithoutSalesNestedInput>;
  discount_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  gross_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<SaleItemUpdateManyWithoutSaleNestedInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  net_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_details?: InputMaybe<PaymentDetailUpdateManyWithoutSaleNestedInput>;
  payment_method?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_method_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  payment_status?: InputMaybe<EnumPaymentStatusFieldUpdateOperationsInput>;
  received_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_no?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  refund_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  sale_channel?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  sale_number?: InputMaybe<StringFieldUpdateOperationsInput>;
  sale_status?: InputMaybe<EnumSaleStatusFieldUpdateOperationsInput>;
  seller_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seller_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  shipping_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  stocks?: InputMaybe<SaleItemStockUpdateManyWithoutSaleNestedInput>;
  tax_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SaleUpsertWithWhereUniqueWithoutBusinessInput = {
  create: SaleCreateWithoutBusinessInput;
  update: SaleUpdateWithoutBusinessInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpsertWithWhereUniqueWithoutCustomerInput = {
  create: SaleCreateWithoutCustomerInput;
  update: SaleUpdateWithoutCustomerInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpsertWithWhereUniqueWithoutCustomer_AddrInput = {
  create: SaleCreateWithoutCustomer_AddrInput;
  update: SaleUpdateWithoutCustomer_AddrInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpsertWithWhereUniqueWithoutStoreInput = {
  create: SaleCreateWithoutStoreInput;
  update: SaleUpdateWithoutStoreInput;
  where: SaleWhereUniqueInput;
};

export type SaleUpsertWithoutAddon_ItemsInput = {
  create: SaleCreateWithoutAddon_ItemsInput;
  update: SaleUpdateWithoutAddon_ItemsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpsertWithoutItemsInput = {
  create: SaleCreateWithoutItemsInput;
  update: SaleUpdateWithoutItemsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpsertWithoutPayment_DetailsInput = {
  create: SaleCreateWithoutPayment_DetailsInput;
  update: SaleUpdateWithoutPayment_DetailsInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleUpsertWithoutStocksInput = {
  create: SaleCreateWithoutStocksInput;
  update: SaleUpdateWithoutStocksInput;
  where?: InputMaybe<SaleWhereInput>;
};

export type SaleWhereInput = {
  AND?: InputMaybe<Array<SaleWhereInput>>;
  NOT?: InputMaybe<Array<SaleWhereInput>>;
  OR?: InputMaybe<Array<SaleWhereInput>>;
  addon_items?: InputMaybe<SaleAddonItemListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customer?: InputMaybe<CustomerNullableRelationFilter>;
  customer_addr?: InputMaybe<AddressNullableRelationFilter>;
  customer_addr_id?: InputMaybe<StringNullableFilter>;
  customer_id?: InputMaybe<StringNullableFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<SaleItemListRelationFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  payment_details?: InputMaybe<PaymentDetailListRelationFilter>;
  payment_method?: InputMaybe<StringNullableFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_status?: InputMaybe<EnumPaymentStatusFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_no?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<StringNullableFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_channel?: InputMaybe<StringFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  sale_number?: InputMaybe<StringFilter>;
  sale_status?: InputMaybe<EnumSaleStatusFilter>;
  seller_id?: InputMaybe<StringNullableFilter>;
  seller_name?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  stocks?: InputMaybe<SaleItemStockListRelationFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SaleWhereUniqueInput = {
  AND?: InputMaybe<Array<SaleWhereInput>>;
  NOT?: InputMaybe<Array<SaleWhereInput>>;
  OR?: InputMaybe<Array<SaleWhereInput>>;
  addon_items?: InputMaybe<SaleAddonItemListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  charge_amount?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  customer?: InputMaybe<CustomerNullableRelationFilter>;
  customer_addr?: InputMaybe<AddressNullableRelationFilter>;
  customer_addr_id?: InputMaybe<StringNullableFilter>;
  customer_id?: InputMaybe<StringNullableFilter>;
  discount_amount?: InputMaybe<DecimalFilter>;
  gross_amount?: InputMaybe<DecimalFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<SaleItemListRelationFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  net_amount?: InputMaybe<DecimalFilter>;
  note?: InputMaybe<StringNullableFilter>;
  payment_details?: InputMaybe<PaymentDetailListRelationFilter>;
  payment_method?: InputMaybe<StringNullableFilter>;
  payment_method_id?: InputMaybe<StringNullableFilter>;
  payment_status?: InputMaybe<EnumPaymentStatusFilter>;
  received_amount?: InputMaybe<DecimalFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_no?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<StringNullableFilter>;
  refund_amount?: InputMaybe<DecimalFilter>;
  sale_channel?: InputMaybe<StringFilter>;
  sale_date?: InputMaybe<DateTimeFilter>;
  sale_number?: InputMaybe<StringFilter>;
  sale_status?: InputMaybe<EnumSaleStatusFilter>;
  seller_id?: InputMaybe<StringNullableFilter>;
  seller_name?: InputMaybe<StringNullableFilter>;
  seq?: InputMaybe<IntFilter>;
  shipping_amount?: InputMaybe<DecimalFilter>;
  stocks?: InputMaybe<SaleItemStockListRelationFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  tax_amount?: InputMaybe<DecimalFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SequenceData = {
  __typename?: 'SequenceData';
  sequence_cur_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_cycle: Scalars['Boolean']['output'];
  sequence_increment: Scalars['Int']['output'];
  sequence_max_value: Scalars['BigInt']['output'];
  sequence_min_value: Scalars['Int']['output'];
  sequence_name: Scalars['String']['output'];
  sequence_prefix?: Maybe<Scalars['String']['output']>;
};

export type SequenceDataAvgAggregate = {
  __typename?: 'SequenceDataAvgAggregate';
  sequence_cur_value?: Maybe<Scalars['Float']['output']>;
  sequence_increment?: Maybe<Scalars['Float']['output']>;
  sequence_max_value?: Maybe<Scalars['Float']['output']>;
  sequence_min_value?: Maybe<Scalars['Float']['output']>;
};

export type SequenceDataAvgOrderByAggregateInput = {
  sequence_cur_value?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
};

export type SequenceDataCountAggregate = {
  __typename?: 'SequenceDataCountAggregate';
  _all: Scalars['Int']['output'];
  sequence_cur_value: Scalars['Int']['output'];
  sequence_cycle: Scalars['Int']['output'];
  sequence_increment: Scalars['Int']['output'];
  sequence_max_value: Scalars['Int']['output'];
  sequence_min_value: Scalars['Int']['output'];
  sequence_name: Scalars['Int']['output'];
  sequence_prefix: Scalars['Int']['output'];
};

export type SequenceDataCountOrderByAggregateInput = {
  sequence_cur_value?: InputMaybe<SortOrder>;
  sequence_cycle?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
  sequence_name?: InputMaybe<SortOrder>;
  sequence_prefix?: InputMaybe<SortOrder>;
};

export type SequenceDataCreateInput = {
  sequence_cur_value?: InputMaybe<Scalars['BigInt']['input']>;
  sequence_cycle?: InputMaybe<Scalars['Boolean']['input']>;
  sequence_increment?: InputMaybe<Scalars['Int']['input']>;
  sequence_max_value?: InputMaybe<Scalars['BigInt']['input']>;
  sequence_min_value?: InputMaybe<Scalars['Int']['input']>;
  sequence_name: Scalars['String']['input'];
  sequence_prefix?: InputMaybe<Scalars['String']['input']>;
};

export type SequenceDataCreateManyInput = {
  sequence_cur_value?: InputMaybe<Scalars['BigInt']['input']>;
  sequence_cycle?: InputMaybe<Scalars['Boolean']['input']>;
  sequence_increment?: InputMaybe<Scalars['Int']['input']>;
  sequence_max_value?: InputMaybe<Scalars['BigInt']['input']>;
  sequence_min_value?: InputMaybe<Scalars['Int']['input']>;
  sequence_name: Scalars['String']['input'];
  sequence_prefix?: InputMaybe<Scalars['String']['input']>;
};

export type SequenceDataGroupBy = {
  __typename?: 'SequenceDataGroupBy';
  _avg?: Maybe<SequenceDataAvgAggregate>;
  _count?: Maybe<SequenceDataCountAggregate>;
  _max?: Maybe<SequenceDataMaxAggregate>;
  _min?: Maybe<SequenceDataMinAggregate>;
  _sum?: Maybe<SequenceDataSumAggregate>;
  sequence_cur_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_cycle: Scalars['Boolean']['output'];
  sequence_increment: Scalars['Int']['output'];
  sequence_max_value: Scalars['BigInt']['output'];
  sequence_min_value: Scalars['Int']['output'];
  sequence_name: Scalars['String']['output'];
  sequence_prefix?: Maybe<Scalars['String']['output']>;
};

export type SequenceDataMaxAggregate = {
  __typename?: 'SequenceDataMaxAggregate';
  sequence_cur_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_cycle?: Maybe<Scalars['Boolean']['output']>;
  sequence_increment?: Maybe<Scalars['Int']['output']>;
  sequence_max_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_min_value?: Maybe<Scalars['Int']['output']>;
  sequence_name?: Maybe<Scalars['String']['output']>;
  sequence_prefix?: Maybe<Scalars['String']['output']>;
};

export type SequenceDataMaxOrderByAggregateInput = {
  sequence_cur_value?: InputMaybe<SortOrder>;
  sequence_cycle?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
  sequence_name?: InputMaybe<SortOrder>;
  sequence_prefix?: InputMaybe<SortOrder>;
};

export type SequenceDataMinAggregate = {
  __typename?: 'SequenceDataMinAggregate';
  sequence_cur_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_cycle?: Maybe<Scalars['Boolean']['output']>;
  sequence_increment?: Maybe<Scalars['Int']['output']>;
  sequence_max_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_min_value?: Maybe<Scalars['Int']['output']>;
  sequence_name?: Maybe<Scalars['String']['output']>;
  sequence_prefix?: Maybe<Scalars['String']['output']>;
};

export type SequenceDataMinOrderByAggregateInput = {
  sequence_cur_value?: InputMaybe<SortOrder>;
  sequence_cycle?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
  sequence_name?: InputMaybe<SortOrder>;
  sequence_prefix?: InputMaybe<SortOrder>;
};

export type SequenceDataOrderByWithAggregationInput = {
  _avg?: InputMaybe<SequenceDataAvgOrderByAggregateInput>;
  _count?: InputMaybe<SequenceDataCountOrderByAggregateInput>;
  _max?: InputMaybe<SequenceDataMaxOrderByAggregateInput>;
  _min?: InputMaybe<SequenceDataMinOrderByAggregateInput>;
  _sum?: InputMaybe<SequenceDataSumOrderByAggregateInput>;
  sequence_cur_value?: InputMaybe<SortOrderInput>;
  sequence_cycle?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
  sequence_name?: InputMaybe<SortOrder>;
  sequence_prefix?: InputMaybe<SortOrderInput>;
};

export type SequenceDataOrderByWithRelationInput = {
  sequence_cur_value?: InputMaybe<SortOrderInput>;
  sequence_cycle?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
  sequence_name?: InputMaybe<SortOrder>;
  sequence_prefix?: InputMaybe<SortOrderInput>;
};

export enum SequenceDataScalarFieldEnum {
  SequenceCurValue = 'sequence_cur_value',
  SequenceCycle = 'sequence_cycle',
  SequenceIncrement = 'sequence_increment',
  SequenceMaxValue = 'sequence_max_value',
  SequenceMinValue = 'sequence_min_value',
  SequenceName = 'sequence_name',
  SequencePrefix = 'sequence_prefix'
}

export type SequenceDataScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SequenceDataScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SequenceDataScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SequenceDataScalarWhereWithAggregatesInput>>;
  sequence_cur_value?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  sequence_cycle?: InputMaybe<BoolWithAggregatesFilter>;
  sequence_increment?: InputMaybe<IntWithAggregatesFilter>;
  sequence_max_value?: InputMaybe<BigIntWithAggregatesFilter>;
  sequence_min_value?: InputMaybe<IntWithAggregatesFilter>;
  sequence_name?: InputMaybe<StringWithAggregatesFilter>;
  sequence_prefix?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SequenceDataSumAggregate = {
  __typename?: 'SequenceDataSumAggregate';
  sequence_cur_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_increment?: Maybe<Scalars['Int']['output']>;
  sequence_max_value?: Maybe<Scalars['BigInt']['output']>;
  sequence_min_value?: Maybe<Scalars['Int']['output']>;
};

export type SequenceDataSumOrderByAggregateInput = {
  sequence_cur_value?: InputMaybe<SortOrder>;
  sequence_increment?: InputMaybe<SortOrder>;
  sequence_max_value?: InputMaybe<SortOrder>;
  sequence_min_value?: InputMaybe<SortOrder>;
};

export type SequenceDataUpdateInput = {
  sequence_cur_value?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  sequence_cycle?: InputMaybe<BoolFieldUpdateOperationsInput>;
  sequence_increment?: InputMaybe<IntFieldUpdateOperationsInput>;
  sequence_max_value?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  sequence_min_value?: InputMaybe<IntFieldUpdateOperationsInput>;
  sequence_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  sequence_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SequenceDataUpdateManyMutationInput = {
  sequence_cur_value?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  sequence_cycle?: InputMaybe<BoolFieldUpdateOperationsInput>;
  sequence_increment?: InputMaybe<IntFieldUpdateOperationsInput>;
  sequence_max_value?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  sequence_min_value?: InputMaybe<IntFieldUpdateOperationsInput>;
  sequence_name?: InputMaybe<StringFieldUpdateOperationsInput>;
  sequence_prefix?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SequenceDataWhereInput = {
  AND?: InputMaybe<Array<SequenceDataWhereInput>>;
  NOT?: InputMaybe<Array<SequenceDataWhereInput>>;
  OR?: InputMaybe<Array<SequenceDataWhereInput>>;
  sequence_cur_value?: InputMaybe<BigIntNullableFilter>;
  sequence_cycle?: InputMaybe<BoolFilter>;
  sequence_increment?: InputMaybe<IntFilter>;
  sequence_max_value?: InputMaybe<BigIntFilter>;
  sequence_min_value?: InputMaybe<IntFilter>;
  sequence_name?: InputMaybe<StringFilter>;
  sequence_prefix?: InputMaybe<StringNullableFilter>;
};

export type SequenceDataWhereUniqueInput = {
  AND?: InputMaybe<Array<SequenceDataWhereInput>>;
  NOT?: InputMaybe<Array<SequenceDataWhereInput>>;
  OR?: InputMaybe<Array<SequenceDataWhereInput>>;
  sequence_cur_value?: InputMaybe<BigIntNullableFilter>;
  sequence_cycle?: InputMaybe<BoolFilter>;
  sequence_increment?: InputMaybe<IntFilter>;
  sequence_max_value?: InputMaybe<BigIntFilter>;
  sequence_min_value?: InputMaybe<IntFilter>;
  sequence_name?: InputMaybe<Scalars['String']['input']>;
  sequence_prefix?: InputMaybe<StringNullableFilter>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type SortOrderInput = {
  nulls?: InputMaybe<NullsOrder>;
  sort: SortOrder;
};

export type StockAdjustment = {
  __typename?: 'StockAdjustment';
  _count?: Maybe<StockAdjustmentCount>;
  adjustment_date: Scalars['DateTime']['output'];
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  items: Array<StockTransactionItem>;
  note?: Maybe<Scalars['String']['output']>;
  ref_type: StockHistoryRefType;
  seq: Scalars['Int']['output'];
  store: Store;
  store_id: Scalars['String']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user: User;
  user_id: Scalars['String']['output'];
};


export type StockAdjustmentItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockAdjustmentAvgAggregate = {
  __typename?: 'StockAdjustmentAvgAggregate';
  seq?: Maybe<Scalars['Float']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type StockAdjustmentAvgOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type StockAdjustmentCount = {
  __typename?: 'StockAdjustmentCount';
  items: Scalars['Int']['output'];
};


export type StockAdjustmentCountItemsArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockAdjustmentCountAggregate = {
  __typename?: 'StockAdjustmentCountAggregate';
  _all: Scalars['Int']['output'];
  adjustment_date: Scalars['Int']['output'];
  adjustment_type: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  total_qty: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type StockAdjustmentCountOrderByAggregateInput = {
  adjustment_date?: InputMaybe<SortOrder>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type StockAdjustmentCreateInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutS_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutStock_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutStock_AdjustmentsInput;
};

export type StockAdjustmentCreateManyInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type StockAdjustmentCreateManyStoreInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type StockAdjustmentCreateManyStoreInputEnvelope = {
  data: Array<StockAdjustmentCreateManyStoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockAdjustmentCreateManyUserInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockAdjustmentCreateManyUserInputEnvelope = {
  data: Array<StockAdjustmentCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockAdjustmentCreateNestedManyWithoutStoreInput = {
  connect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockAdjustmentCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<StockAdjustmentCreateWithoutStoreInput>>;
  createMany?: InputMaybe<StockAdjustmentCreateManyStoreInputEnvelope>;
};

export type StockAdjustmentCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockAdjustmentCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<StockAdjustmentCreateWithoutUserInput>>;
  createMany?: InputMaybe<StockAdjustmentCreateManyUserInputEnvelope>;
};

export type StockAdjustmentCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StockAdjustmentCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<StockAdjustmentCreateWithoutItemsInput>;
};

export type StockAdjustmentCreateOrConnectWithoutItemsInput = {
  create: StockAdjustmentCreateWithoutItemsInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentCreateOrConnectWithoutStoreInput = {
  create: StockAdjustmentCreateWithoutStoreInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentCreateOrConnectWithoutUserInput = {
  create: StockAdjustmentCreateWithoutUserInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentCreateWithoutItemsInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutStock_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutStock_AdjustmentsInput;
};

export type StockAdjustmentCreateWithoutStoreInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutS_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutStock_AdjustmentsInput;
};

export type StockAdjustmentCreateWithoutUserInput = {
  adjustment_date?: InputMaybe<Scalars['DateTime']['input']>;
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutS_AdjustmentInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  seq?: InputMaybe<Scalars['Int']['input']>;
  store: StoreCreateNestedOneWithoutStock_AdjustmentsInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockAdjustmentGroupBy = {
  __typename?: 'StockAdjustmentGroupBy';
  _avg?: Maybe<StockAdjustmentAvgAggregate>;
  _count?: Maybe<StockAdjustmentCountAggregate>;
  _max?: Maybe<StockAdjustmentMaxAggregate>;
  _min?: Maybe<StockAdjustmentMinAggregate>;
  _sum?: Maybe<StockAdjustmentSumAggregate>;
  adjustment_date: Scalars['DateTime']['output'];
  adjustment_type: StockAdjustmentType;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  ref_type: StockHistoryRefType;
  seq: Scalars['Int']['output'];
  store_id: Scalars['String']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id: Scalars['String']['output'];
};

export type StockAdjustmentListRelationFilter = {
  every?: InputMaybe<StockAdjustmentWhereInput>;
  none?: InputMaybe<StockAdjustmentWhereInput>;
  some?: InputMaybe<StockAdjustmentWhereInput>;
};

export type StockAdjustmentMaxAggregate = {
  __typename?: 'StockAdjustmentMaxAggregate';
  adjustment_date?: Maybe<Scalars['DateTime']['output']>;
  adjustment_type?: Maybe<StockAdjustmentType>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<StockHistoryRefType>;
  seq?: Maybe<Scalars['Int']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type StockAdjustmentMaxOrderByAggregateInput = {
  adjustment_date?: InputMaybe<SortOrder>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type StockAdjustmentMinAggregate = {
  __typename?: 'StockAdjustmentMinAggregate';
  adjustment_date?: Maybe<Scalars['DateTime']['output']>;
  adjustment_type?: Maybe<StockAdjustmentType>;
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<StockHistoryRefType>;
  seq?: Maybe<Scalars['Int']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type StockAdjustmentMinOrderByAggregateInput = {
  adjustment_date?: InputMaybe<SortOrder>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type StockAdjustmentNullableRelationFilter = {
  is?: InputMaybe<StockAdjustmentWhereInput>;
  isNot?: InputMaybe<StockAdjustmentWhereInput>;
};

export type StockAdjustmentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type StockAdjustmentOrderByWithAggregationInput = {
  _avg?: InputMaybe<StockAdjustmentAvgOrderByAggregateInput>;
  _count?: InputMaybe<StockAdjustmentCountOrderByAggregateInput>;
  _max?: InputMaybe<StockAdjustmentMaxOrderByAggregateInput>;
  _min?: InputMaybe<StockAdjustmentMinOrderByAggregateInput>;
  _sum?: InputMaybe<StockAdjustmentSumOrderByAggregateInput>;
  adjustment_date?: InputMaybe<SortOrder>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user_id?: InputMaybe<SortOrder>;
};

export type StockAdjustmentOrderByWithRelationInput = {
  adjustment_date?: InputMaybe<SortOrder>;
  adjustment_type?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  note?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  store?: InputMaybe<StoreOrderByWithRelationInput>;
  store_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  user_id?: InputMaybe<SortOrder>;
};

export enum StockAdjustmentScalarFieldEnum {
  AdjustmentDate = 'adjustment_date',
  AdjustmentType = 'adjustment_type',
  BusinessId = 'business_id',
  Code = 'code',
  CreatedAt = 'created_at',
  Id = 'id',
  Note = 'note',
  RefType = 'ref_type',
  Seq = 'seq',
  StoreId = 'store_id',
  TotalQty = 'total_qty',
  UpdatedAt = 'updated_at',
  UserId = 'user_id'
}

export type StockAdjustmentScalarWhereInput = {
  AND?: InputMaybe<Array<StockAdjustmentScalarWhereInput>>;
  NOT?: InputMaybe<Array<StockAdjustmentScalarWhereInput>>;
  OR?: InputMaybe<Array<StockAdjustmentScalarWhereInput>>;
  adjustment_date?: InputMaybe<DateTimeFilter>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  note?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  seq?: InputMaybe<IntFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type StockAdjustmentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StockAdjustmentScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StockAdjustmentScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StockAdjustmentScalarWhereWithAggregatesInput>>;
  adjustment_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  total_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringWithAggregatesFilter>;
};

export type StockAdjustmentSumAggregate = {
  __typename?: 'StockAdjustmentSumAggregate';
  seq?: Maybe<Scalars['Int']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type StockAdjustmentSumOrderByAggregateInput = {
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export enum StockAdjustmentType {
  Add = 'ADD',
  Set = 'SET',
  Sub = 'SUB'
}

export type StockAdjustmentUpdateInput = {
  adjustment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutS_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
};

export type StockAdjustmentUpdateManyMutationInput = {
  adjustment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockAdjustmentUpdateManyWithWhereWithoutStoreInput = {
  data: StockAdjustmentUpdateManyMutationInput;
  where: StockAdjustmentScalarWhereInput;
};

export type StockAdjustmentUpdateManyWithWhereWithoutUserInput = {
  data: StockAdjustmentUpdateManyMutationInput;
  where: StockAdjustmentScalarWhereInput;
};

export type StockAdjustmentUpdateManyWithoutStoreNestedInput = {
  connect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockAdjustmentCreateOrConnectWithoutStoreInput>>;
  create?: InputMaybe<Array<StockAdjustmentCreateWithoutStoreInput>>;
  createMany?: InputMaybe<StockAdjustmentCreateManyStoreInputEnvelope>;
  delete?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockAdjustmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  set?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  update?: InputMaybe<Array<StockAdjustmentUpdateWithWhereUniqueWithoutStoreInput>>;
  updateMany?: InputMaybe<Array<StockAdjustmentUpdateManyWithWhereWithoutStoreInput>>;
  upsert?: InputMaybe<Array<StockAdjustmentUpsertWithWhereUniqueWithoutStoreInput>>;
};

export type StockAdjustmentUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockAdjustmentCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<StockAdjustmentCreateWithoutUserInput>>;
  createMany?: InputMaybe<StockAdjustmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockAdjustmentScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  set?: InputMaybe<Array<StockAdjustmentWhereUniqueInput>>;
  update?: InputMaybe<Array<StockAdjustmentUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<StockAdjustmentUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<StockAdjustmentUpsertWithWhereUniqueWithoutUserInput>>;
};

export type StockAdjustmentUpdateOneWithoutItemsNestedInput = {
  connect?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StockAdjustmentCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<StockAdjustmentCreateWithoutItemsInput>;
  delete?: InputMaybe<StockAdjustmentWhereInput>;
  disconnect?: InputMaybe<StockAdjustmentWhereInput>;
  update?: InputMaybe<StockAdjustmentUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<StockAdjustmentUpsertWithoutItemsInput>;
};

export type StockAdjustmentUpdateToOneWithWhereWithoutItemsInput = {
  data: StockAdjustmentUpdateWithoutItemsInput;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};

export type StockAdjustmentUpdateWithWhereUniqueWithoutStoreInput = {
  data: StockAdjustmentUpdateWithoutStoreInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentUpdateWithWhereUniqueWithoutUserInput = {
  data: StockAdjustmentUpdateWithoutUserInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentUpdateWithoutItemsInput = {
  adjustment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
};

export type StockAdjustmentUpdateWithoutStoreInput = {
  adjustment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutS_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
};

export type StockAdjustmentUpdateWithoutUserInput = {
  adjustment_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutS_AdjustmentNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  store?: InputMaybe<StoreUpdateOneRequiredWithoutStock_AdjustmentsNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockAdjustmentUpsertWithWhereUniqueWithoutStoreInput = {
  create: StockAdjustmentCreateWithoutStoreInput;
  update: StockAdjustmentUpdateWithoutStoreInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentUpsertWithWhereUniqueWithoutUserInput = {
  create: StockAdjustmentCreateWithoutUserInput;
  update: StockAdjustmentUpdateWithoutUserInput;
  where: StockAdjustmentWhereUniqueInput;
};

export type StockAdjustmentUpsertWithoutItemsInput = {
  create: StockAdjustmentCreateWithoutItemsInput;
  update: StockAdjustmentUpdateWithoutItemsInput;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};

export type StockAdjustmentWhereInput = {
  AND?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  NOT?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  OR?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  adjustment_date?: InputMaybe<DateTimeFilter>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  seq?: InputMaybe<IntFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type StockAdjustmentWhereUniqueInput = {
  AND?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  NOT?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  OR?: InputMaybe<Array<StockAdjustmentWhereInput>>;
  adjustment_date?: InputMaybe<DateTimeFilter>;
  adjustment_type?: InputMaybe<EnumStockAdjustmentTypeFilter>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  seq?: InputMaybe<IntFilter>;
  store?: InputMaybe<StoreRelationFilter>;
  store_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type StockHistory = {
  __typename?: 'StockHistory';
  base_unit_value: Scalars['Decimal']['output'];
  business_id: Scalars['String']['output'];
  closing_asset_value: Scalars['Decimal']['output'];
  closing_qty: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  cumulative_in_qty: Scalars['Decimal']['output'];
  cumulative_out_qty: Scalars['Decimal']['output'];
  cumulative_seq: Scalars['BigInt']['output'];
  description: Scalars['String']['output'];
  id: Scalars['BigInt']['output'];
  is_outgoing: Scalars['Boolean']['output'];
  qty: Scalars['Decimal']['output'];
  ref_detail_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type: StockHistoryRefType;
  stock: ProductStock;
  stock_date: Scalars['DateTime']['output'];
  stock_id: Scalars['String']['output'];
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  store_id: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockHistoryAvgAggregate = {
  __typename?: 'StockHistoryAvgAggregate';
  base_unit_value?: Maybe<Scalars['Decimal']['output']>;
  closing_asset_value?: Maybe<Scalars['Decimal']['output']>;
  closing_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_in_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_out_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_seq?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  stock_transaction_id?: Maybe<Scalars['Float']['output']>;
};

export type StockHistoryAvgOrderByAggregateInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
};

export type StockHistoryCountAggregate = {
  __typename?: 'StockHistoryCountAggregate';
  _all: Scalars['Int']['output'];
  base_unit_value: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  closing_asset_value: Scalars['Int']['output'];
  closing_qty: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  cumulative_in_qty: Scalars['Int']['output'];
  cumulative_out_qty: Scalars['Int']['output'];
  cumulative_seq: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  is_outgoing: Scalars['Int']['output'];
  qty: Scalars['Int']['output'];
  ref_detail_id: Scalars['Int']['output'];
  ref_id: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  stock_date: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  stock_transaction_id: Scalars['Int']['output'];
  store_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type StockHistoryCountOrderByAggregateInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  ref_detail_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockHistoryCreateInput = {
  base_unit_value?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  closing_asset_value?: InputMaybe<Scalars['Decimal']['input']>;
  closing_qty?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  cumulative_in_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_out_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_seq?: InputMaybe<Scalars['BigInt']['input']>;
  description: Scalars['String']['input'];
  id?: InputMaybe<Scalars['BigInt']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_detail_id?: InputMaybe<Scalars['String']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  stock: ProductStockCreateNestedOneWithoutStock_HistoriesInput;
  stock_date: Scalars['DateTime']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockHistoryCreateManyInput = {
  base_unit_value?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  closing_asset_value?: InputMaybe<Scalars['Decimal']['input']>;
  closing_qty?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  cumulative_in_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_out_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_seq?: InputMaybe<Scalars['BigInt']['input']>;
  description: Scalars['String']['input'];
  id?: InputMaybe<Scalars['BigInt']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_detail_id?: InputMaybe<Scalars['String']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  stock_date: Scalars['DateTime']['input'];
  stock_id: Scalars['String']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockHistoryCreateManyStockInput = {
  base_unit_value?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  closing_asset_value?: InputMaybe<Scalars['Decimal']['input']>;
  closing_qty?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  cumulative_in_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_out_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_seq?: InputMaybe<Scalars['BigInt']['input']>;
  description: Scalars['String']['input'];
  id?: InputMaybe<Scalars['BigInt']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_detail_id?: InputMaybe<Scalars['String']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  stock_date: Scalars['DateTime']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockHistoryCreateManyStockInputEnvelope = {
  data: Array<StockHistoryCreateManyStockInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockHistoryCreateNestedManyWithoutStockInput = {
  connect?: InputMaybe<Array<StockHistoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockHistoryCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockHistoryCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockHistoryCreateManyStockInputEnvelope>;
};

export type StockHistoryCreateOrConnectWithoutStockInput = {
  create: StockHistoryCreateWithoutStockInput;
  where: StockHistoryWhereUniqueInput;
};

export type StockHistoryCreateWithoutStockInput = {
  base_unit_value?: InputMaybe<Scalars['Decimal']['input']>;
  business_id: Scalars['String']['input'];
  closing_asset_value?: InputMaybe<Scalars['Decimal']['input']>;
  closing_qty?: InputMaybe<Scalars['Decimal']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  cumulative_in_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_out_qty?: InputMaybe<Scalars['Decimal']['input']>;
  cumulative_seq?: InputMaybe<Scalars['BigInt']['input']>;
  description: Scalars['String']['input'];
  id?: InputMaybe<Scalars['BigInt']['input']>;
  is_outgoing?: InputMaybe<Scalars['Boolean']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_detail_id?: InputMaybe<Scalars['String']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  ref_type: StockHistoryRefType;
  stock_date: Scalars['DateTime']['input'];
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  store_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockHistoryGroupBy = {
  __typename?: 'StockHistoryGroupBy';
  _avg?: Maybe<StockHistoryAvgAggregate>;
  _count?: Maybe<StockHistoryCountAggregate>;
  _max?: Maybe<StockHistoryMaxAggregate>;
  _min?: Maybe<StockHistoryMinAggregate>;
  _sum?: Maybe<StockHistorySumAggregate>;
  base_unit_value: Scalars['Decimal']['output'];
  business_id: Scalars['String']['output'];
  closing_asset_value: Scalars['Decimal']['output'];
  closing_qty: Scalars['Decimal']['output'];
  created_at: Scalars['DateTime']['output'];
  cumulative_in_qty: Scalars['Decimal']['output'];
  cumulative_out_qty: Scalars['Decimal']['output'];
  cumulative_seq: Scalars['BigInt']['output'];
  description: Scalars['String']['output'];
  id: Scalars['BigInt']['output'];
  is_outgoing: Scalars['Boolean']['output'];
  qty: Scalars['Decimal']['output'];
  ref_detail_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type: StockHistoryRefType;
  stock_date: Scalars['DateTime']['output'];
  stock_id: Scalars['String']['output'];
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  store_id: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockHistoryListRelationFilter = {
  every?: InputMaybe<StockHistoryWhereInput>;
  none?: InputMaybe<StockHistoryWhereInput>;
  some?: InputMaybe<StockHistoryWhereInput>;
};

export type StockHistoryMaxAggregate = {
  __typename?: 'StockHistoryMaxAggregate';
  base_unit_value?: Maybe<Scalars['Decimal']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  closing_asset_value?: Maybe<Scalars['Decimal']['output']>;
  closing_qty?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  cumulative_in_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_out_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_seq?: Maybe<Scalars['BigInt']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  is_outgoing?: Maybe<Scalars['Boolean']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  ref_detail_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<StockHistoryRefType>;
  stock_date?: Maybe<Scalars['DateTime']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockHistoryMaxOrderByAggregateInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  ref_detail_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockHistoryMinAggregate = {
  __typename?: 'StockHistoryMinAggregate';
  base_unit_value?: Maybe<Scalars['Decimal']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  closing_asset_value?: Maybe<Scalars['Decimal']['output']>;
  closing_qty?: Maybe<Scalars['Decimal']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  cumulative_in_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_out_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_seq?: Maybe<Scalars['BigInt']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  is_outgoing?: Maybe<Scalars['Boolean']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  ref_detail_id?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<StockHistoryRefType>;
  stock_date?: Maybe<Scalars['DateTime']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  store_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockHistoryMinOrderByAggregateInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  ref_detail_id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockHistoryOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type StockHistoryOrderByWithAggregationInput = {
  _avg?: InputMaybe<StockHistoryAvgOrderByAggregateInput>;
  _count?: InputMaybe<StockHistoryCountOrderByAggregateInput>;
  _max?: InputMaybe<StockHistoryMaxOrderByAggregateInput>;
  _min?: InputMaybe<StockHistoryMinOrderByAggregateInput>;
  _sum?: InputMaybe<StockHistorySumOrderByAggregateInput>;
  base_unit_value?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  ref_detail_id?: InputMaybe<SortOrderInput>;
  ref_id?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrder>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrderInput>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type StockHistoryOrderByWithRelationInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  is_outgoing?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  ref_detail_id?: InputMaybe<SortOrderInput>;
  ref_id?: InputMaybe<SortOrderInput>;
  ref_type?: InputMaybe<SortOrder>;
  stock?: InputMaybe<ProductStockOrderByWithRelationInput>;
  stock_date?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrderInput>;
  store_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum StockHistoryRefType {
  Adjustment = 'ADJUSTMENT',
  Composite = 'COMPOSITE',
  Consumption = 'CONSUMPTION',
  Conversion = 'CONVERSION',
  Count = 'COUNT',
  CustomerReturn = 'CUSTOMER_RETURN',
  Damage = 'DAMAGE',
  Donation = 'DONATION',
  Expiry = 'EXPIRY',
  ItemEdit = 'ITEM_EDIT',
  Loss = 'LOSS',
  Manufacturing = 'MANUFACTURING',
  OpeningStock = 'OPENING_STOCK',
  Purchase = 'PURCHASE',
  Sale = 'SALE',
  SupplierReturn = 'SUPPLIER_RETURN',
  Transfer = 'TRANSFER'
}

export enum StockHistoryScalarFieldEnum {
  BaseUnitValue = 'base_unit_value',
  BusinessId = 'business_id',
  ClosingAssetValue = 'closing_asset_value',
  ClosingQty = 'closing_qty',
  CreatedAt = 'created_at',
  CumulativeInQty = 'cumulative_in_qty',
  CumulativeOutQty = 'cumulative_out_qty',
  CumulativeSeq = 'cumulative_seq',
  Description = 'description',
  Id = 'id',
  IsOutgoing = 'is_outgoing',
  Qty = 'qty',
  RefDetailId = 'ref_detail_id',
  RefId = 'ref_id',
  RefType = 'ref_type',
  StockDate = 'stock_date',
  StockId = 'stock_id',
  StockTransactionId = 'stock_transaction_id',
  StoreId = 'store_id',
  UpdatedAt = 'updated_at'
}

export type StockHistoryScalarWhereInput = {
  AND?: InputMaybe<Array<StockHistoryScalarWhereInput>>;
  NOT?: InputMaybe<Array<StockHistoryScalarWhereInput>>;
  OR?: InputMaybe<Array<StockHistoryScalarWhereInput>>;
  base_unit_value?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  closing_asset_value?: InputMaybe<DecimalFilter>;
  closing_qty?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  cumulative_in_qty?: InputMaybe<DecimalFilter>;
  cumulative_out_qty?: InputMaybe<DecimalFilter>;
  cumulative_seq?: InputMaybe<BigIntFilter>;
  description?: InputMaybe<StringFilter>;
  id?: InputMaybe<BigIntFilter>;
  is_outgoing?: InputMaybe<BoolFilter>;
  qty?: InputMaybe<DecimalFilter>;
  ref_detail_id?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntNullableFilter>;
  store_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockHistoryScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StockHistoryScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StockHistoryScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StockHistoryScalarWhereWithAggregatesInput>>;
  base_unit_value?: InputMaybe<DecimalWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  closing_asset_value?: InputMaybe<DecimalWithAggregatesFilter>;
  closing_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  cumulative_in_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  cumulative_out_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  cumulative_seq?: InputMaybe<BigIntWithAggregatesFilter>;
  description?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  is_outgoing?: InputMaybe<BoolWithAggregatesFilter>;
  qty?: InputMaybe<DecimalWithAggregatesFilter>;
  ref_detail_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeWithAggregatesFilter>;
  stock_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  stock_transaction_id?: InputMaybe<BigIntNullableWithAggregatesFilter>;
  store_id?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type StockHistorySumAggregate = {
  __typename?: 'StockHistorySumAggregate';
  base_unit_value?: Maybe<Scalars['Decimal']['output']>;
  closing_asset_value?: Maybe<Scalars['Decimal']['output']>;
  closing_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_in_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_out_qty?: Maybe<Scalars['Decimal']['output']>;
  cumulative_seq?: Maybe<Scalars['BigInt']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
};

export type StockHistorySumOrderByAggregateInput = {
  base_unit_value?: InputMaybe<SortOrder>;
  closing_asset_value?: InputMaybe<SortOrder>;
  closing_qty?: InputMaybe<SortOrder>;
  cumulative_in_qty?: InputMaybe<SortOrder>;
  cumulative_out_qty?: InputMaybe<SortOrder>;
  cumulative_seq?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
};

export type StockHistoryUpdateInput = {
  base_unit_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  closing_asset_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  closing_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cumulative_in_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_out_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_seq?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_detail_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  stock?: InputMaybe<ProductStockUpdateOneRequiredWithoutStock_HistoriesNestedInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockHistoryUpdateManyMutationInput = {
  base_unit_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  closing_asset_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  closing_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cumulative_in_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_out_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_seq?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_detail_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockHistoryUpdateManyWithWhereWithoutStockInput = {
  data: StockHistoryUpdateManyMutationInput;
  where: StockHistoryScalarWhereInput;
};

export type StockHistoryUpdateManyWithoutStockNestedInput = {
  connect?: InputMaybe<Array<StockHistoryWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockHistoryCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockHistoryCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockHistoryCreateManyStockInputEnvelope>;
  delete?: InputMaybe<Array<StockHistoryWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockHistoryScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockHistoryWhereUniqueInput>>;
  set?: InputMaybe<Array<StockHistoryWhereUniqueInput>>;
  update?: InputMaybe<Array<StockHistoryUpdateWithWhereUniqueWithoutStockInput>>;
  updateMany?: InputMaybe<Array<StockHistoryUpdateManyWithWhereWithoutStockInput>>;
  upsert?: InputMaybe<Array<StockHistoryUpsertWithWhereUniqueWithoutStockInput>>;
};

export type StockHistoryUpdateWithWhereUniqueWithoutStockInput = {
  data: StockHistoryUpdateWithoutStockInput;
  where: StockHistoryWhereUniqueInput;
};

export type StockHistoryUpdateWithoutStockInput = {
  base_unit_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  closing_asset_value?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  closing_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cumulative_in_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_out_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  cumulative_seq?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  is_outgoing?: InputMaybe<BoolFieldUpdateOperationsInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_detail_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFieldUpdateOperationsInput>;
  stock_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<NullableBigIntFieldUpdateOperationsInput>;
  store_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockHistoryUpsertWithWhereUniqueWithoutStockInput = {
  create: StockHistoryCreateWithoutStockInput;
  update: StockHistoryUpdateWithoutStockInput;
  where: StockHistoryWhereUniqueInput;
};

export type StockHistoryWhereInput = {
  AND?: InputMaybe<Array<StockHistoryWhereInput>>;
  NOT?: InputMaybe<Array<StockHistoryWhereInput>>;
  OR?: InputMaybe<Array<StockHistoryWhereInput>>;
  base_unit_value?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  closing_asset_value?: InputMaybe<DecimalFilter>;
  closing_qty?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  cumulative_in_qty?: InputMaybe<DecimalFilter>;
  cumulative_out_qty?: InputMaybe<DecimalFilter>;
  cumulative_seq?: InputMaybe<BigIntFilter>;
  description?: InputMaybe<StringFilter>;
  id?: InputMaybe<BigIntFilter>;
  is_outgoing?: InputMaybe<BoolFilter>;
  qty?: InputMaybe<DecimalFilter>;
  ref_detail_id?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntNullableFilter>;
  store_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockHistoryWhereUniqueInput = {
  AND?: InputMaybe<Array<StockHistoryWhereInput>>;
  NOT?: InputMaybe<Array<StockHistoryWhereInput>>;
  OR?: InputMaybe<Array<StockHistoryWhereInput>>;
  base_unit_value?: InputMaybe<DecimalFilter>;
  business_id?: InputMaybe<StringFilter>;
  closing_asset_value?: InputMaybe<DecimalFilter>;
  closing_qty?: InputMaybe<DecimalFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  cumulative_in_qty?: InputMaybe<DecimalFilter>;
  cumulative_out_qty?: InputMaybe<DecimalFilter>;
  cumulative_seq?: InputMaybe<BigIntFilter>;
  description?: InputMaybe<StringFilter>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  is_outgoing?: InputMaybe<BoolFilter>;
  qty?: InputMaybe<DecimalFilter>;
  ref_detail_id?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  ref_type?: InputMaybe<EnumStockHistoryRefTypeFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_date?: InputMaybe<DateTimeFilter>;
  stock_id?: InputMaybe<StringFilter>;
  stock_transaction_id?: InputMaybe<BigIntNullableFilter>;
  store_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockSummaryDetail = {
  __typename?: 'StockSummaryDetail';
  closing: Scalars['String']['output'];
  opening: Scalars['String']['output'];
  qty_in: Scalars['String']['output'];
  qty_out: Scalars['String']['output'];
  stock_id: Scalars['String']['output'];
  store_id: Scalars['String']['output'];
};

export type StockSummaryResult = {
  __typename?: 'StockSummaryResult';
  details: Array<StockSummaryDetail>;
  product: Product;
};

export type StockTransaction = {
  __typename?: 'StockTransaction';
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['BigInt']['output'];
  ref_id?: Maybe<Scalars['String']['output']>;
  stock: ProductStock;
  stock_id: Scalars['String']['output'];
  transaction_date: Scalars['DateTime']['output'];
  transaction_qty: Scalars['Decimal']['output'];
  transaction_type: StockTransactionType;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionAvgAggregate = {
  __typename?: 'StockTransactionAvgAggregate';
  id?: Maybe<Scalars['Float']['output']>;
  transaction_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type StockTransactionAvgOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
};

export type StockTransactionCountAggregate = {
  __typename?: 'StockTransactionCountAggregate';
  _all: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  ref_id: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  transaction_date: Scalars['Int']['output'];
  transaction_qty: Scalars['Int']['output'];
  transaction_type: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type StockTransactionCountOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  transaction_date?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
  transaction_type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionCreateInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  stock: ProductStockCreateNestedOneWithoutStock_TransactionsInput;
  transaction_date: Scalars['DateTime']['input'];
  transaction_qty?: InputMaybe<Scalars['Decimal']['input']>;
  transaction_type: StockTransactionType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionCreateManyInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  stock_id: Scalars['String']['input'];
  transaction_date: Scalars['DateTime']['input'];
  transaction_qty?: InputMaybe<Scalars['Decimal']['input']>;
  transaction_type: StockTransactionType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionCreateManyStockInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  transaction_date: Scalars['DateTime']['input'];
  transaction_qty?: InputMaybe<Scalars['Decimal']['input']>;
  transaction_type: StockTransactionType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionCreateManyStockInputEnvelope = {
  data: Array<StockTransactionCreateManyStockInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionCreateNestedManyWithoutStockInput = {
  connect?: InputMaybe<Array<StockTransactionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockTransactionCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockTransactionCreateManyStockInputEnvelope>;
};

export type StockTransactionCreateOrConnectWithoutStockInput = {
  create: StockTransactionCreateWithoutStockInput;
  where: StockTransactionWhereUniqueInput;
};

export type StockTransactionCreateWithoutStockInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  ref_id?: InputMaybe<Scalars['String']['input']>;
  transaction_date: Scalars['DateTime']['input'];
  transaction_qty?: InputMaybe<Scalars['Decimal']['input']>;
  transaction_type: StockTransactionType;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionGroupBy = {
  __typename?: 'StockTransactionGroupBy';
  _avg?: Maybe<StockTransactionAvgAggregate>;
  _count?: Maybe<StockTransactionCountAggregate>;
  _max?: Maybe<StockTransactionMaxAggregate>;
  _min?: Maybe<StockTransactionMinAggregate>;
  _sum?: Maybe<StockTransactionSumAggregate>;
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['BigInt']['output'];
  ref_id?: Maybe<Scalars['String']['output']>;
  stock_id: Scalars['String']['output'];
  transaction_date: Scalars['DateTime']['output'];
  transaction_qty: Scalars['Decimal']['output'];
  transaction_type: StockTransactionType;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionItem = {
  __typename?: 'StockTransactionItem';
  _count?: Maybe<StockTransactionItemCount>;
  c_adjustment?: Maybe<CompositeAdjustment>;
  c_adjustment_id?: Maybe<Scalars['String']['output']>;
  children: Array<StockTransactionItem>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  p_order?: Maybe<PurchaseOrder>;
  p_order_id?: Maybe<Scalars['String']['output']>;
  parent?: Maybe<StockTransactionItem>;
  parent_id?: Maybe<Scalars['String']['output']>;
  qty: Scalars['Decimal']['output'];
  received_qty: Scalars['Decimal']['output'];
  ref_type: StockTransactionItemRefType;
  s_adjustment?: Maybe<StockAdjustment>;
  s_adjustment_id?: Maybe<Scalars['String']['output']>;
  stock?: Maybe<ProductStock>;
  stock_history_id: Scalars['BigInt']['output'];
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id: Scalars['BigInt']['output'];
  t_order?: Maybe<TransferOrder>;
  t_order_id?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_cost: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type StockTransactionItemC_AdjustmentArgs = {
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type StockTransactionItemChildrenArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type StockTransactionItemP_OrderArgs = {
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type StockTransactionItemParentArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};


export type StockTransactionItemS_AdjustmentArgs = {
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type StockTransactionItemStockArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};


export type StockTransactionItemT_OrderArgs = {
  where?: InputMaybe<TransferOrderWhereInput>;
};

export type StockTransactionItemAvgAggregate = {
  __typename?: 'StockTransactionItemAvgAggregate';
  qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  stock_history_id?: Maybe<Scalars['Float']['output']>;
  stock_transaction_id?: Maybe<Scalars['Float']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_cost?: Maybe<Scalars['Decimal']['output']>;
};

export type StockTransactionItemAvgOrderByAggregateInput = {
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
};

export type StockTransactionItemCount = {
  __typename?: 'StockTransactionItemCount';
  children: Scalars['Int']['output'];
};


export type StockTransactionItemCountChildrenArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockTransactionItemCountAggregate = {
  __typename?: 'StockTransactionItemCountAggregate';
  _all: Scalars['Int']['output'];
  c_adjustment_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  p_order_id: Scalars['Int']['output'];
  parent_id: Scalars['Int']['output'];
  qty: Scalars['Int']['output'];
  received_qty: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  s_adjustment_id: Scalars['Int']['output'];
  stock_history_id: Scalars['Int']['output'];
  stock_id: Scalars['Int']['output'];
  stock_transaction_id: Scalars['Int']['output'];
  t_order_id: Scalars['Int']['output'];
  total_amount: Scalars['Int']['output'];
  unit_cost: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type StockTransactionItemCountOrderByAggregateInput = {
  c_adjustment_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  p_order_id?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  s_adjustment_id?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  t_order_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionItemCreateInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyC_AdjustmentInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyC_AdjustmentInputEnvelope = {
  data: Array<StockTransactionItemCreateManyC_AdjustmentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateManyInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyP_OrderInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyP_OrderInputEnvelope = {
  data: Array<StockTransactionItemCreateManyP_OrderInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateManyParentInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyParentInputEnvelope = {
  data: Array<StockTransactionItemCreateManyParentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateManyS_AdjustmentInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyS_AdjustmentInputEnvelope = {
  data: Array<StockTransactionItemCreateManyS_AdjustmentInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateManyStockInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order_id?: InputMaybe<Scalars['String']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyStockInputEnvelope = {
  data: Array<StockTransactionItemCreateManyStockInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateManyT_OrderInput = {
  c_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order_id?: InputMaybe<Scalars['String']['input']>;
  parent_id?: InputMaybe<Scalars['String']['input']>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: InputMaybe<Scalars['String']['input']>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_id?: InputMaybe<Scalars['String']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateManyT_OrderInputEnvelope = {
  data: Array<StockTransactionItemCreateManyT_OrderInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StockTransactionItemCreateNestedManyWithoutC_AdjustmentInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutC_AdjustmentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutC_AdjustmentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyC_AdjustmentInputEnvelope>;
};

export type StockTransactionItemCreateNestedManyWithoutP_OrderInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutP_OrderInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutP_OrderInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyP_OrderInputEnvelope>;
};

export type StockTransactionItemCreateNestedManyWithoutParentInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutParentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutParentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyParentInputEnvelope>;
};

export type StockTransactionItemCreateNestedManyWithoutS_AdjustmentInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutS_AdjustmentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutS_AdjustmentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyS_AdjustmentInputEnvelope>;
};

export type StockTransactionItemCreateNestedManyWithoutStockInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyStockInputEnvelope>;
};

export type StockTransactionItemCreateNestedManyWithoutT_OrderInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutT_OrderInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutT_OrderInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyT_OrderInputEnvelope>;
};

export type StockTransactionItemCreateNestedOneWithoutChildrenInput = {
  connect?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StockTransactionItemCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<StockTransactionItemCreateWithoutChildrenInput>;
};

export type StockTransactionItemCreateOrConnectWithoutC_AdjustmentInput = {
  create: StockTransactionItemCreateWithoutC_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutChildrenInput = {
  create: StockTransactionItemCreateWithoutChildrenInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutP_OrderInput = {
  create: StockTransactionItemCreateWithoutP_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutParentInput = {
  create: StockTransactionItemCreateWithoutParentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutS_AdjustmentInput = {
  create: StockTransactionItemCreateWithoutS_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutStockInput = {
  create: StockTransactionItemCreateWithoutStockInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateOrConnectWithoutT_OrderInput = {
  create: StockTransactionItemCreateWithoutT_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemCreateWithoutC_AdjustmentInput = {
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutChildrenInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutP_OrderInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutParentInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutS_AdjustmentInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutStockInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  t_order?: InputMaybe<TransferOrderCreateNestedOneWithoutItemsInput>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemCreateWithoutT_OrderInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentCreateNestedOneWithoutItemsInput>;
  children?: InputMaybe<StockTransactionItemCreateNestedManyWithoutParentInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderCreateNestedOneWithoutItemsInput>;
  parent?: InputMaybe<StockTransactionItemCreateNestedOneWithoutChildrenInput>;
  qty?: InputMaybe<Scalars['Decimal']['input']>;
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  ref_type: StockTransactionItemRefType;
  s_adjustment?: InputMaybe<StockAdjustmentCreateNestedOneWithoutItemsInput>;
  stock?: InputMaybe<ProductStockCreateNestedOneWithoutStock_Transaction_ItemsInput>;
  stock_history_id?: InputMaybe<Scalars['BigInt']['input']>;
  stock_transaction_id?: InputMaybe<Scalars['BigInt']['input']>;
  total_amount?: InputMaybe<Scalars['Decimal']['input']>;
  unit_cost?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StockTransactionItemGroupBy = {
  __typename?: 'StockTransactionItemGroupBy';
  _avg?: Maybe<StockTransactionItemAvgAggregate>;
  _count?: Maybe<StockTransactionItemCountAggregate>;
  _max?: Maybe<StockTransactionItemMaxAggregate>;
  _min?: Maybe<StockTransactionItemMinAggregate>;
  _sum?: Maybe<StockTransactionItemSumAggregate>;
  c_adjustment_id?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  p_order_id?: Maybe<Scalars['String']['output']>;
  parent_id?: Maybe<Scalars['String']['output']>;
  qty: Scalars['Decimal']['output'];
  received_qty: Scalars['Decimal']['output'];
  ref_type: StockTransactionItemRefType;
  s_adjustment_id?: Maybe<Scalars['String']['output']>;
  stock_history_id: Scalars['BigInt']['output'];
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id: Scalars['BigInt']['output'];
  t_order_id?: Maybe<Scalars['String']['output']>;
  total_amount: Scalars['Decimal']['output'];
  unit_cost: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionItemListRelationFilter = {
  every?: InputMaybe<StockTransactionItemWhereInput>;
  none?: InputMaybe<StockTransactionItemWhereInput>;
  some?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockTransactionItemMaxAggregate = {
  __typename?: 'StockTransactionItemMaxAggregate';
  c_adjustment_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  p_order_id?: Maybe<Scalars['String']['output']>;
  parent_id?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  ref_type?: Maybe<StockTransactionItemRefType>;
  s_adjustment_id?: Maybe<Scalars['String']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  t_order_id?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_cost?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionItemMaxOrderByAggregateInput = {
  c_adjustment_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  p_order_id?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  s_adjustment_id?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  t_order_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionItemMinAggregate = {
  __typename?: 'StockTransactionItemMinAggregate';
  c_adjustment_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  p_order_id?: Maybe<Scalars['String']['output']>;
  parent_id?: Maybe<Scalars['String']['output']>;
  qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  ref_type?: Maybe<StockTransactionItemRefType>;
  s_adjustment_id?: Maybe<Scalars['String']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  t_order_id?: Maybe<Scalars['String']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_cost?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionItemMinOrderByAggregateInput = {
  c_adjustment_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  p_order_id?: InputMaybe<SortOrder>;
  parent_id?: InputMaybe<SortOrder>;
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  s_adjustment_id?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  t_order_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionItemNullableRelationFilter = {
  is?: InputMaybe<StockTransactionItemWhereInput>;
  isNot?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockTransactionItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type StockTransactionItemOrderByWithAggregationInput = {
  _avg?: InputMaybe<StockTransactionItemAvgOrderByAggregateInput>;
  _count?: InputMaybe<StockTransactionItemCountOrderByAggregateInput>;
  _max?: InputMaybe<StockTransactionItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<StockTransactionItemMinOrderByAggregateInput>;
  _sum?: InputMaybe<StockTransactionItemSumOrderByAggregateInput>;
  c_adjustment_id?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  p_order_id?: InputMaybe<SortOrderInput>;
  parent_id?: InputMaybe<SortOrderInput>;
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  s_adjustment_id?: InputMaybe<SortOrderInput>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrderInput>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  t_order_id?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type StockTransactionItemOrderByWithRelationInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentOrderByWithRelationInput>;
  c_adjustment_id?: InputMaybe<SortOrderInput>;
  children?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  p_order?: InputMaybe<PurchaseOrderOrderByWithRelationInput>;
  p_order_id?: InputMaybe<SortOrderInput>;
  parent?: InputMaybe<StockTransactionItemOrderByWithRelationInput>;
  parent_id?: InputMaybe<SortOrderInput>;
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  s_adjustment?: InputMaybe<StockAdjustmentOrderByWithRelationInput>;
  s_adjustment_id?: InputMaybe<SortOrderInput>;
  stock?: InputMaybe<ProductStockOrderByWithRelationInput>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrderInput>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  t_order?: InputMaybe<TransferOrderOrderByWithRelationInput>;
  t_order_id?: InputMaybe<SortOrderInput>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum StockTransactionItemRefType {
  Ca = 'CA',
  Po = 'PO',
  Sa = 'SA',
  To = 'TO'
}

export enum StockTransactionItemScalarFieldEnum {
  CAdjustmentId = 'c_adjustment_id',
  CreatedAt = 'created_at',
  Id = 'id',
  POrderId = 'p_order_id',
  ParentId = 'parent_id',
  Qty = 'qty',
  ReceivedQty = 'received_qty',
  RefType = 'ref_type',
  SAdjustmentId = 's_adjustment_id',
  StockHistoryId = 'stock_history_id',
  StockId = 'stock_id',
  StockTransactionId = 'stock_transaction_id',
  TOrderId = 't_order_id',
  TotalAmount = 'total_amount',
  UnitCost = 'unit_cost',
  UpdatedAt = 'updated_at'
}

export type StockTransactionItemScalarWhereInput = {
  AND?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  c_adjustment_id?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  p_order_id?: InputMaybe<StringNullableFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFilter>;
  s_adjustment_id?: InputMaybe<StringNullableFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringNullableFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  t_order_id?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_cost?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockTransactionItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StockTransactionItemScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StockTransactionItemScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StockTransactionItemScalarWhereWithAggregatesInput>>;
  c_adjustment_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  p_order_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  parent_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  qty?: InputMaybe<DecimalWithAggregatesFilter>;
  received_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeWithAggregatesFilter>;
  s_adjustment_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  stock_history_id?: InputMaybe<BigIntWithAggregatesFilter>;
  stock_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  stock_transaction_id?: InputMaybe<BigIntWithAggregatesFilter>;
  t_order_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  total_amount?: InputMaybe<DecimalWithAggregatesFilter>;
  unit_cost?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type StockTransactionItemSumAggregate = {
  __typename?: 'StockTransactionItemSumAggregate';
  qty?: Maybe<Scalars['Decimal']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  stock_history_id?: Maybe<Scalars['BigInt']['output']>;
  stock_transaction_id?: Maybe<Scalars['BigInt']['output']>;
  total_amount?: Maybe<Scalars['Decimal']['output']>;
  unit_cost?: Maybe<Scalars['Decimal']['output']>;
};

export type StockTransactionItemSumOrderByAggregateInput = {
  qty?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  stock_history_id?: InputMaybe<SortOrder>;
  stock_transaction_id?: InputMaybe<SortOrder>;
  total_amount?: InputMaybe<SortOrder>;
  unit_cost?: InputMaybe<SortOrder>;
};

export type StockTransactionItemUpdateInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateManyWithWhereWithoutC_AdjustmentInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithWhereWithoutP_OrderInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithWhereWithoutParentInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithWhereWithoutS_AdjustmentInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithWhereWithoutStockInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithWhereWithoutT_OrderInput = {
  data: StockTransactionItemUpdateManyMutationInput;
  where: StockTransactionItemScalarWhereInput;
};

export type StockTransactionItemUpdateManyWithoutC_AdjustmentNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutC_AdjustmentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutC_AdjustmentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyC_AdjustmentInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutC_AdjustmentInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutC_AdjustmentInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutC_AdjustmentInput>>;
};

export type StockTransactionItemUpdateManyWithoutP_OrderNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutP_OrderInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutP_OrderInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyP_OrderInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutP_OrderInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutP_OrderInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutP_OrderInput>>;
};

export type StockTransactionItemUpdateManyWithoutParentNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutParentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutParentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyParentInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutParentInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutParentInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutParentInput>>;
};

export type StockTransactionItemUpdateManyWithoutS_AdjustmentNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutS_AdjustmentInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutS_AdjustmentInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyS_AdjustmentInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutS_AdjustmentInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutS_AdjustmentInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutS_AdjustmentInput>>;
};

export type StockTransactionItemUpdateManyWithoutStockNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyStockInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutStockInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutStockInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutStockInput>>;
};

export type StockTransactionItemUpdateManyWithoutT_OrderNestedInput = {
  connect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionItemCreateOrConnectWithoutT_OrderInput>>;
  create?: InputMaybe<Array<StockTransactionItemCreateWithoutT_OrderInput>>;
  createMany?: InputMaybe<StockTransactionItemCreateManyT_OrderInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionItemScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionItemWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionItemUpdateWithWhereUniqueWithoutT_OrderInput>>;
  updateMany?: InputMaybe<Array<StockTransactionItemUpdateManyWithWhereWithoutT_OrderInput>>;
  upsert?: InputMaybe<Array<StockTransactionItemUpsertWithWhereUniqueWithoutT_OrderInput>>;
};

export type StockTransactionItemUpdateOneWithoutChildrenNestedInput = {
  connect?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StockTransactionItemCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<StockTransactionItemCreateWithoutChildrenInput>;
  delete?: InputMaybe<StockTransactionItemWhereInput>;
  disconnect?: InputMaybe<StockTransactionItemWhereInput>;
  update?: InputMaybe<StockTransactionItemUpdateToOneWithWhereWithoutChildrenInput>;
  upsert?: InputMaybe<StockTransactionItemUpsertWithoutChildrenInput>;
};

export type StockTransactionItemUpdateToOneWithWhereWithoutChildrenInput = {
  data: StockTransactionItemUpdateWithoutChildrenInput;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutC_AdjustmentInput = {
  data: StockTransactionItemUpdateWithoutC_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutP_OrderInput = {
  data: StockTransactionItemUpdateWithoutP_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutParentInput = {
  data: StockTransactionItemUpdateWithoutParentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutS_AdjustmentInput = {
  data: StockTransactionItemUpdateWithoutS_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutStockInput = {
  data: StockTransactionItemUpdateWithoutStockInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithWhereUniqueWithoutT_OrderInput = {
  data: StockTransactionItemUpdateWithoutT_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpdateWithoutC_AdjustmentInput = {
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutChildrenInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutP_OrderInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutParentInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutS_AdjustmentInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutStockInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  t_order?: InputMaybe<TransferOrderUpdateOneWithoutItemsNestedInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpdateWithoutT_OrderInput = {
  c_adjustment?: InputMaybe<CompositeAdjustmentUpdateOneWithoutItemsNestedInput>;
  children?: InputMaybe<StockTransactionItemUpdateManyWithoutParentNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  p_order?: InputMaybe<PurchaseOrderUpdateOneWithoutItemsNestedInput>;
  parent?: InputMaybe<StockTransactionItemUpdateOneWithoutChildrenNestedInput>;
  qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFieldUpdateOperationsInput>;
  s_adjustment?: InputMaybe<StockAdjustmentUpdateOneWithoutItemsNestedInput>;
  stock?: InputMaybe<ProductStockUpdateOneWithoutStock_Transaction_ItemsNestedInput>;
  stock_history_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  stock_transaction_id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  total_amount?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  unit_cost?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutC_AdjustmentInput = {
  create: StockTransactionItemCreateWithoutC_AdjustmentInput;
  update: StockTransactionItemUpdateWithoutC_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutP_OrderInput = {
  create: StockTransactionItemCreateWithoutP_OrderInput;
  update: StockTransactionItemUpdateWithoutP_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutParentInput = {
  create: StockTransactionItemCreateWithoutParentInput;
  update: StockTransactionItemUpdateWithoutParentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutS_AdjustmentInput = {
  create: StockTransactionItemCreateWithoutS_AdjustmentInput;
  update: StockTransactionItemUpdateWithoutS_AdjustmentInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutStockInput = {
  create: StockTransactionItemCreateWithoutStockInput;
  update: StockTransactionItemUpdateWithoutStockInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithWhereUniqueWithoutT_OrderInput = {
  create: StockTransactionItemCreateWithoutT_OrderInput;
  update: StockTransactionItemUpdateWithoutT_OrderInput;
  where: StockTransactionItemWhereUniqueInput;
};

export type StockTransactionItemUpsertWithoutChildrenInput = {
  create: StockTransactionItemCreateWithoutChildrenInput;
  update: StockTransactionItemUpdateWithoutChildrenInput;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type StockTransactionItemWhereInput = {
  AND?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  c_adjustment?: InputMaybe<CompositeAdjustmentNullableRelationFilter>;
  c_adjustment_id?: InputMaybe<StringNullableFilter>;
  children?: InputMaybe<StockTransactionItemListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  p_order?: InputMaybe<PurchaseOrderNullableRelationFilter>;
  p_order_id?: InputMaybe<StringNullableFilter>;
  parent?: InputMaybe<StockTransactionItemNullableRelationFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFilter>;
  s_adjustment?: InputMaybe<StockAdjustmentNullableRelationFilter>;
  s_adjustment_id?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<ProductStockNullableRelationFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringNullableFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  t_order?: InputMaybe<TransferOrderNullableRelationFilter>;
  t_order_id?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_cost?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockTransactionItemWhereUniqueInput = {
  AND?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionItemWhereInput>>;
  c_adjustment?: InputMaybe<CompositeAdjustmentNullableRelationFilter>;
  c_adjustment_id?: InputMaybe<StringNullableFilter>;
  children?: InputMaybe<StockTransactionItemListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  p_order?: InputMaybe<PurchaseOrderNullableRelationFilter>;
  p_order_id?: InputMaybe<StringNullableFilter>;
  parent?: InputMaybe<StockTransactionItemNullableRelationFilter>;
  parent_id?: InputMaybe<StringNullableFilter>;
  qty?: InputMaybe<DecimalFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  ref_type?: InputMaybe<EnumStockTransactionItemRefTypeFilter>;
  s_adjustment?: InputMaybe<StockAdjustmentNullableRelationFilter>;
  s_adjustment_id?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<ProductStockNullableRelationFilter>;
  stock_history_id?: InputMaybe<BigIntFilter>;
  stock_id?: InputMaybe<StringNullableFilter>;
  stock_transaction_id?: InputMaybe<BigIntFilter>;
  t_order?: InputMaybe<TransferOrderNullableRelationFilter>;
  t_order_id?: InputMaybe<StringNullableFilter>;
  total_amount?: InputMaybe<DecimalFilter>;
  unit_cost?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockTransactionListRelationFilter = {
  every?: InputMaybe<StockTransactionWhereInput>;
  none?: InputMaybe<StockTransactionWhereInput>;
  some?: InputMaybe<StockTransactionWhereInput>;
};

export type StockTransactionMaxAggregate = {
  __typename?: 'StockTransactionMaxAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  transaction_date?: Maybe<Scalars['DateTime']['output']>;
  transaction_qty?: Maybe<Scalars['Decimal']['output']>;
  transaction_type?: Maybe<StockTransactionType>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionMaxOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  transaction_date?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
  transaction_type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionMinAggregate = {
  __typename?: 'StockTransactionMinAggregate';
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['BigInt']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  stock_id?: Maybe<Scalars['String']['output']>;
  transaction_date?: Maybe<Scalars['DateTime']['output']>;
  transaction_qty?: Maybe<Scalars['Decimal']['output']>;
  transaction_type?: Maybe<StockTransactionType>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StockTransactionMinOrderByAggregateInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  stock_id?: InputMaybe<SortOrder>;
  transaction_date?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
  transaction_type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StockTransactionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type StockTransactionOrderByWithAggregationInput = {
  _avg?: InputMaybe<StockTransactionAvgOrderByAggregateInput>;
  _count?: InputMaybe<StockTransactionCountOrderByAggregateInput>;
  _max?: InputMaybe<StockTransactionMaxOrderByAggregateInput>;
  _min?: InputMaybe<StockTransactionMinOrderByAggregateInput>;
  _sum?: InputMaybe<StockTransactionSumOrderByAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrderInput>;
  stock_id?: InputMaybe<SortOrder>;
  transaction_date?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
  transaction_type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type StockTransactionOrderByWithRelationInput = {
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrderInput>;
  stock?: InputMaybe<ProductStockOrderByWithRelationInput>;
  stock_id?: InputMaybe<SortOrder>;
  transaction_date?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
  transaction_type?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum StockTransactionScalarFieldEnum {
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  RefId = 'ref_id',
  StockId = 'stock_id',
  TransactionDate = 'transaction_date',
  TransactionQty = 'transaction_qty',
  TransactionType = 'transaction_type',
  UpdatedAt = 'updated_at'
}

export type StockTransactionScalarWhereInput = {
  AND?: InputMaybe<Array<StockTransactionScalarWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionScalarWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionScalarWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  stock_id?: InputMaybe<StringFilter>;
  transaction_date?: InputMaybe<DateTimeFilter>;
  transaction_qty?: InputMaybe<DecimalFilter>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockTransactionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StockTransactionScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StockTransactionScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StockTransactionScalarWhereWithAggregatesInput>>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<BigIntWithAggregatesFilter>;
  ref_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  stock_id?: InputMaybe<StringWithAggregatesFilter>;
  transaction_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  transaction_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type StockTransactionSumAggregate = {
  __typename?: 'StockTransactionSumAggregate';
  id?: Maybe<Scalars['BigInt']['output']>;
  transaction_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type StockTransactionSumOrderByAggregateInput = {
  id?: InputMaybe<SortOrder>;
  transaction_qty?: InputMaybe<SortOrder>;
};

export enum StockTransactionType {
  AdjustedQtyIn = 'adjusted_qty_in',
  AdjustedQtyOut = 'adjusted_qty_out',
  CommittedQty = 'committed_qty',
  OpeningQty = 'opening_qty',
  OrderQty = 'order_qty',
  ReceivedQty = 'received_qty',
  SaleQty = 'sale_qty',
  TransferQtyIn = 'transfer_qty_in',
  TransferQtyOut = 'transfer_qty_out'
}

export type StockTransactionUpdateInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stock?: InputMaybe<ProductStockUpdateOneRequiredWithoutStock_TransactionsNestedInput>;
  transaction_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  transaction_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transaction_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  transaction_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionUpdateManyWithWhereWithoutStockInput = {
  data: StockTransactionUpdateManyMutationInput;
  where: StockTransactionScalarWhereInput;
};

export type StockTransactionUpdateManyWithoutStockNestedInput = {
  connect?: InputMaybe<Array<StockTransactionWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StockTransactionCreateOrConnectWithoutStockInput>>;
  create?: InputMaybe<Array<StockTransactionCreateWithoutStockInput>>;
  createMany?: InputMaybe<StockTransactionCreateManyStockInputEnvelope>;
  delete?: InputMaybe<Array<StockTransactionWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StockTransactionScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StockTransactionWhereUniqueInput>>;
  set?: InputMaybe<Array<StockTransactionWhereUniqueInput>>;
  update?: InputMaybe<Array<StockTransactionUpdateWithWhereUniqueWithoutStockInput>>;
  updateMany?: InputMaybe<Array<StockTransactionUpdateManyWithWhereWithoutStockInput>>;
  upsert?: InputMaybe<Array<StockTransactionUpsertWithWhereUniqueWithoutStockInput>>;
};

export type StockTransactionUpdateWithWhereUniqueWithoutStockInput = {
  data: StockTransactionUpdateWithoutStockInput;
  where: StockTransactionWhereUniqueInput;
};

export type StockTransactionUpdateWithoutStockInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<BigIntFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transaction_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  transaction_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StockTransactionUpsertWithWhereUniqueWithoutStockInput = {
  create: StockTransactionCreateWithoutStockInput;
  update: StockTransactionUpdateWithoutStockInput;
  where: StockTransactionWhereUniqueInput;
};

export type StockTransactionWhereInput = {
  AND?: InputMaybe<Array<StockTransactionWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<BigIntFilter>;
  ref_id?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_id?: InputMaybe<StringFilter>;
  transaction_date?: InputMaybe<DateTimeFilter>;
  transaction_qty?: InputMaybe<DecimalFilter>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StockTransactionWhereUniqueInput = {
  AND?: InputMaybe<Array<StockTransactionWhereInput>>;
  NOT?: InputMaybe<Array<StockTransactionWhereInput>>;
  OR?: InputMaybe<Array<StockTransactionWhereInput>>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['BigInt']['input']>;
  ref_id?: InputMaybe<StringNullableFilter>;
  stock?: InputMaybe<ProductStockRelationFilter>;
  stock_id?: InputMaybe<StringFilter>;
  transaction_date?: InputMaybe<DateTimeFilter>;
  transaction_qty?: InputMaybe<DecimalFilter>;
  transaction_type?: InputMaybe<EnumStockTransactionTypeFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type Store = {
  __typename?: 'Store';
  _count?: Maybe<StoreCount>;
  business: Business;
  business_id: Scalars['String']['output'];
  composite_adjustments: Array<CompositeAdjustment>;
  created_at: Scalars['DateTime']['output'];
  daily_sales: Array<DailySale>;
  from_transfer_orders: Array<TransferOrder>;
  id: Scalars['String']['output'];
  is_default?: Maybe<Business>;
  location: Location;
  location_id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  payment_methods: Array<PaymentMethod>;
  product_stocks: Array<ProductStock>;
  purchase_orders: Array<PurchaseOrder>;
  sale_channels: Array<SaleChannel>;
  sales: Array<Sale>;
  stock_adjustments: Array<StockAdjustment>;
  to_transfer_orders: Array<TransferOrder>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  users: Array<User>;
};


export type StoreComposite_AdjustmentsArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type StoreDaily_SalesArgs = {
  cursor?: InputMaybe<DailySaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<DailySaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<DailySaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<DailySaleWhereInput>;
};


export type StoreFrom_Transfer_OrdersArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type StoreIs_DefaultArgs = {
  where?: InputMaybe<BusinessWhereInput>;
};


export type StorePayment_MethodsArgs = {
  cursor?: InputMaybe<PaymentMethodWhereUniqueInput>;
  distinct?: InputMaybe<Array<PaymentMethodScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PaymentMethodOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type StoreProduct_StocksArgs = {
  cursor?: InputMaybe<ProductStockWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductStockScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductStockOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductStockWhereInput>;
};


export type StorePurchase_OrdersArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type StoreSale_ChannelsArgs = {
  cursor?: InputMaybe<SaleChannelWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleChannelScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleChannelOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type StoreSalesArgs = {
  cursor?: InputMaybe<SaleWhereUniqueInput>;
  distinct?: InputMaybe<Array<SaleScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SaleOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SaleWhereInput>;
};


export type StoreStock_AdjustmentsArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type StoreTo_Transfer_OrdersArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type StoreUsersArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<UserScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<UserWhereInput>;
};

export type StoreCount = {
  __typename?: 'StoreCount';
  composite_adjustments: Scalars['Int']['output'];
  daily_sales: Scalars['Int']['output'];
  from_transfer_orders: Scalars['Int']['output'];
  payment_methods: Scalars['Int']['output'];
  product_stocks: Scalars['Int']['output'];
  purchase_orders: Scalars['Int']['output'];
  sale_channels: Scalars['Int']['output'];
  sales: Scalars['Int']['output'];
  stock_adjustments: Scalars['Int']['output'];
  to_transfer_orders: Scalars['Int']['output'];
  users: Scalars['Int']['output'];
};


export type StoreCountComposite_AdjustmentsArgs = {
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type StoreCountDaily_SalesArgs = {
  where?: InputMaybe<DailySaleWhereInput>;
};


export type StoreCountFrom_Transfer_OrdersArgs = {
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type StoreCountPayment_MethodsArgs = {
  where?: InputMaybe<PaymentMethodWhereInput>;
};


export type StoreCountProduct_StocksArgs = {
  where?: InputMaybe<ProductStockWhereInput>;
};


export type StoreCountPurchase_OrdersArgs = {
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type StoreCountSale_ChannelsArgs = {
  where?: InputMaybe<SaleChannelWhereInput>;
};


export type StoreCountSalesArgs = {
  where?: InputMaybe<SaleWhereInput>;
};


export type StoreCountStock_AdjustmentsArgs = {
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type StoreCountTo_Transfer_OrdersArgs = {
  where?: InputMaybe<TransferOrderWhereInput>;
};


export type StoreCountUsersArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type StoreCountAggregate = {
  __typename?: 'StoreCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  location_id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type StoreCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StoreCreateInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateManyBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  location_id: Scalars['String']['input'];
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StoreCreateManyBusinessInputEnvelope = {
  data: Array<StoreCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StoreCreateManyInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  location_id: Scalars['String']['input'];
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StoreCreateManyLocationInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StoreCreateManyLocationInputEnvelope = {
  data: Array<StoreCreateManyLocationInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type StoreCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<StoreCreateManyBusinessInputEnvelope>;
};

export type StoreCreateNestedManyWithoutLocationInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutLocationInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutLocationInput>>;
  createMany?: InputMaybe<StoreCreateManyLocationInputEnvelope>;
};

export type StoreCreateNestedManyWithoutPayment_MethodsInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutPayment_MethodsInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutPayment_MethodsInput>>;
};

export type StoreCreateNestedManyWithoutUsersInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutUsersInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutUsersInput>>;
};

export type StoreCreateNestedOneWithoutComposite_AdjustmentsInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutComposite_AdjustmentsInput>;
  create?: InputMaybe<StoreCreateWithoutComposite_AdjustmentsInput>;
};

export type StoreCreateNestedOneWithoutDaily_SalesInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutDaily_SalesInput>;
  create?: InputMaybe<StoreCreateWithoutDaily_SalesInput>;
};

export type StoreCreateNestedOneWithoutFrom_Transfer_OrdersInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutFrom_Transfer_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutFrom_Transfer_OrdersInput>;
};

export type StoreCreateNestedOneWithoutIs_DefaultInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<StoreCreateWithoutIs_DefaultInput>;
};

export type StoreCreateNestedOneWithoutProduct_StocksInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutProduct_StocksInput>;
  create?: InputMaybe<StoreCreateWithoutProduct_StocksInput>;
};

export type StoreCreateNestedOneWithoutPurchase_OrdersInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutPurchase_OrdersInput>;
};

export type StoreCreateNestedOneWithoutSale_ChannelsInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutSale_ChannelsInput>;
  create?: InputMaybe<StoreCreateWithoutSale_ChannelsInput>;
};

export type StoreCreateNestedOneWithoutSalesInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<StoreCreateWithoutSalesInput>;
};

export type StoreCreateNestedOneWithoutStock_AdjustmentsInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutStock_AdjustmentsInput>;
  create?: InputMaybe<StoreCreateWithoutStock_AdjustmentsInput>;
};

export type StoreCreateNestedOneWithoutTo_Transfer_OrdersInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutTo_Transfer_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutTo_Transfer_OrdersInput>;
};

export type StoreCreateOrConnectWithoutBusinessInput = {
  create: StoreCreateWithoutBusinessInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutComposite_AdjustmentsInput = {
  create: StoreCreateWithoutComposite_AdjustmentsInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutDaily_SalesInput = {
  create: StoreCreateWithoutDaily_SalesInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutFrom_Transfer_OrdersInput = {
  create: StoreCreateWithoutFrom_Transfer_OrdersInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutIs_DefaultInput = {
  create: StoreCreateWithoutIs_DefaultInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutLocationInput = {
  create: StoreCreateWithoutLocationInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutPayment_MethodsInput = {
  create: StoreCreateWithoutPayment_MethodsInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutProduct_StocksInput = {
  create: StoreCreateWithoutProduct_StocksInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutPurchase_OrdersInput = {
  create: StoreCreateWithoutPurchase_OrdersInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutSale_ChannelsInput = {
  create: StoreCreateWithoutSale_ChannelsInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutSalesInput = {
  create: StoreCreateWithoutSalesInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutStock_AdjustmentsInput = {
  create: StoreCreateWithoutStock_AdjustmentsInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutTo_Transfer_OrdersInput = {
  create: StoreCreateWithoutTo_Transfer_OrdersInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateOrConnectWithoutUsersInput = {
  create: StoreCreateWithoutUsersInput;
  where: StoreWhereUniqueInput;
};

export type StoreCreateWithoutBusinessInput = {
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutComposite_AdjustmentsInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutDaily_SalesInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutFrom_Transfer_OrdersInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutIs_DefaultInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutLocationInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutPayment_MethodsInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutProduct_StocksInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutPurchase_OrdersInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutSale_ChannelsInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutSalesInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutStock_AdjustmentsInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutTo_Transfer_OrdersInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  users?: InputMaybe<UserCreateNestedManyWithoutStoresInput>;
};

export type StoreCreateWithoutUsersInput = {
  business: BusinessCreateNestedOneWithoutStoresInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutStoreInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  daily_sales?: InputMaybe<DailySaleCreateNestedManyWithoutStoreInput>;
  from_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutFrom_StoreInput>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessCreateNestedOneWithoutDefault_StoreInput>;
  location: LocationCreateNestedOneWithoutStoresInput;
  name: Scalars['String']['input'];
  payment_methods?: InputMaybe<PaymentMethodCreateNestedManyWithoutStoresInput>;
  product_stocks?: InputMaybe<ProductStockCreateNestedManyWithoutStoreInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutStoreInput>;
  sale_channels?: InputMaybe<SaleChannelCreateNestedManyWithoutStoreInput>;
  sales?: InputMaybe<SaleCreateNestedManyWithoutStoreInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutStoreInput>;
  to_transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutTo_StoreInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type StoreGroupBy = {
  __typename?: 'StoreGroupBy';
  _count?: Maybe<StoreCountAggregate>;
  _max?: Maybe<StoreMaxAggregate>;
  _min?: Maybe<StoreMinAggregate>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  location_id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StoreInventoryResult = {
  __typename?: 'StoreInventoryResult';
  details: Array<DailyStock>;
  product: Product;
};

export type StoreListRelationFilter = {
  every?: InputMaybe<StoreWhereInput>;
  none?: InputMaybe<StoreWhereInput>;
  some?: InputMaybe<StoreWhereInput>;
};

export type StoreMaxAggregate = {
  __typename?: 'StoreMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  location_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StoreMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StoreMinAggregate = {
  __typename?: 'StoreMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  location_id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type StoreMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type StoreNullableRelationFilter = {
  is?: InputMaybe<StoreWhereInput>;
  isNot?: InputMaybe<StoreWhereInput>;
};

export type StoreOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type StoreOrderByWithAggregationInput = {
  _count?: InputMaybe<StoreCountOrderByAggregateInput>;
  _max?: InputMaybe<StoreMaxOrderByAggregateInput>;
  _min?: InputMaybe<StoreMinOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  location_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type StoreOrderByWithRelationInput = {
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  daily_sales?: InputMaybe<DailySaleOrderByRelationAggregateInput>;
  from_transfer_orders?: InputMaybe<TransferOrderOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  is_default?: InputMaybe<BusinessOrderByWithRelationInput>;
  location?: InputMaybe<LocationOrderByWithRelationInput>;
  location_id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  payment_methods?: InputMaybe<PaymentMethodOrderByRelationAggregateInput>;
  product_stocks?: InputMaybe<ProductStockOrderByRelationAggregateInput>;
  purchase_orders?: InputMaybe<PurchaseOrderOrderByRelationAggregateInput>;
  sale_channels?: InputMaybe<SaleChannelOrderByRelationAggregateInput>;
  sales?: InputMaybe<SaleOrderByRelationAggregateInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentOrderByRelationAggregateInput>;
  to_transfer_orders?: InputMaybe<TransferOrderOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
  users?: InputMaybe<UserOrderByRelationAggregateInput>;
};

export type StoreRelationFilter = {
  is?: InputMaybe<StoreWhereInput>;
  isNot?: InputMaybe<StoreWhereInput>;
};

export enum StoreScalarFieldEnum {
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Id = 'id',
  LocationId = 'location_id',
  Name = 'name',
  UpdatedAt = 'updated_at'
}

export type StoreScalarWhereInput = {
  AND?: InputMaybe<Array<StoreScalarWhereInput>>;
  NOT?: InputMaybe<Array<StoreScalarWhereInput>>;
  OR?: InputMaybe<Array<StoreScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  location_id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type StoreScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<StoreScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<StoreScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<StoreScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  location_id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type StoreUpdateInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StoreUpdateManyWithWhereWithoutBusinessInput = {
  data: StoreUpdateManyMutationInput;
  where: StoreScalarWhereInput;
};

export type StoreUpdateManyWithWhereWithoutLocationInput = {
  data: StoreUpdateManyMutationInput;
  where: StoreScalarWhereInput;
};

export type StoreUpdateManyWithWhereWithoutPayment_MethodsInput = {
  data: StoreUpdateManyMutationInput;
  where: StoreScalarWhereInput;
};

export type StoreUpdateManyWithWhereWithoutUsersInput = {
  data: StoreUpdateManyMutationInput;
  where: StoreScalarWhereInput;
};

export type StoreUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<StoreCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<StoreWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StoreScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  set?: InputMaybe<Array<StoreWhereUniqueInput>>;
  update?: InputMaybe<Array<StoreUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<StoreUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<StoreUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type StoreUpdateManyWithoutLocationNestedInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutLocationInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutLocationInput>>;
  createMany?: InputMaybe<StoreCreateManyLocationInputEnvelope>;
  delete?: InputMaybe<Array<StoreWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StoreScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  set?: InputMaybe<Array<StoreWhereUniqueInput>>;
  update?: InputMaybe<Array<StoreUpdateWithWhereUniqueWithoutLocationInput>>;
  updateMany?: InputMaybe<Array<StoreUpdateManyWithWhereWithoutLocationInput>>;
  upsert?: InputMaybe<Array<StoreUpsertWithWhereUniqueWithoutLocationInput>>;
};

export type StoreUpdateManyWithoutPayment_MethodsNestedInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutPayment_MethodsInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutPayment_MethodsInput>>;
  delete?: InputMaybe<Array<StoreWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StoreScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  set?: InputMaybe<Array<StoreWhereUniqueInput>>;
  update?: InputMaybe<Array<StoreUpdateWithWhereUniqueWithoutPayment_MethodsInput>>;
  updateMany?: InputMaybe<Array<StoreUpdateManyWithWhereWithoutPayment_MethodsInput>>;
  upsert?: InputMaybe<Array<StoreUpsertWithWhereUniqueWithoutPayment_MethodsInput>>;
};

export type StoreUpdateManyWithoutUsersNestedInput = {
  connect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<StoreCreateOrConnectWithoutUsersInput>>;
  create?: InputMaybe<Array<StoreCreateWithoutUsersInput>>;
  delete?: InputMaybe<Array<StoreWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<StoreScalarWhereInput>>;
  disconnect?: InputMaybe<Array<StoreWhereUniqueInput>>;
  set?: InputMaybe<Array<StoreWhereUniqueInput>>;
  update?: InputMaybe<Array<StoreUpdateWithWhereUniqueWithoutUsersInput>>;
  updateMany?: InputMaybe<Array<StoreUpdateManyWithWhereWithoutUsersInput>>;
  upsert?: InputMaybe<Array<StoreUpsertWithWhereUniqueWithoutUsersInput>>;
};

export type StoreUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutComposite_AdjustmentsInput>;
  create?: InputMaybe<StoreCreateWithoutComposite_AdjustmentsInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutComposite_AdjustmentsInput>;
  upsert?: InputMaybe<StoreUpsertWithoutComposite_AdjustmentsInput>;
};

export type StoreUpdateOneRequiredWithoutDaily_SalesNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutDaily_SalesInput>;
  create?: InputMaybe<StoreCreateWithoutDaily_SalesInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutDaily_SalesInput>;
  upsert?: InputMaybe<StoreUpsertWithoutDaily_SalesInput>;
};

export type StoreUpdateOneRequiredWithoutFrom_Transfer_OrdersNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutFrom_Transfer_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutFrom_Transfer_OrdersInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutFrom_Transfer_OrdersInput>;
  upsert?: InputMaybe<StoreUpsertWithoutFrom_Transfer_OrdersInput>;
};

export type StoreUpdateOneRequiredWithoutProduct_StocksNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutProduct_StocksInput>;
  create?: InputMaybe<StoreCreateWithoutProduct_StocksInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutProduct_StocksInput>;
  upsert?: InputMaybe<StoreUpsertWithoutProduct_StocksInput>;
};

export type StoreUpdateOneRequiredWithoutPurchase_OrdersNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutPurchase_OrdersInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutPurchase_OrdersInput>;
  upsert?: InputMaybe<StoreUpsertWithoutPurchase_OrdersInput>;
};

export type StoreUpdateOneRequiredWithoutSalesNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutSalesInput>;
  create?: InputMaybe<StoreCreateWithoutSalesInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutSalesInput>;
  upsert?: InputMaybe<StoreUpsertWithoutSalesInput>;
};

export type StoreUpdateOneRequiredWithoutStock_AdjustmentsNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutStock_AdjustmentsInput>;
  create?: InputMaybe<StoreCreateWithoutStock_AdjustmentsInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutStock_AdjustmentsInput>;
  upsert?: InputMaybe<StoreUpsertWithoutStock_AdjustmentsInput>;
};

export type StoreUpdateOneRequiredWithoutTo_Transfer_OrdersNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutTo_Transfer_OrdersInput>;
  create?: InputMaybe<StoreCreateWithoutTo_Transfer_OrdersInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutTo_Transfer_OrdersInput>;
  upsert?: InputMaybe<StoreUpsertWithoutTo_Transfer_OrdersInput>;
};

export type StoreUpdateOneWithoutIs_DefaultNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutIs_DefaultInput>;
  create?: InputMaybe<StoreCreateWithoutIs_DefaultInput>;
  delete?: InputMaybe<StoreWhereInput>;
  disconnect?: InputMaybe<StoreWhereInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutIs_DefaultInput>;
  upsert?: InputMaybe<StoreUpsertWithoutIs_DefaultInput>;
};

export type StoreUpdateOneWithoutSale_ChannelsNestedInput = {
  connect?: InputMaybe<StoreWhereUniqueInput>;
  connectOrCreate?: InputMaybe<StoreCreateOrConnectWithoutSale_ChannelsInput>;
  create?: InputMaybe<StoreCreateWithoutSale_ChannelsInput>;
  delete?: InputMaybe<StoreWhereInput>;
  disconnect?: InputMaybe<StoreWhereInput>;
  update?: InputMaybe<StoreUpdateToOneWithWhereWithoutSale_ChannelsInput>;
  upsert?: InputMaybe<StoreUpsertWithoutSale_ChannelsInput>;
};

export type StoreUpdateToOneWithWhereWithoutComposite_AdjustmentsInput = {
  data: StoreUpdateWithoutComposite_AdjustmentsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutDaily_SalesInput = {
  data: StoreUpdateWithoutDaily_SalesInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutFrom_Transfer_OrdersInput = {
  data: StoreUpdateWithoutFrom_Transfer_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutIs_DefaultInput = {
  data: StoreUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutProduct_StocksInput = {
  data: StoreUpdateWithoutProduct_StocksInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutPurchase_OrdersInput = {
  data: StoreUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutSale_ChannelsInput = {
  data: StoreUpdateWithoutSale_ChannelsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutSalesInput = {
  data: StoreUpdateWithoutSalesInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutStock_AdjustmentsInput = {
  data: StoreUpdateWithoutStock_AdjustmentsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateToOneWithWhereWithoutTo_Transfer_OrdersInput = {
  data: StoreUpdateWithoutTo_Transfer_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpdateWithWhereUniqueWithoutBusinessInput = {
  data: StoreUpdateWithoutBusinessInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpdateWithWhereUniqueWithoutLocationInput = {
  data: StoreUpdateWithoutLocationInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpdateWithWhereUniqueWithoutPayment_MethodsInput = {
  data: StoreUpdateWithoutPayment_MethodsInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpdateWithWhereUniqueWithoutUsersInput = {
  data: StoreUpdateWithoutUsersInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpdateWithoutBusinessInput = {
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutComposite_AdjustmentsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutDaily_SalesInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutFrom_Transfer_OrdersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutIs_DefaultInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutLocationInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutPayment_MethodsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutProduct_StocksInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutPurchase_OrdersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutSale_ChannelsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutSalesInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutStock_AdjustmentsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutTo_Transfer_OrdersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  users?: InputMaybe<UserUpdateManyWithoutStoresNestedInput>;
};

export type StoreUpdateWithoutUsersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutStoresNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutStoreNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  daily_sales?: InputMaybe<DailySaleUpdateManyWithoutStoreNestedInput>;
  from_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutFrom_StoreNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_default?: InputMaybe<BusinessUpdateOneWithoutDefault_StoreNestedInput>;
  location?: InputMaybe<LocationUpdateOneRequiredWithoutStoresNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  payment_methods?: InputMaybe<PaymentMethodUpdateManyWithoutStoresNestedInput>;
  product_stocks?: InputMaybe<ProductStockUpdateManyWithoutStoreNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutStoreNestedInput>;
  sale_channels?: InputMaybe<SaleChannelUpdateManyWithoutStoreNestedInput>;
  sales?: InputMaybe<SaleUpdateManyWithoutStoreNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutStoreNestedInput>;
  to_transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutTo_StoreNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type StoreUpsertWithWhereUniqueWithoutBusinessInput = {
  create: StoreCreateWithoutBusinessInput;
  update: StoreUpdateWithoutBusinessInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpsertWithWhereUniqueWithoutLocationInput = {
  create: StoreCreateWithoutLocationInput;
  update: StoreUpdateWithoutLocationInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpsertWithWhereUniqueWithoutPayment_MethodsInput = {
  create: StoreCreateWithoutPayment_MethodsInput;
  update: StoreUpdateWithoutPayment_MethodsInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpsertWithWhereUniqueWithoutUsersInput = {
  create: StoreCreateWithoutUsersInput;
  update: StoreUpdateWithoutUsersInput;
  where: StoreWhereUniqueInput;
};

export type StoreUpsertWithoutComposite_AdjustmentsInput = {
  create: StoreCreateWithoutComposite_AdjustmentsInput;
  update: StoreUpdateWithoutComposite_AdjustmentsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutDaily_SalesInput = {
  create: StoreCreateWithoutDaily_SalesInput;
  update: StoreUpdateWithoutDaily_SalesInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutFrom_Transfer_OrdersInput = {
  create: StoreCreateWithoutFrom_Transfer_OrdersInput;
  update: StoreUpdateWithoutFrom_Transfer_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutIs_DefaultInput = {
  create: StoreCreateWithoutIs_DefaultInput;
  update: StoreUpdateWithoutIs_DefaultInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutProduct_StocksInput = {
  create: StoreCreateWithoutProduct_StocksInput;
  update: StoreUpdateWithoutProduct_StocksInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutPurchase_OrdersInput = {
  create: StoreCreateWithoutPurchase_OrdersInput;
  update: StoreUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutSale_ChannelsInput = {
  create: StoreCreateWithoutSale_ChannelsInput;
  update: StoreUpdateWithoutSale_ChannelsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutSalesInput = {
  create: StoreCreateWithoutSalesInput;
  update: StoreUpdateWithoutSalesInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutStock_AdjustmentsInput = {
  create: StoreCreateWithoutStock_AdjustmentsInput;
  update: StoreUpdateWithoutStock_AdjustmentsInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreUpsertWithoutTo_Transfer_OrdersInput = {
  create: StoreCreateWithoutTo_Transfer_OrdersInput;
  update: StoreUpdateWithoutTo_Transfer_OrdersInput;
  where?: InputMaybe<StoreWhereInput>;
};

export type StoreWhereInput = {
  AND?: InputMaybe<Array<StoreWhereInput>>;
  NOT?: InputMaybe<Array<StoreWhereInput>>;
  OR?: InputMaybe<Array<StoreWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sales?: InputMaybe<DailySaleListRelationFilter>;
  from_transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  is_default?: InputMaybe<BusinessNullableRelationFilter>;
  location?: InputMaybe<LocationRelationFilter>;
  location_id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  payment_methods?: InputMaybe<PaymentMethodListRelationFilter>;
  product_stocks?: InputMaybe<ProductStockListRelationFilter>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  stock_adjustments?: InputMaybe<StockAdjustmentListRelationFilter>;
  to_transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type StoreWhereUniqueInput = {
  AND?: InputMaybe<Array<StoreWhereInput>>;
  NOT?: InputMaybe<Array<StoreWhereInput>>;
  OR?: InputMaybe<Array<StoreWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  daily_sales?: InputMaybe<DailySaleListRelationFilter>;
  from_transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_default?: InputMaybe<BusinessNullableRelationFilter>;
  location?: InputMaybe<LocationRelationFilter>;
  location_id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  payment_methods?: InputMaybe<PaymentMethodListRelationFilter>;
  product_stocks?: InputMaybe<ProductStockListRelationFilter>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  sale_channels?: InputMaybe<SaleChannelListRelationFilter>;
  sales?: InputMaybe<SaleListRelationFilter>;
  stock_adjustments?: InputMaybe<StockAdjustmentListRelationFilter>;
  to_transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  users?: InputMaybe<UserListRelationFilter>;
};

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']['input']>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type StringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type StringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']['input']>;
  endsWith?: InputMaybe<Scalars['String']['input']>;
  equals?: InputMaybe<Scalars['String']['input']>;
  gt?: InputMaybe<Scalars['String']['input']>;
  gte?: InputMaybe<Scalars['String']['input']>;
  in?: InputMaybe<Array<Scalars['String']['input']>>;
  lt?: InputMaybe<Scalars['String']['input']>;
  lte?: InputMaybe<Scalars['String']['input']>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<Scalars['String']['input']>>;
  startsWith?: InputMaybe<Scalars['String']['input']>;
};

export type SubNotification = {
  __typename?: 'SubNotification';
  date: Scalars['DateTime']['output'];
  query: Scalars['String']['output'];
};

export type Subscription = {
  __typename?: 'Subscription';
  subscribe: SubNotification;
};


export type SubscriptionSubscribeArgs = {
  topic: Scalars['String']['input'];
};

export type Supplier = {
  __typename?: 'Supplier';
  _count?: Maybe<SupplierCount>;
  address?: Maybe<Address>;
  address_id?: Maybe<Scalars['String']['output']>;
  addresses: Array<Address>;
  business: Business;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  products: Array<Product>;
  purchase_orders: Array<PurchaseOrder>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};


export type SupplierAddressArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type SupplierAddressesArgs = {
  cursor?: InputMaybe<AddressWhereUniqueInput>;
  distinct?: InputMaybe<Array<AddressScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<AddressOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<AddressWhereInput>;
};


export type SupplierProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type SupplierPurchase_OrdersArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};

export type SupplierCount = {
  __typename?: 'SupplierCount';
  addresses: Scalars['Int']['output'];
  products: Scalars['Int']['output'];
  purchase_orders: Scalars['Int']['output'];
};


export type SupplierCountAddressesArgs = {
  where?: InputMaybe<AddressWhereInput>;
};


export type SupplierCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type SupplierCountPurchase_OrdersArgs = {
  where?: InputMaybe<PurchaseOrderWhereInput>;
};

export type SupplierCountAggregate = {
  __typename?: 'SupplierCountAggregate';
  _all: Scalars['Int']['output'];
  address_id: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  email: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  phone: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SupplierCountOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SupplierCreateInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutDefault_SupplierInput>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutSuppliersInput>;
  business: BusinessCreateNestedOneWithoutSuppliersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSupplierInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateManyBusinessInput = {
  address_id?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateManyBusinessInputEnvelope = {
  data: Array<SupplierCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SupplierCreateManyInput = {
  address_id?: InputMaybe<Scalars['String']['input']>;
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateNestedManyWithoutAddressesInput = {
  connect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SupplierCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<SupplierCreateWithoutAddressesInput>>;
};

export type SupplierCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SupplierCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SupplierCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SupplierCreateManyBusinessInputEnvelope>;
};

export type SupplierCreateNestedOneWithoutAddressInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<SupplierCreateWithoutAddressInput>;
};

export type SupplierCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<SupplierCreateWithoutProductsInput>;
};

export type SupplierCreateNestedOneWithoutPurchase_OrdersInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<SupplierCreateWithoutPurchase_OrdersInput>;
};

export type SupplierCreateOrConnectWithoutAddressInput = {
  create: SupplierCreateWithoutAddressInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierCreateOrConnectWithoutAddressesInput = {
  create: SupplierCreateWithoutAddressesInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierCreateOrConnectWithoutBusinessInput = {
  create: SupplierCreateWithoutBusinessInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierCreateOrConnectWithoutProductsInput = {
  create: SupplierCreateWithoutProductsInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierCreateOrConnectWithoutPurchase_OrdersInput = {
  create: SupplierCreateWithoutPurchase_OrdersInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierCreateWithoutAddressInput = {
  addresses?: InputMaybe<AddressCreateNestedManyWithoutSuppliersInput>;
  business: BusinessCreateNestedOneWithoutSuppliersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSupplierInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateWithoutAddressesInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutDefault_SupplierInput>;
  business: BusinessCreateNestedOneWithoutSuppliersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSupplierInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateWithoutBusinessInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutDefault_SupplierInput>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutSuppliersInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSupplierInput>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateWithoutProductsInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutDefault_SupplierInput>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutSuppliersInput>;
  business: BusinessCreateNestedOneWithoutSuppliersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierCreateWithoutPurchase_OrdersInput = {
  address?: InputMaybe<AddressCreateNestedOneWithoutDefault_SupplierInput>;
  addresses?: InputMaybe<AddressCreateNestedManyWithoutSuppliersInput>;
  business: BusinessCreateNestedOneWithoutSuppliersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutSupplierInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SupplierGroupBy = {
  __typename?: 'SupplierGroupBy';
  _count?: Maybe<SupplierCountAggregate>;
  _max?: Maybe<SupplierMaxAggregate>;
  _min?: Maybe<SupplierMinAggregate>;
  address_id?: Maybe<Scalars['String']['output']>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SupplierListRelationFilter = {
  every?: InputMaybe<SupplierWhereInput>;
  none?: InputMaybe<SupplierWhereInput>;
  some?: InputMaybe<SupplierWhereInput>;
};

export type SupplierMaxAggregate = {
  __typename?: 'SupplierMaxAggregate';
  address_id?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SupplierMaxOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SupplierMinAggregate = {
  __typename?: 'SupplierMinAggregate';
  address_id?: Maybe<Scalars['String']['output']>;
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SupplierMinOrderByAggregateInput = {
  address_id?: InputMaybe<SortOrder>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SupplierNullableRelationFilter = {
  is?: InputMaybe<SupplierWhereInput>;
  isNot?: InputMaybe<SupplierWhereInput>;
};

export type SupplierOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SupplierOrderByWithAggregationInput = {
  _count?: InputMaybe<SupplierCountOrderByAggregateInput>;
  _max?: InputMaybe<SupplierMaxOrderByAggregateInput>;
  _min?: InputMaybe<SupplierMinOrderByAggregateInput>;
  address_id?: InputMaybe<SortOrderInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  phone?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SupplierOrderByWithRelationInput = {
  address?: InputMaybe<AddressOrderByWithRelationInput>;
  address_id?: InputMaybe<SortOrderInput>;
  addresses?: InputMaybe<AddressOrderByRelationAggregateInput>;
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  phone?: InputMaybe<SortOrderInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  purchase_orders?: InputMaybe<PurchaseOrderOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SupplierRelationFilter = {
  is?: InputMaybe<SupplierWhereInput>;
  isNot?: InputMaybe<SupplierWhereInput>;
};

export enum SupplierScalarFieldEnum {
  AddressId = 'address_id',
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Email = 'email',
  Id = 'id',
  Metadata = 'metadata',
  Name = 'name',
  Note = 'note',
  Phone = 'phone',
  UpdatedAt = 'updated_at'
}

export type SupplierScalarWhereInput = {
  AND?: InputMaybe<Array<SupplierScalarWhereInput>>;
  NOT?: InputMaybe<Array<SupplierScalarWhereInput>>;
  OR?: InputMaybe<Array<SupplierScalarWhereInput>>;
  address_id?: InputMaybe<StringNullableFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  note?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SupplierScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SupplierScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SupplierScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SupplierScalarWhereWithAggregatesInput>>;
  address_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SupplierUpdateInput = {
  address?: InputMaybe<AddressUpdateOneWithoutDefault_SupplierNestedInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutSuppliersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSupplierNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateManyWithWhereWithoutAddressesInput = {
  data: SupplierUpdateManyMutationInput;
  where: SupplierScalarWhereInput;
};

export type SupplierUpdateManyWithWhereWithoutBusinessInput = {
  data: SupplierUpdateManyMutationInput;
  where: SupplierScalarWhereInput;
};

export type SupplierUpdateManyWithoutAddressesNestedInput = {
  connect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SupplierCreateOrConnectWithoutAddressesInput>>;
  create?: InputMaybe<Array<SupplierCreateWithoutAddressesInput>>;
  delete?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SupplierScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  set?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  update?: InputMaybe<Array<SupplierUpdateWithWhereUniqueWithoutAddressesInput>>;
  updateMany?: InputMaybe<Array<SupplierUpdateManyWithWhereWithoutAddressesInput>>;
  upsert?: InputMaybe<Array<SupplierUpsertWithWhereUniqueWithoutAddressesInput>>;
};

export type SupplierUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SupplierCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<SupplierCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<SupplierCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SupplierScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  set?: InputMaybe<Array<SupplierWhereUniqueInput>>;
  update?: InputMaybe<Array<SupplierUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<SupplierUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<SupplierUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type SupplierUpdateOneRequiredWithoutPurchase_OrdersNestedInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<SupplierCreateWithoutPurchase_OrdersInput>;
  update?: InputMaybe<SupplierUpdateToOneWithWhereWithoutPurchase_OrdersInput>;
  upsert?: InputMaybe<SupplierUpsertWithoutPurchase_OrdersInput>;
};

export type SupplierUpdateOneWithoutAddressNestedInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutAddressInput>;
  create?: InputMaybe<SupplierCreateWithoutAddressInput>;
  delete?: InputMaybe<SupplierWhereInput>;
  disconnect?: InputMaybe<SupplierWhereInput>;
  update?: InputMaybe<SupplierUpdateToOneWithWhereWithoutAddressInput>;
  upsert?: InputMaybe<SupplierUpsertWithoutAddressInput>;
};

export type SupplierUpdateOneWithoutProductsNestedInput = {
  connect?: InputMaybe<SupplierWhereUniqueInput>;
  connectOrCreate?: InputMaybe<SupplierCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<SupplierCreateWithoutProductsInput>;
  delete?: InputMaybe<SupplierWhereInput>;
  disconnect?: InputMaybe<SupplierWhereInput>;
  update?: InputMaybe<SupplierUpdateToOneWithWhereWithoutProductsInput>;
  upsert?: InputMaybe<SupplierUpsertWithoutProductsInput>;
};

export type SupplierUpdateToOneWithWhereWithoutAddressInput = {
  data: SupplierUpdateWithoutAddressInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierUpdateToOneWithWhereWithoutProductsInput = {
  data: SupplierUpdateWithoutProductsInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierUpdateToOneWithWhereWithoutPurchase_OrdersInput = {
  data: SupplierUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierUpdateWithWhereUniqueWithoutAddressesInput = {
  data: SupplierUpdateWithoutAddressesInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierUpdateWithWhereUniqueWithoutBusinessInput = {
  data: SupplierUpdateWithoutBusinessInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierUpdateWithoutAddressInput = {
  addresses?: InputMaybe<AddressUpdateManyWithoutSuppliersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSupplierNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateWithoutAddressesInput = {
  address?: InputMaybe<AddressUpdateOneWithoutDefault_SupplierNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSupplierNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateWithoutBusinessInput = {
  address?: InputMaybe<AddressUpdateOneWithoutDefault_SupplierNestedInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSupplierNestedInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateWithoutProductsInput = {
  address?: InputMaybe<AddressUpdateOneWithoutDefault_SupplierNestedInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutSuppliersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpdateWithoutPurchase_OrdersInput = {
  address?: InputMaybe<AddressUpdateOneWithoutDefault_SupplierNestedInput>;
  addresses?: InputMaybe<AddressUpdateManyWithoutSuppliersNestedInput>;
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutSuppliersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutSupplierNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SupplierUpsertWithWhereUniqueWithoutAddressesInput = {
  create: SupplierCreateWithoutAddressesInput;
  update: SupplierUpdateWithoutAddressesInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierUpsertWithWhereUniqueWithoutBusinessInput = {
  create: SupplierCreateWithoutBusinessInput;
  update: SupplierUpdateWithoutBusinessInput;
  where: SupplierWhereUniqueInput;
};

export type SupplierUpsertWithoutAddressInput = {
  create: SupplierCreateWithoutAddressInput;
  update: SupplierUpdateWithoutAddressInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierUpsertWithoutProductsInput = {
  create: SupplierCreateWithoutProductsInput;
  update: SupplierUpdateWithoutProductsInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierUpsertWithoutPurchase_OrdersInput = {
  create: SupplierCreateWithoutPurchase_OrdersInput;
  update: SupplierUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<SupplierWhereInput>;
};

export type SupplierWhereInput = {
  AND?: InputMaybe<Array<SupplierWhereInput>>;
  NOT?: InputMaybe<Array<SupplierWhereInput>>;
  OR?: InputMaybe<Array<SupplierWhereInput>>;
  address?: InputMaybe<AddressNullableRelationFilter>;
  address_id?: InputMaybe<StringNullableFilter>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  note?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SupplierWhereUniqueInput = {
  AND?: InputMaybe<Array<SupplierWhereInput>>;
  NOT?: InputMaybe<Array<SupplierWhereInput>>;
  OR?: InputMaybe<Array<SupplierWhereInput>>;
  address?: InputMaybe<AddressNullableRelationFilter>;
  address_id?: InputMaybe<Scalars['String']['input']>;
  addresses?: InputMaybe<AddressListRelationFilter>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  note?: InputMaybe<StringNullableFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SystemData = {
  __typename?: 'SystemData';
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SystemDataCountAggregate = {
  __typename?: 'SystemDataCountAggregate';
  _all: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  description: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type SystemDataCountOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SystemDataCreateInput = {
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SystemDataCreateManyInput = {
  code: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SystemDataGroupBy = {
  __typename?: 'SystemDataGroupBy';
  _count?: Maybe<SystemDataCountAggregate>;
  _max?: Maybe<SystemDataMaxAggregate>;
  _min?: Maybe<SystemDataMinAggregate>;
  code: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  description?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SystemDataMaxAggregate = {
  __typename?: 'SystemDataMaxAggregate';
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SystemDataMaxOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SystemDataMinAggregate = {
  __typename?: 'SystemDataMinAggregate';
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type SystemDataMinOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type SystemDataOrderByWithAggregationInput = {
  _count?: InputMaybe<SystemDataCountOrderByAggregateInput>;
  _max?: InputMaybe<SystemDataMaxOrderByAggregateInput>;
  _min?: InputMaybe<SystemDataMinOrderByAggregateInput>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export type SystemDataOrderByWithRelationInput = {
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  updated_at?: InputMaybe<SortOrderInput>;
};

export enum SystemDataScalarFieldEnum {
  Code = 'code',
  CreatedAt = 'created_at',
  Description = 'description',
  Id = 'id',
  Metadata = 'metadata',
  UpdatedAt = 'updated_at'
}

export type SystemDataScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SystemDataScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SystemDataScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SystemDataScalarWhereWithAggregatesInput>>;
  code?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SystemDataUpdateInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SystemDataUpdateManyMutationInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SystemDataWhereInput = {
  AND?: InputMaybe<Array<SystemDataWhereInput>>;
  NOT?: InputMaybe<Array<SystemDataWhereInput>>;
  OR?: InputMaybe<Array<SystemDataWhereInput>>;
  code?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SystemDataWhereUniqueInput = {
  AND?: InputMaybe<Array<SystemDataWhereInput>>;
  NOT?: InputMaybe<Array<SystemDataWhereInput>>;
  OR?: InputMaybe<Array<SystemDataWhereInput>>;
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<DateTimeFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<StringNullableFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
};

export type SystemLog = {
  __typename?: 'SystemLog';
  code: Scalars['String']['output'];
  comment?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  ref_id: Scalars['String']['output'];
  ref_type: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['String']['output']>;
};


export type SystemLogUserArgs = {
  where?: InputMaybe<UserWhereInput>;
};

export type SystemLogCodeRef_IdCompoundUniqueInput = {
  code: Scalars['String']['input'];
  ref_id: Scalars['String']['input'];
};

export type SystemLogCountAggregate = {
  __typename?: 'SystemLogCountAggregate';
  _all: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  comment: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  metadata: Scalars['Int']['output'];
  ref_id: Scalars['Int']['output'];
  ref_type: Scalars['Int']['output'];
  title: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type SystemLogCountOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type SystemLogCreateInput = {
  code: Scalars['String']['input'];
  comment?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user?: InputMaybe<UserCreateNestedOneWithoutLogsInput>;
};

export type SystemLogCreateManyInput = {
  code: Scalars['String']['input'];
  comment?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id?: InputMaybe<Scalars['String']['input']>;
};

export type SystemLogCreateManyUserInput = {
  code: Scalars['String']['input'];
  comment?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SystemLogCreateManyUserInputEnvelope = {
  data: Array<SystemLogCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SystemLogCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<SystemLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SystemLogCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<SystemLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<SystemLogCreateManyUserInputEnvelope>;
};

export type SystemLogCreateOrConnectWithoutUserInput = {
  create: SystemLogCreateWithoutUserInput;
  where: SystemLogWhereUniqueInput;
};

export type SystemLogCreateWithoutUserInput = {
  code: Scalars['String']['input'];
  comment?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<Scalars['String']['input']>;
  ref_id: Scalars['String']['input'];
  ref_type: Scalars['String']['input'];
  title: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type SystemLogGroupBy = {
  __typename?: 'SystemLogGroupBy';
  _count?: Maybe<SystemLogCountAggregate>;
  _max?: Maybe<SystemLogMaxAggregate>;
  _min?: Maybe<SystemLogMinAggregate>;
  code: Scalars['String']['output'];
  comment?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  metadata?: Maybe<Scalars['String']['output']>;
  ref_id: Scalars['String']['output'];
  ref_type: Scalars['String']['output'];
  title: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type SystemLogListRelationFilter = {
  every?: InputMaybe<SystemLogWhereInput>;
  none?: InputMaybe<SystemLogWhereInput>;
  some?: InputMaybe<SystemLogWhereInput>;
};

export type SystemLogMaxAggregate = {
  __typename?: 'SystemLogMaxAggregate';
  code?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type SystemLogMaxOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type SystemLogMinAggregate = {
  __typename?: 'SystemLogMinAggregate';
  code?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  metadata?: Maybe<Scalars['String']['output']>;
  ref_id?: Maybe<Scalars['String']['output']>;
  ref_type?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type SystemLogMinOrderByAggregateInput = {
  code?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrder>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type SystemLogOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SystemLogOrderByWithAggregationInput = {
  _count?: InputMaybe<SystemLogCountOrderByAggregateInput>;
  _max?: InputMaybe<SystemLogMaxOrderByAggregateInput>;
  _min?: InputMaybe<SystemLogMinOrderByAggregateInput>;
  code?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user_id?: InputMaybe<SortOrderInput>;
};

export type SystemLogOrderByWithRelationInput = {
  code?: InputMaybe<SortOrder>;
  comment?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  metadata?: InputMaybe<SortOrderInput>;
  ref_id?: InputMaybe<SortOrder>;
  ref_type?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  user_id?: InputMaybe<SortOrderInput>;
};

export enum SystemLogScalarFieldEnum {
  Code = 'code',
  Comment = 'comment',
  CreatedAt = 'created_at',
  Id = 'id',
  Metadata = 'metadata',
  RefId = 'ref_id',
  RefType = 'ref_type',
  Title = 'title',
  UpdatedAt = 'updated_at',
  UserId = 'user_id'
}

export type SystemLogScalarWhereInput = {
  AND?: InputMaybe<Array<SystemLogScalarWhereInput>>;
  NOT?: InputMaybe<Array<SystemLogScalarWhereInput>>;
  OR?: InputMaybe<Array<SystemLogScalarWhereInput>>;
  code?: InputMaybe<StringFilter>;
  comment?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringNullableFilter>;
};

export type SystemLogScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<SystemLogScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<SystemLogScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<SystemLogScalarWhereWithAggregatesInput>>;
  code?: InputMaybe<StringWithAggregatesFilter>;
  comment?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  metadata?: InputMaybe<StringNullableWithAggregatesFilter>;
  ref_id?: InputMaybe<StringWithAggregatesFilter>;
  ref_type?: InputMaybe<StringWithAggregatesFilter>;
  title?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SystemLogUpdateInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<StringFieldUpdateOperationsInput>;
  title?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLogsNestedInput>;
};

export type SystemLogUpdateManyMutationInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<StringFieldUpdateOperationsInput>;
  title?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SystemLogUpdateManyWithWhereWithoutUserInput = {
  data: SystemLogUpdateManyMutationInput;
  where: SystemLogScalarWhereInput;
};

export type SystemLogUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<SystemLogWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<SystemLogCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<SystemLogCreateWithoutUserInput>>;
  createMany?: InputMaybe<SystemLogCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<SystemLogWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<SystemLogScalarWhereInput>>;
  disconnect?: InputMaybe<Array<SystemLogWhereUniqueInput>>;
  set?: InputMaybe<Array<SystemLogWhereUniqueInput>>;
  update?: InputMaybe<Array<SystemLogUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<SystemLogUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<SystemLogUpsertWithWhereUniqueWithoutUserInput>>;
};

export type SystemLogUpdateWithWhereUniqueWithoutUserInput = {
  data: SystemLogUpdateWithoutUserInput;
  where: SystemLogWhereUniqueInput;
};

export type SystemLogUpdateWithoutUserInput = {
  code?: InputMaybe<StringFieldUpdateOperationsInput>;
  comment?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  metadata?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  ref_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ref_type?: InputMaybe<StringFieldUpdateOperationsInput>;
  title?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SystemLogUpsertWithWhereUniqueWithoutUserInput = {
  create: SystemLogCreateWithoutUserInput;
  update: SystemLogUpdateWithoutUserInput;
  where: SystemLogWhereUniqueInput;
};

export type SystemLogWhereInput = {
  AND?: InputMaybe<Array<SystemLogWhereInput>>;
  NOT?: InputMaybe<Array<SystemLogWhereInput>>;
  OR?: InputMaybe<Array<SystemLogWhereInput>>;
  code?: InputMaybe<StringFilter>;
  comment?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  metadata?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserNullableRelationFilter>;
  user_id?: InputMaybe<StringNullableFilter>;
};

export type SystemLogWhereUniqueInput = {
  AND?: InputMaybe<Array<SystemLogWhereInput>>;
  NOT?: InputMaybe<Array<SystemLogWhereInput>>;
  OR?: InputMaybe<Array<SystemLogWhereInput>>;
  code?: InputMaybe<StringFilter>;
  code_ref_id?: InputMaybe<SystemLogCodeRef_IdCompoundUniqueInput>;
  comment?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  metadata?: InputMaybe<StringNullableFilter>;
  ref_id?: InputMaybe<StringFilter>;
  ref_type?: InputMaybe<StringFilter>;
  title?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserNullableRelationFilter>;
  user_id?: InputMaybe<StringNullableFilter>;
};

export enum TaxCalculationMethod {
  AddedTax = 'ADDED_TAX',
  Inclusive = 'INCLUSIVE'
}

export type TaxSetting = {
  __typename?: 'TaxSetting';
  _count?: Maybe<TaxSettingCount>;
  business: Business;
  business_id: Scalars['String']['output'];
  calculation_method: TaxCalculationMethod;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  percent: Scalars['Decimal']['output'];
  products: Array<Product>;
  taxation_method: TaxationMethod;
  updated_at: Scalars['DateTime']['output'];
};


export type TaxSettingProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<ProductScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type TaxSettingAvgAggregate = {
  __typename?: 'TaxSettingAvgAggregate';
  percent?: Maybe<Scalars['Decimal']['output']>;
};

export type TaxSettingAvgOrderByAggregateInput = {
  percent?: InputMaybe<SortOrder>;
};

export type TaxSettingCount = {
  __typename?: 'TaxSettingCount';
  products: Scalars['Int']['output'];
};


export type TaxSettingCountProductsArgs = {
  where?: InputMaybe<ProductWhereInput>;
};

export type TaxSettingCountAggregate = {
  __typename?: 'TaxSettingCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  calculation_method: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  percent: Scalars['Int']['output'];
  taxation_method: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
};

export type TaxSettingCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  calculation_method?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent?: InputMaybe<SortOrder>;
  taxation_method?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type TaxSettingCreateInput = {
  business: BusinessCreateNestedOneWithoutTaxesInput;
  calculation_method?: InputMaybe<TaxCalculationMethod>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  percent?: InputMaybe<Scalars['Decimal']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutTaxesInput>;
  taxation_method?: InputMaybe<TaxationMethod>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TaxSettingCreateManyBusinessInput = {
  calculation_method?: InputMaybe<TaxCalculationMethod>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  percent?: InputMaybe<Scalars['Decimal']['input']>;
  taxation_method?: InputMaybe<TaxationMethod>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TaxSettingCreateManyBusinessInputEnvelope = {
  data: Array<TaxSettingCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TaxSettingCreateManyInput = {
  business_id: Scalars['String']['input'];
  calculation_method?: InputMaybe<TaxCalculationMethod>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  percent?: InputMaybe<Scalars['Decimal']['input']>;
  taxation_method?: InputMaybe<TaxationMethod>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TaxSettingCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TaxSettingCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<TaxSettingCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<TaxSettingCreateManyBusinessInputEnvelope>;
};

export type TaxSettingCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TaxSettingCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<TaxSettingCreateWithoutProductsInput>>;
};

export type TaxSettingCreateOrConnectWithoutBusinessInput = {
  create: TaxSettingCreateWithoutBusinessInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingCreateOrConnectWithoutProductsInput = {
  create: TaxSettingCreateWithoutProductsInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingCreateWithoutBusinessInput = {
  calculation_method?: InputMaybe<TaxCalculationMethod>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  percent?: InputMaybe<Scalars['Decimal']['input']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutTaxesInput>;
  taxation_method?: InputMaybe<TaxationMethod>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TaxSettingCreateWithoutProductsInput = {
  business: BusinessCreateNestedOneWithoutTaxesInput;
  calculation_method?: InputMaybe<TaxCalculationMethod>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  percent?: InputMaybe<Scalars['Decimal']['input']>;
  taxation_method?: InputMaybe<TaxationMethod>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TaxSettingGroupBy = {
  __typename?: 'TaxSettingGroupBy';
  _avg?: Maybe<TaxSettingAvgAggregate>;
  _count?: Maybe<TaxSettingCountAggregate>;
  _max?: Maybe<TaxSettingMaxAggregate>;
  _min?: Maybe<TaxSettingMinAggregate>;
  _sum?: Maybe<TaxSettingSumAggregate>;
  business_id: Scalars['String']['output'];
  calculation_method: TaxCalculationMethod;
  created_at: Scalars['DateTime']['output'];
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  percent: Scalars['Decimal']['output'];
  taxation_method: TaxationMethod;
  updated_at: Scalars['DateTime']['output'];
};

export type TaxSettingListRelationFilter = {
  every?: InputMaybe<TaxSettingWhereInput>;
  none?: InputMaybe<TaxSettingWhereInput>;
  some?: InputMaybe<TaxSettingWhereInput>;
};

export type TaxSettingMaxAggregate = {
  __typename?: 'TaxSettingMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  calculation_method?: Maybe<TaxCalculationMethod>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  percent?: Maybe<Scalars['Decimal']['output']>;
  taxation_method?: Maybe<TaxationMethod>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type TaxSettingMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  calculation_method?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent?: InputMaybe<SortOrder>;
  taxation_method?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type TaxSettingMinAggregate = {
  __typename?: 'TaxSettingMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  calculation_method?: Maybe<TaxCalculationMethod>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  percent?: Maybe<Scalars['Decimal']['output']>;
  taxation_method?: Maybe<TaxationMethod>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
};

export type TaxSettingMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  calculation_method?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent?: InputMaybe<SortOrder>;
  taxation_method?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type TaxSettingOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type TaxSettingOrderByWithAggregationInput = {
  _avg?: InputMaybe<TaxSettingAvgOrderByAggregateInput>;
  _count?: InputMaybe<TaxSettingCountOrderByAggregateInput>;
  _max?: InputMaybe<TaxSettingMaxOrderByAggregateInput>;
  _min?: InputMaybe<TaxSettingMinOrderByAggregateInput>;
  _sum?: InputMaybe<TaxSettingSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  calculation_method?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent?: InputMaybe<SortOrder>;
  taxation_method?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export type TaxSettingOrderByWithRelationInput = {
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  calculation_method?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  taxation_method?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
};

export enum TaxSettingScalarFieldEnum {
  BusinessId = 'business_id',
  CalculationMethod = 'calculation_method',
  CreatedAt = 'created_at',
  Id = 'id',
  Name = 'name',
  Percent = 'percent',
  TaxationMethod = 'taxation_method',
  UpdatedAt = 'updated_at'
}

export type TaxSettingScalarWhereInput = {
  AND?: InputMaybe<Array<TaxSettingScalarWhereInput>>;
  NOT?: InputMaybe<Array<TaxSettingScalarWhereInput>>;
  OR?: InputMaybe<Array<TaxSettingScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  percent?: InputMaybe<DecimalFilter>;
  taxation_method?: InputMaybe<EnumTaxationMethodFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type TaxSettingScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TaxSettingScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TaxSettingScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TaxSettingScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  percent?: InputMaybe<DecimalWithAggregatesFilter>;
  taxation_method?: InputMaybe<EnumTaxationMethodWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type TaxSettingSumAggregate = {
  __typename?: 'TaxSettingSumAggregate';
  percent?: Maybe<Scalars['Decimal']['output']>;
};

export type TaxSettingSumOrderByAggregateInput = {
  percent?: InputMaybe<SortOrder>;
};

export type TaxSettingUpdateInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutTaxesNestedInput>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTaxesNestedInput>;
  taxation_method?: InputMaybe<EnumTaxationMethodFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxSettingUpdateManyMutationInput = {
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  taxation_method?: InputMaybe<EnumTaxationMethodFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxSettingUpdateManyWithWhereWithoutBusinessInput = {
  data: TaxSettingUpdateManyMutationInput;
  where: TaxSettingScalarWhereInput;
};

export type TaxSettingUpdateManyWithWhereWithoutProductsInput = {
  data: TaxSettingUpdateManyMutationInput;
  where: TaxSettingScalarWhereInput;
};

export type TaxSettingUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TaxSettingCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<TaxSettingCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<TaxSettingCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<TaxSettingScalarWhereInput>>;
  disconnect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  set?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  update?: InputMaybe<Array<TaxSettingUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<TaxSettingUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<TaxSettingUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type TaxSettingUpdateManyWithoutProductsNestedInput = {
  connect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TaxSettingCreateOrConnectWithoutProductsInput>>;
  create?: InputMaybe<Array<TaxSettingCreateWithoutProductsInput>>;
  delete?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<TaxSettingScalarWhereInput>>;
  disconnect?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  set?: InputMaybe<Array<TaxSettingWhereUniqueInput>>;
  update?: InputMaybe<Array<TaxSettingUpdateWithWhereUniqueWithoutProductsInput>>;
  updateMany?: InputMaybe<Array<TaxSettingUpdateManyWithWhereWithoutProductsInput>>;
  upsert?: InputMaybe<Array<TaxSettingUpsertWithWhereUniqueWithoutProductsInput>>;
};

export type TaxSettingUpdateWithWhereUniqueWithoutBusinessInput = {
  data: TaxSettingUpdateWithoutBusinessInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingUpdateWithWhereUniqueWithoutProductsInput = {
  data: TaxSettingUpdateWithoutProductsInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingUpdateWithoutBusinessInput = {
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTaxesNestedInput>;
  taxation_method?: InputMaybe<EnumTaxationMethodFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxSettingUpdateWithoutProductsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutTaxesNestedInput>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  taxation_method?: InputMaybe<EnumTaxationMethodFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxSettingUpsertWithWhereUniqueWithoutBusinessInput = {
  create: TaxSettingCreateWithoutBusinessInput;
  update: TaxSettingUpdateWithoutBusinessInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingUpsertWithWhereUniqueWithoutProductsInput = {
  create: TaxSettingCreateWithoutProductsInput;
  update: TaxSettingUpdateWithoutProductsInput;
  where: TaxSettingWhereUniqueInput;
};

export type TaxSettingWhereInput = {
  AND?: InputMaybe<Array<TaxSettingWhereInput>>;
  NOT?: InputMaybe<Array<TaxSettingWhereInput>>;
  OR?: InputMaybe<Array<TaxSettingWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  percent?: InputMaybe<DecimalFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  taxation_method?: InputMaybe<EnumTaxationMethodFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export type TaxSettingWhereUniqueInput = {
  AND?: InputMaybe<Array<TaxSettingWhereInput>>;
  NOT?: InputMaybe<Array<TaxSettingWhereInput>>;
  OR?: InputMaybe<Array<TaxSettingWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  calculation_method?: InputMaybe<EnumTaxCalculationMethodFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<StringFilter>;
  percent?: InputMaybe<DecimalFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  taxation_method?: InputMaybe<EnumTaxationMethodFilter>;
  updated_at?: InputMaybe<DateTimeFilter>;
};

export enum TaxationMethod {
  Separate = 'SEPARATE',
  Whole = 'WHOLE'
}

export type TransferOrder = {
  __typename?: 'TransferOrder';
  _count?: Maybe<TransferOrderCount>;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  from_id: Scalars['String']['output'];
  from_store: Store;
  id: Scalars['String']['output'];
  items: Array<StockTransactionItem>;
  note?: Maybe<Scalars['String']['output']>;
  order_date: Scalars['DateTime']['output'];
  received_date: Scalars['DateTime']['output'];
  received_qty: Scalars['Decimal']['output'];
  seq: Scalars['Int']['output'];
  status: TransferOrderStatus;
  to_id: Scalars['String']['output'];
  to_store: Store;
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user: User;
  user_id: Scalars['String']['output'];
};


export type TransferOrderItemsArgs = {
  cursor?: InputMaybe<StockTransactionItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockTransactionItemScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockTransactionItemOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type TransferOrderAvgAggregate = {
  __typename?: 'TransferOrderAvgAggregate';
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Float']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type TransferOrderAvgOrderByAggregateInput = {
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type TransferOrderCount = {
  __typename?: 'TransferOrderCount';
  items: Scalars['Int']['output'];
};


export type TransferOrderCountItemsArgs = {
  where?: InputMaybe<StockTransactionItemWhereInput>;
};

export type TransferOrderCountAggregate = {
  __typename?: 'TransferOrderCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  code: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  from_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  note: Scalars['Int']['output'];
  order_date: Scalars['Int']['output'];
  received_date: Scalars['Int']['output'];
  received_qty: Scalars['Int']['output'];
  seq: Scalars['Int']['output'];
  status: Scalars['Int']['output'];
  to_id: Scalars['Int']['output'];
  total_qty: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  user_id: Scalars['Int']['output'];
};

export type TransferOrderCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  from_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  to_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type TransferOrderCreateInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_store: StoreCreateNestedOneWithoutFrom_Transfer_OrdersInput;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutT_OrderInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_store: StoreCreateNestedOneWithoutTo_Transfer_OrdersInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutTransfer_OrdersInput;
};

export type TransferOrderCreateManyFrom_StoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type TransferOrderCreateManyFrom_StoreInputEnvelope = {
  data: Array<TransferOrderCreateManyFrom_StoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TransferOrderCreateManyInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_id: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type TransferOrderCreateManyTo_StoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_id: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user_id: Scalars['String']['input'];
};

export type TransferOrderCreateManyTo_StoreInputEnvelope = {
  data: Array<TransferOrderCreateManyTo_StoreInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TransferOrderCreateManyUserInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_id: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_id: Scalars['String']['input'];
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TransferOrderCreateManyUserInputEnvelope = {
  data: Array<TransferOrderCreateManyUserInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type TransferOrderCreateNestedManyWithoutFrom_StoreInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutFrom_StoreInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutFrom_StoreInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyFrom_StoreInputEnvelope>;
};

export type TransferOrderCreateNestedManyWithoutTo_StoreInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutTo_StoreInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutTo_StoreInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyTo_StoreInputEnvelope>;
};

export type TransferOrderCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutUserInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyUserInputEnvelope>;
};

export type TransferOrderCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<TransferOrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TransferOrderCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<TransferOrderCreateWithoutItemsInput>;
};

export type TransferOrderCreateOrConnectWithoutFrom_StoreInput = {
  create: TransferOrderCreateWithoutFrom_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderCreateOrConnectWithoutItemsInput = {
  create: TransferOrderCreateWithoutItemsInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderCreateOrConnectWithoutTo_StoreInput = {
  create: TransferOrderCreateWithoutTo_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderCreateOrConnectWithoutUserInput = {
  create: TransferOrderCreateWithoutUserInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderCreateWithoutFrom_StoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutT_OrderInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_store: StoreCreateNestedOneWithoutTo_Transfer_OrdersInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutTransfer_OrdersInput;
};

export type TransferOrderCreateWithoutItemsInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_store: StoreCreateNestedOneWithoutFrom_Transfer_OrdersInput;
  id?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_store: StoreCreateNestedOneWithoutTo_Transfer_OrdersInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutTransfer_OrdersInput;
};

export type TransferOrderCreateWithoutTo_StoreInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_store: StoreCreateNestedOneWithoutFrom_Transfer_OrdersInput;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutT_OrderInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  user: UserCreateNestedOneWithoutTransfer_OrdersInput;
};

export type TransferOrderCreateWithoutUserInput = {
  business_id: Scalars['String']['input'];
  code?: InputMaybe<Scalars['String']['input']>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  from_store: StoreCreateNestedOneWithoutFrom_Transfer_OrdersInput;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemCreateNestedManyWithoutT_OrderInput>;
  note?: InputMaybe<Scalars['String']['input']>;
  order_date: Scalars['DateTime']['input'];
  received_date: Scalars['DateTime']['input'];
  received_qty?: InputMaybe<Scalars['Decimal']['input']>;
  seq?: InputMaybe<Scalars['Int']['input']>;
  status: TransferOrderStatus;
  to_store: StoreCreateNestedOneWithoutTo_Transfer_OrdersInput;
  total_qty?: InputMaybe<Scalars['Decimal']['input']>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
};

export type TransferOrderGroupBy = {
  __typename?: 'TransferOrderGroupBy';
  _avg?: Maybe<TransferOrderAvgAggregate>;
  _count?: Maybe<TransferOrderCountAggregate>;
  _max?: Maybe<TransferOrderMaxAggregate>;
  _min?: Maybe<TransferOrderMinAggregate>;
  _sum?: Maybe<TransferOrderSumAggregate>;
  business_id: Scalars['String']['output'];
  code?: Maybe<Scalars['String']['output']>;
  created_at: Scalars['DateTime']['output'];
  from_id: Scalars['String']['output'];
  id: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  order_date: Scalars['DateTime']['output'];
  received_date: Scalars['DateTime']['output'];
  received_qty: Scalars['Decimal']['output'];
  seq: Scalars['Int']['output'];
  status: TransferOrderStatus;
  to_id: Scalars['String']['output'];
  total_qty: Scalars['Decimal']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id: Scalars['String']['output'];
};

export type TransferOrderListRelationFilter = {
  every?: InputMaybe<TransferOrderWhereInput>;
  none?: InputMaybe<TransferOrderWhereInput>;
  some?: InputMaybe<TransferOrderWhereInput>;
};

export type TransferOrderMaxAggregate = {
  __typename?: 'TransferOrderMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  from_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  order_date?: Maybe<Scalars['DateTime']['output']>;
  received_date?: Maybe<Scalars['DateTime']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<TransferOrderStatus>;
  to_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type TransferOrderMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  from_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  to_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type TransferOrderMinAggregate = {
  __typename?: 'TransferOrderMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  code?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  from_id?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  order_date?: Maybe<Scalars['DateTime']['output']>;
  received_date?: Maybe<Scalars['DateTime']['output']>;
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  status?: Maybe<TransferOrderStatus>;
  to_id?: Maybe<Scalars['String']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  user_id?: Maybe<Scalars['String']['output']>;
};

export type TransferOrderMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  from_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  order_date?: InputMaybe<SortOrder>;
  received_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  to_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  user_id?: InputMaybe<SortOrder>;
};

export type TransferOrderNullableRelationFilter = {
  is?: InputMaybe<TransferOrderWhereInput>;
  isNot?: InputMaybe<TransferOrderWhereInput>;
};

export type TransferOrderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type TransferOrderOrderByWithAggregationInput = {
  _avg?: InputMaybe<TransferOrderAvgOrderByAggregateInput>;
  _count?: InputMaybe<TransferOrderCountOrderByAggregateInput>;
  _max?: InputMaybe<TransferOrderMaxOrderByAggregateInput>;
  _min?: InputMaybe<TransferOrderMinOrderByAggregateInput>;
  _sum?: InputMaybe<TransferOrderSumOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  from_id?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrderInput>;
  order_date?: InputMaybe<SortOrder>;
  received_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  to_id?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user_id?: InputMaybe<SortOrder>;
};

export type TransferOrderOrderByWithRelationInput = {
  business_id?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrderInput>;
  created_at?: InputMaybe<SortOrder>;
  from_id?: InputMaybe<SortOrder>;
  from_store?: InputMaybe<StoreOrderByWithRelationInput>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<StockTransactionItemOrderByRelationAggregateInput>;
  note?: InputMaybe<SortOrderInput>;
  order_date?: InputMaybe<SortOrder>;
  received_date?: InputMaybe<SortOrder>;
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  status?: InputMaybe<SortOrder>;
  to_id?: InputMaybe<SortOrder>;
  to_store?: InputMaybe<StoreOrderByWithRelationInput>;
  total_qty?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  user_id?: InputMaybe<SortOrder>;
};

export enum TransferOrderScalarFieldEnum {
  BusinessId = 'business_id',
  Code = 'code',
  CreatedAt = 'created_at',
  FromId = 'from_id',
  Id = 'id',
  Note = 'note',
  OrderDate = 'order_date',
  ReceivedDate = 'received_date',
  ReceivedQty = 'received_qty',
  Seq = 'seq',
  Status = 'status',
  ToId = 'to_id',
  TotalQty = 'total_qty',
  UpdatedAt = 'updated_at',
  UserId = 'user_id'
}

export type TransferOrderScalarWhereInput = {
  AND?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  NOT?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  OR?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  from_id?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumTransferOrderStatusFilter>;
  to_id?: InputMaybe<StringFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type TransferOrderScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<TransferOrderScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<TransferOrderScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<TransferOrderScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  from_id?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  order_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  received_date?: InputMaybe<DateTimeWithAggregatesFilter>;
  received_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  seq?: InputMaybe<IntWithAggregatesFilter>;
  status?: InputMaybe<EnumTransferOrderStatusWithAggregatesFilter>;
  to_id?: InputMaybe<StringWithAggregatesFilter>;
  total_qty?: InputMaybe<DecimalWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  user_id?: InputMaybe<StringWithAggregatesFilter>;
};

export enum TransferOrderStatus {
  Draft = 'DRAFT',
  Pending = 'PENDING',
  Transfered = 'TRANSFERED'
}

export type TransferOrderSumAggregate = {
  __typename?: 'TransferOrderSumAggregate';
  received_qty?: Maybe<Scalars['Decimal']['output']>;
  seq?: Maybe<Scalars['Int']['output']>;
  total_qty?: Maybe<Scalars['Decimal']['output']>;
};

export type TransferOrderSumOrderByAggregateInput = {
  received_qty?: InputMaybe<SortOrder>;
  seq?: InputMaybe<SortOrder>;
  total_qty?: InputMaybe<SortOrder>;
};

export type TransferOrderUpdateInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  from_store?: InputMaybe<StoreUpdateOneRequiredWithoutFrom_Transfer_OrdersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutT_OrderNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  to_store?: InputMaybe<StoreUpdateOneRequiredWithoutTo_Transfer_OrdersNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutTransfer_OrdersNestedInput>;
};

export type TransferOrderUpdateManyMutationInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type TransferOrderUpdateManyWithWhereWithoutFrom_StoreInput = {
  data: TransferOrderUpdateManyMutationInput;
  where: TransferOrderScalarWhereInput;
};

export type TransferOrderUpdateManyWithWhereWithoutTo_StoreInput = {
  data: TransferOrderUpdateManyMutationInput;
  where: TransferOrderScalarWhereInput;
};

export type TransferOrderUpdateManyWithWhereWithoutUserInput = {
  data: TransferOrderUpdateManyMutationInput;
  where: TransferOrderScalarWhereInput;
};

export type TransferOrderUpdateManyWithoutFrom_StoreNestedInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutFrom_StoreInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutFrom_StoreInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyFrom_StoreInputEnvelope>;
  delete?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<TransferOrderUpdateWithWhereUniqueWithoutFrom_StoreInput>>;
  updateMany?: InputMaybe<Array<TransferOrderUpdateManyWithWhereWithoutFrom_StoreInput>>;
  upsert?: InputMaybe<Array<TransferOrderUpsertWithWhereUniqueWithoutFrom_StoreInput>>;
};

export type TransferOrderUpdateManyWithoutTo_StoreNestedInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutTo_StoreInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutTo_StoreInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyTo_StoreInputEnvelope>;
  delete?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<TransferOrderUpdateWithWhereUniqueWithoutTo_StoreInput>>;
  updateMany?: InputMaybe<Array<TransferOrderUpdateManyWithWhereWithoutTo_StoreInput>>;
  upsert?: InputMaybe<Array<TransferOrderUpsertWithWhereUniqueWithoutTo_StoreInput>>;
};

export type TransferOrderUpdateManyWithoutUserNestedInput = {
  connect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<TransferOrderCreateOrConnectWithoutUserInput>>;
  create?: InputMaybe<Array<TransferOrderCreateWithoutUserInput>>;
  createMany?: InputMaybe<TransferOrderCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<TransferOrderScalarWhereInput>>;
  disconnect?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  set?: InputMaybe<Array<TransferOrderWhereUniqueInput>>;
  update?: InputMaybe<Array<TransferOrderUpdateWithWhereUniqueWithoutUserInput>>;
  updateMany?: InputMaybe<Array<TransferOrderUpdateManyWithWhereWithoutUserInput>>;
  upsert?: InputMaybe<Array<TransferOrderUpsertWithWhereUniqueWithoutUserInput>>;
};

export type TransferOrderUpdateOneWithoutItemsNestedInput = {
  connect?: InputMaybe<TransferOrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TransferOrderCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<TransferOrderCreateWithoutItemsInput>;
  delete?: InputMaybe<TransferOrderWhereInput>;
  disconnect?: InputMaybe<TransferOrderWhereInput>;
  update?: InputMaybe<TransferOrderUpdateToOneWithWhereWithoutItemsInput>;
  upsert?: InputMaybe<TransferOrderUpsertWithoutItemsInput>;
};

export type TransferOrderUpdateToOneWithWhereWithoutItemsInput = {
  data: TransferOrderUpdateWithoutItemsInput;
  where?: InputMaybe<TransferOrderWhereInput>;
};

export type TransferOrderUpdateWithWhereUniqueWithoutFrom_StoreInput = {
  data: TransferOrderUpdateWithoutFrom_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpdateWithWhereUniqueWithoutTo_StoreInput = {
  data: TransferOrderUpdateWithoutTo_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpdateWithWhereUniqueWithoutUserInput = {
  data: TransferOrderUpdateWithoutUserInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpdateWithoutFrom_StoreInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutT_OrderNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  to_store?: InputMaybe<StoreUpdateOneRequiredWithoutTo_Transfer_OrdersNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutTransfer_OrdersNestedInput>;
};

export type TransferOrderUpdateWithoutItemsInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  from_store?: InputMaybe<StoreUpdateOneRequiredWithoutFrom_Transfer_OrdersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  to_store?: InputMaybe<StoreUpdateOneRequiredWithoutTo_Transfer_OrdersNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutTransfer_OrdersNestedInput>;
};

export type TransferOrderUpdateWithoutTo_StoreInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  from_store?: InputMaybe<StoreUpdateOneRequiredWithoutFrom_Transfer_OrdersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutT_OrderNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutTransfer_OrdersNestedInput>;
};

export type TransferOrderUpdateWithoutUserInput = {
  business_id?: InputMaybe<StringFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  from_store?: InputMaybe<StoreUpdateOneRequiredWithoutFrom_Transfer_OrdersNestedInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<StockTransactionItemUpdateManyWithoutT_OrderNestedInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  order_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_date?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  received_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  seq?: InputMaybe<IntFieldUpdateOperationsInput>;
  status?: InputMaybe<EnumTransferOrderStatusFieldUpdateOperationsInput>;
  to_store?: InputMaybe<StoreUpdateOneRequiredWithoutTo_Transfer_OrdersNestedInput>;
  total_qty?: InputMaybe<DecimalFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type TransferOrderUpsertWithWhereUniqueWithoutFrom_StoreInput = {
  create: TransferOrderCreateWithoutFrom_StoreInput;
  update: TransferOrderUpdateWithoutFrom_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpsertWithWhereUniqueWithoutTo_StoreInput = {
  create: TransferOrderCreateWithoutTo_StoreInput;
  update: TransferOrderUpdateWithoutTo_StoreInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpsertWithWhereUniqueWithoutUserInput = {
  create: TransferOrderCreateWithoutUserInput;
  update: TransferOrderUpdateWithoutUserInput;
  where: TransferOrderWhereUniqueInput;
};

export type TransferOrderUpsertWithoutItemsInput = {
  create: TransferOrderCreateWithoutItemsInput;
  update: TransferOrderUpdateWithoutItemsInput;
  where?: InputMaybe<TransferOrderWhereInput>;
};

export type TransferOrderWhereInput = {
  AND?: InputMaybe<Array<TransferOrderWhereInput>>;
  NOT?: InputMaybe<Array<TransferOrderWhereInput>>;
  OR?: InputMaybe<Array<TransferOrderWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  from_id?: InputMaybe<StringFilter>;
  from_store?: InputMaybe<StoreRelationFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumTransferOrderStatusFilter>;
  to_id?: InputMaybe<StringFilter>;
  to_store?: InputMaybe<StoreRelationFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type TransferOrderWhereUniqueInput = {
  AND?: InputMaybe<Array<TransferOrderWhereInput>>;
  NOT?: InputMaybe<Array<TransferOrderWhereInput>>;
  OR?: InputMaybe<Array<TransferOrderWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  code?: InputMaybe<StringNullableFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  from_id?: InputMaybe<StringFilter>;
  from_store?: InputMaybe<StoreRelationFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  items?: InputMaybe<StockTransactionItemListRelationFilter>;
  note?: InputMaybe<StringNullableFilter>;
  order_date?: InputMaybe<DateTimeFilter>;
  received_date?: InputMaybe<DateTimeFilter>;
  received_qty?: InputMaybe<DecimalFilter>;
  seq?: InputMaybe<IntFilter>;
  status?: InputMaybe<EnumTransferOrderStatusFilter>;
  to_id?: InputMaybe<StringFilter>;
  to_store?: InputMaybe<StoreRelationFilter>;
  total_qty?: InputMaybe<DecimalFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  user?: InputMaybe<UserRelationFilter>;
  user_id?: InputMaybe<StringFilter>;
};

export type UploadResult = {
  __typename?: 'UploadResult';
  id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  thumbnail_url?: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
};

export type User = {
  __typename?: 'User';
  _count?: Maybe<UserCount>;
  business: Business;
  business_id: Scalars['String']['output'];
  composite_adjustments: Array<CompositeAdjustment>;
  created_at: Scalars['DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image?: Maybe<Image>;
  image_id?: Maybe<Scalars['String']['output']>;
  is_owner: Scalars['Boolean']['output'];
  logs: Array<SystemLog>;
  name: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  pin: Scalars['String']['output'];
  purchase_orders: Array<PurchaseOrder>;
  role: Role;
  role_id: Scalars['String']['output'];
  stock_adjustments: Array<StockAdjustment>;
  stores: Array<Store>;
  transfer_orders: Array<TransferOrder>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  verified: Scalars['Boolean']['output'];
};


export type UserComposite_AdjustmentsArgs = {
  cursor?: InputMaybe<CompositeAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<CompositeAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<CompositeAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type UserImageArgs = {
  where?: InputMaybe<ImageWhereInput>;
};


export type UserLogsArgs = {
  cursor?: InputMaybe<SystemLogWhereUniqueInput>;
  distinct?: InputMaybe<Array<SystemLogScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<SystemLogOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<SystemLogWhereInput>;
};


export type UserPurchase_OrdersArgs = {
  cursor?: InputMaybe<PurchaseOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<PurchaseOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<PurchaseOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type UserStock_AdjustmentsArgs = {
  cursor?: InputMaybe<StockAdjustmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<StockAdjustmentScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StockAdjustmentOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type UserStoresArgs = {
  cursor?: InputMaybe<StoreWhereUniqueInput>;
  distinct?: InputMaybe<Array<StoreScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<StoreOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<StoreWhereInput>;
};


export type UserTransfer_OrdersArgs = {
  cursor?: InputMaybe<TransferOrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<TransferOrderScalarFieldEnum>>;
  orderBy?: InputMaybe<Array<TransferOrderOrderByWithRelationInput>>;
  skip?: InputMaybe<Scalars['Int']['input']>;
  take?: InputMaybe<Scalars['Int']['input']>;
  where?: InputMaybe<TransferOrderWhereInput>;
};

export type UserCount = {
  __typename?: 'UserCount';
  composite_adjustments: Scalars['Int']['output'];
  logs: Scalars['Int']['output'];
  purchase_orders: Scalars['Int']['output'];
  stock_adjustments: Scalars['Int']['output'];
  stores: Scalars['Int']['output'];
  transfer_orders: Scalars['Int']['output'];
};


export type UserCountComposite_AdjustmentsArgs = {
  where?: InputMaybe<CompositeAdjustmentWhereInput>;
};


export type UserCountLogsArgs = {
  where?: InputMaybe<SystemLogWhereInput>;
};


export type UserCountPurchase_OrdersArgs = {
  where?: InputMaybe<PurchaseOrderWhereInput>;
};


export type UserCountStock_AdjustmentsArgs = {
  where?: InputMaybe<StockAdjustmentWhereInput>;
};


export type UserCountStoresArgs = {
  where?: InputMaybe<StoreWhereInput>;
};


export type UserCountTransfer_OrdersArgs = {
  where?: InputMaybe<TransferOrderWhereInput>;
};

export type UserCountAggregate = {
  __typename?: 'UserCountAggregate';
  _all: Scalars['Int']['output'];
  business_id: Scalars['Int']['output'];
  created_at: Scalars['Int']['output'];
  email: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  image_id: Scalars['Int']['output'];
  is_owner: Scalars['Int']['output'];
  name: Scalars['Int']['output'];
  phone: Scalars['Int']['output'];
  pin: Scalars['Int']['output'];
  role_id: Scalars['Int']['output'];
  updated_at: Scalars['Int']['output'];
  verified: Scalars['Int']['output'];
};

export type UserCountOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  is_owner?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pin?: InputMaybe<SortOrder>;
  role_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  verified?: InputMaybe<SortOrder>;
};

export type UserCreateInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyBusinessInput = {
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  role_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyBusinessInputEnvelope = {
  data: Array<UserCreateManyBusinessInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyImageInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  role_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyImageInputEnvelope = {
  data: Array<UserCreateManyImageInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  role_id: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyRoleInput = {
  business_id: Scalars['String']['input'];
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image_id?: InputMaybe<Scalars['String']['input']>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateManyRoleInputEnvelope = {
  data: Array<UserCreateManyRoleInput>;
  skipDuplicates?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateNestedManyWithoutBusinessInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<UserCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<UserCreateManyBusinessInputEnvelope>;
};

export type UserCreateNestedManyWithoutImageInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<UserCreateWithoutImageInput>>;
  createMany?: InputMaybe<UserCreateManyImageInputEnvelope>;
};

export type UserCreateNestedManyWithoutRoleInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutRoleInput>>;
  create?: InputMaybe<Array<UserCreateWithoutRoleInput>>;
  createMany?: InputMaybe<UserCreateManyRoleInputEnvelope>;
};

export type UserCreateNestedManyWithoutStoresInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutStoresInput>>;
  create?: InputMaybe<Array<UserCreateWithoutStoresInput>>;
};

export type UserCreateNestedOneWithoutComposite_AdjustmentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutComposite_AdjustmentsInput>;
  create?: InputMaybe<UserCreateWithoutComposite_AdjustmentsInput>;
};

export type UserCreateNestedOneWithoutLogsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLogsInput>;
  create?: InputMaybe<UserCreateWithoutLogsInput>;
};

export type UserCreateNestedOneWithoutPurchase_OrdersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<UserCreateWithoutPurchase_OrdersInput>;
};

export type UserCreateNestedOneWithoutStock_AdjustmentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutStock_AdjustmentsInput>;
  create?: InputMaybe<UserCreateWithoutStock_AdjustmentsInput>;
};

export type UserCreateNestedOneWithoutTransfer_OrdersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutTransfer_OrdersInput>;
  create?: InputMaybe<UserCreateWithoutTransfer_OrdersInput>;
};

export type UserCreateOrConnectWithoutBusinessInput = {
  create: UserCreateWithoutBusinessInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutComposite_AdjustmentsInput = {
  create: UserCreateWithoutComposite_AdjustmentsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutImageInput = {
  create: UserCreateWithoutImageInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutLogsInput = {
  create: UserCreateWithoutLogsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutPurchase_OrdersInput = {
  create: UserCreateWithoutPurchase_OrdersInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutRoleInput = {
  create: UserCreateWithoutRoleInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutStock_AdjustmentsInput = {
  create: UserCreateWithoutStock_AdjustmentsInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutStoresInput = {
  create: UserCreateWithoutStoresInput;
  where: UserWhereUniqueInput;
};

export type UserCreateOrConnectWithoutTransfer_OrdersInput = {
  create: UserCreateWithoutTransfer_OrdersInput;
  where: UserWhereUniqueInput;
};

export type UserCreateWithoutBusinessInput = {
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutComposite_AdjustmentsInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutImageInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutLogsInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutPurchase_OrdersInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutRoleInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutStock_AdjustmentsInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutStoresInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  transfer_orders?: InputMaybe<TransferOrderCreateNestedManyWithoutUserInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserCreateWithoutTransfer_OrdersInput = {
  business: BusinessCreateNestedOneWithoutUsersInput;
  composite_adjustments?: InputMaybe<CompositeAdjustmentCreateNestedManyWithoutUserInput>;
  created_at?: InputMaybe<Scalars['DateTime']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageCreateNestedOneWithoutUsersInput>;
  is_owner?: InputMaybe<Scalars['Boolean']['input']>;
  logs?: InputMaybe<SystemLogCreateNestedManyWithoutUserInput>;
  name: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  pin: Scalars['String']['input'];
  purchase_orders?: InputMaybe<PurchaseOrderCreateNestedManyWithoutUserInput>;
  role: RoleCreateNestedOneWithoutUsersInput;
  stock_adjustments?: InputMaybe<StockAdjustmentCreateNestedManyWithoutUserInput>;
  stores?: InputMaybe<StoreCreateNestedManyWithoutUsersInput>;
  updated_at?: InputMaybe<Scalars['DateTime']['input']>;
  verified?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserGroupBy = {
  __typename?: 'UserGroupBy';
  _count?: Maybe<UserCountAggregate>;
  _max?: Maybe<UserMaxAggregate>;
  _min?: Maybe<UserMinAggregate>;
  business_id: Scalars['String']['output'];
  created_at: Scalars['DateTime']['output'];
  email?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  image_id?: Maybe<Scalars['String']['output']>;
  is_owner: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  pin: Scalars['String']['output'];
  role_id: Scalars['String']['output'];
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  verified: Scalars['Boolean']['output'];
};

export type UserListRelationFilter = {
  every?: InputMaybe<UserWhereInput>;
  none?: InputMaybe<UserWhereInput>;
  some?: InputMaybe<UserWhereInput>;
};

export type UserMaxAggregate = {
  __typename?: 'UserMaxAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  is_owner?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  pin?: Maybe<Scalars['String']['output']>;
  role_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  verified?: Maybe<Scalars['Boolean']['output']>;
};

export type UserMaxOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  is_owner?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pin?: InputMaybe<SortOrder>;
  role_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  verified?: InputMaybe<SortOrder>;
};

export type UserMinAggregate = {
  __typename?: 'UserMinAggregate';
  business_id?: Maybe<Scalars['String']['output']>;
  created_at?: Maybe<Scalars['DateTime']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  image_id?: Maybe<Scalars['String']['output']>;
  is_owner?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  pin?: Maybe<Scalars['String']['output']>;
  role_id?: Maybe<Scalars['String']['output']>;
  updated_at?: Maybe<Scalars['DateTime']['output']>;
  verified?: Maybe<Scalars['Boolean']['output']>;
};

export type UserMinOrderByAggregateInput = {
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrder>;
  is_owner?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrder>;
  pin?: InputMaybe<SortOrder>;
  role_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrder>;
  verified?: InputMaybe<SortOrder>;
};

export type UserNullableRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export type UserOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type UserOrderByWithAggregationInput = {
  _count?: InputMaybe<UserCountOrderByAggregateInput>;
  _max?: InputMaybe<UserMaxOrderByAggregateInput>;
  _min?: InputMaybe<UserMinOrderByAggregateInput>;
  business_id?: InputMaybe<SortOrder>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image_id?: InputMaybe<SortOrderInput>;
  is_owner?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrderInput>;
  pin?: InputMaybe<SortOrder>;
  role_id?: InputMaybe<SortOrder>;
  updated_at?: InputMaybe<SortOrderInput>;
  verified?: InputMaybe<SortOrder>;
};

export type UserOrderByWithRelationInput = {
  business?: InputMaybe<BusinessOrderByWithRelationInput>;
  business_id?: InputMaybe<SortOrder>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentOrderByRelationAggregateInput>;
  created_at?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrderInput>;
  id?: InputMaybe<SortOrder>;
  image?: InputMaybe<ImageOrderByWithRelationInput>;
  image_id?: InputMaybe<SortOrderInput>;
  is_owner?: InputMaybe<SortOrder>;
  logs?: InputMaybe<SystemLogOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  phone?: InputMaybe<SortOrderInput>;
  pin?: InputMaybe<SortOrder>;
  purchase_orders?: InputMaybe<PurchaseOrderOrderByRelationAggregateInput>;
  role?: InputMaybe<RoleOrderByWithRelationInput>;
  role_id?: InputMaybe<SortOrder>;
  stock_adjustments?: InputMaybe<StockAdjustmentOrderByRelationAggregateInput>;
  stores?: InputMaybe<StoreOrderByRelationAggregateInput>;
  transfer_orders?: InputMaybe<TransferOrderOrderByRelationAggregateInput>;
  updated_at?: InputMaybe<SortOrderInput>;
  verified?: InputMaybe<SortOrder>;
};

export type UserPinBusiness_IdCompoundUniqueInput = {
  business_id: Scalars['String']['input'];
  pin: Scalars['String']['input'];
};

export type UserRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export enum UserScalarFieldEnum {
  BusinessId = 'business_id',
  CreatedAt = 'created_at',
  Email = 'email',
  Id = 'id',
  ImageId = 'image_id',
  IsOwner = 'is_owner',
  Name = 'name',
  Phone = 'phone',
  Pin = 'pin',
  RoleId = 'role_id',
  UpdatedAt = 'updated_at',
  Verified = 'verified'
}

export type UserScalarWhereInput = {
  AND?: InputMaybe<Array<UserScalarWhereInput>>;
  NOT?: InputMaybe<Array<UserScalarWhereInput>>;
  OR?: InputMaybe<Array<UserScalarWhereInput>>;
  business_id?: InputMaybe<StringFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  is_owner?: InputMaybe<BoolFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pin?: InputMaybe<StringFilter>;
  role_id?: InputMaybe<StringFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  verified?: InputMaybe<BoolFilter>;
};

export type UserScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<UserScalarWhereWithAggregatesInput>>;
  NOT?: InputMaybe<Array<UserScalarWhereWithAggregatesInput>>;
  OR?: InputMaybe<Array<UserScalarWhereWithAggregatesInput>>;
  business_id?: InputMaybe<StringWithAggregatesFilter>;
  created_at?: InputMaybe<DateTimeWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  image_id?: InputMaybe<StringNullableWithAggregatesFilter>;
  is_owner?: InputMaybe<BoolWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  phone?: InputMaybe<StringNullableWithAggregatesFilter>;
  pin?: InputMaybe<StringWithAggregatesFilter>;
  role_id?: InputMaybe<StringWithAggregatesFilter>;
  updated_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  verified?: InputMaybe<BoolWithAggregatesFilter>;
};

export type UserUpdateInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateManyMutationInput = {
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateManyWithWhereWithoutBusinessInput = {
  data: UserUpdateManyMutationInput;
  where: UserScalarWhereInput;
};

export type UserUpdateManyWithWhereWithoutImageInput = {
  data: UserUpdateManyMutationInput;
  where: UserScalarWhereInput;
};

export type UserUpdateManyWithWhereWithoutRoleInput = {
  data: UserUpdateManyMutationInput;
  where: UserScalarWhereInput;
};

export type UserUpdateManyWithWhereWithoutStoresInput = {
  data: UserUpdateManyMutationInput;
  where: UserScalarWhereInput;
};

export type UserUpdateManyWithoutBusinessNestedInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutBusinessInput>>;
  create?: InputMaybe<Array<UserCreateWithoutBusinessInput>>;
  createMany?: InputMaybe<UserCreateManyBusinessInputEnvelope>;
  delete?: InputMaybe<Array<UserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserWhereUniqueInput>>;
  set?: InputMaybe<Array<UserWhereUniqueInput>>;
  update?: InputMaybe<Array<UserUpdateWithWhereUniqueWithoutBusinessInput>>;
  updateMany?: InputMaybe<Array<UserUpdateManyWithWhereWithoutBusinessInput>>;
  upsert?: InputMaybe<Array<UserUpsertWithWhereUniqueWithoutBusinessInput>>;
};

export type UserUpdateManyWithoutImageNestedInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutImageInput>>;
  create?: InputMaybe<Array<UserCreateWithoutImageInput>>;
  createMany?: InputMaybe<UserCreateManyImageInputEnvelope>;
  delete?: InputMaybe<Array<UserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserWhereUniqueInput>>;
  set?: InputMaybe<Array<UserWhereUniqueInput>>;
  update?: InputMaybe<Array<UserUpdateWithWhereUniqueWithoutImageInput>>;
  updateMany?: InputMaybe<Array<UserUpdateManyWithWhereWithoutImageInput>>;
  upsert?: InputMaybe<Array<UserUpsertWithWhereUniqueWithoutImageInput>>;
};

export type UserUpdateManyWithoutRoleNestedInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutRoleInput>>;
  create?: InputMaybe<Array<UserCreateWithoutRoleInput>>;
  createMany?: InputMaybe<UserCreateManyRoleInputEnvelope>;
  delete?: InputMaybe<Array<UserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserWhereUniqueInput>>;
  set?: InputMaybe<Array<UserWhereUniqueInput>>;
  update?: InputMaybe<Array<UserUpdateWithWhereUniqueWithoutRoleInput>>;
  updateMany?: InputMaybe<Array<UserUpdateManyWithWhereWithoutRoleInput>>;
  upsert?: InputMaybe<Array<UserUpsertWithWhereUniqueWithoutRoleInput>>;
};

export type UserUpdateManyWithoutStoresNestedInput = {
  connect?: InputMaybe<Array<UserWhereUniqueInput>>;
  connectOrCreate?: InputMaybe<Array<UserCreateOrConnectWithoutStoresInput>>;
  create?: InputMaybe<Array<UserCreateWithoutStoresInput>>;
  delete?: InputMaybe<Array<UserWhereUniqueInput>>;
  deleteMany?: InputMaybe<Array<UserScalarWhereInput>>;
  disconnect?: InputMaybe<Array<UserWhereUniqueInput>>;
  set?: InputMaybe<Array<UserWhereUniqueInput>>;
  update?: InputMaybe<Array<UserUpdateWithWhereUniqueWithoutStoresInput>>;
  updateMany?: InputMaybe<Array<UserUpdateManyWithWhereWithoutStoresInput>>;
  upsert?: InputMaybe<Array<UserUpsertWithWhereUniqueWithoutStoresInput>>;
};

export type UserUpdateOneRequiredWithoutComposite_AdjustmentsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutComposite_AdjustmentsInput>;
  create?: InputMaybe<UserCreateWithoutComposite_AdjustmentsInput>;
  update?: InputMaybe<UserUpdateToOneWithWhereWithoutComposite_AdjustmentsInput>;
  upsert?: InputMaybe<UserUpsertWithoutComposite_AdjustmentsInput>;
};

export type UserUpdateOneRequiredWithoutPurchase_OrdersNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutPurchase_OrdersInput>;
  create?: InputMaybe<UserCreateWithoutPurchase_OrdersInput>;
  update?: InputMaybe<UserUpdateToOneWithWhereWithoutPurchase_OrdersInput>;
  upsert?: InputMaybe<UserUpsertWithoutPurchase_OrdersInput>;
};

export type UserUpdateOneRequiredWithoutStock_AdjustmentsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutStock_AdjustmentsInput>;
  create?: InputMaybe<UserCreateWithoutStock_AdjustmentsInput>;
  update?: InputMaybe<UserUpdateToOneWithWhereWithoutStock_AdjustmentsInput>;
  upsert?: InputMaybe<UserUpsertWithoutStock_AdjustmentsInput>;
};

export type UserUpdateOneRequiredWithoutTransfer_OrdersNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutTransfer_OrdersInput>;
  create?: InputMaybe<UserCreateWithoutTransfer_OrdersInput>;
  update?: InputMaybe<UserUpdateToOneWithWhereWithoutTransfer_OrdersInput>;
  upsert?: InputMaybe<UserUpsertWithoutTransfer_OrdersInput>;
};

export type UserUpdateOneWithoutLogsNestedInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLogsInput>;
  create?: InputMaybe<UserCreateWithoutLogsInput>;
  delete?: InputMaybe<UserWhereInput>;
  disconnect?: InputMaybe<UserWhereInput>;
  update?: InputMaybe<UserUpdateToOneWithWhereWithoutLogsInput>;
  upsert?: InputMaybe<UserUpsertWithoutLogsInput>;
};

export type UserUpdateToOneWithWhereWithoutComposite_AdjustmentsInput = {
  data: UserUpdateWithoutComposite_AdjustmentsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpdateToOneWithWhereWithoutLogsInput = {
  data: UserUpdateWithoutLogsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpdateToOneWithWhereWithoutPurchase_OrdersInput = {
  data: UserUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpdateToOneWithWhereWithoutStock_AdjustmentsInput = {
  data: UserUpdateWithoutStock_AdjustmentsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpdateToOneWithWhereWithoutTransfer_OrdersInput = {
  data: UserUpdateWithoutTransfer_OrdersInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpdateWithWhereUniqueWithoutBusinessInput = {
  data: UserUpdateWithoutBusinessInput;
  where: UserWhereUniqueInput;
};

export type UserUpdateWithWhereUniqueWithoutImageInput = {
  data: UserUpdateWithoutImageInput;
  where: UserWhereUniqueInput;
};

export type UserUpdateWithWhereUniqueWithoutRoleInput = {
  data: UserUpdateWithoutRoleInput;
  where: UserWhereUniqueInput;
};

export type UserUpdateWithWhereUniqueWithoutStoresInput = {
  data: UserUpdateWithoutStoresInput;
  where: UserWhereUniqueInput;
};

export type UserUpdateWithoutBusinessInput = {
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutComposite_AdjustmentsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutImageInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutLogsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutPurchase_OrdersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutRoleInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutStock_AdjustmentsInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutStoresInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  transfer_orders?: InputMaybe<TransferOrderUpdateManyWithoutUserNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutTransfer_OrdersInput = {
  business?: InputMaybe<BusinessUpdateOneRequiredWithoutUsersNestedInput>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentUpdateManyWithoutUserNestedInput>;
  created_at?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  image?: InputMaybe<ImageUpdateOneWithoutUsersNestedInput>;
  is_owner?: InputMaybe<BoolFieldUpdateOperationsInput>;
  logs?: InputMaybe<SystemLogUpdateManyWithoutUserNestedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  phone?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pin?: InputMaybe<StringFieldUpdateOperationsInput>;
  purchase_orders?: InputMaybe<PurchaseOrderUpdateManyWithoutUserNestedInput>;
  role?: InputMaybe<RoleUpdateOneRequiredWithoutUsersNestedInput>;
  stock_adjustments?: InputMaybe<StockAdjustmentUpdateManyWithoutUserNestedInput>;
  stores?: InputMaybe<StoreUpdateManyWithoutUsersNestedInput>;
  updated_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  verified?: InputMaybe<BoolFieldUpdateOperationsInput>;
};

export type UserUpsertWithWhereUniqueWithoutBusinessInput = {
  create: UserCreateWithoutBusinessInput;
  update: UserUpdateWithoutBusinessInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutImageInput = {
  create: UserCreateWithoutImageInput;
  update: UserUpdateWithoutImageInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutRoleInput = {
  create: UserCreateWithoutRoleInput;
  update: UserUpdateWithoutRoleInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithWhereUniqueWithoutStoresInput = {
  create: UserCreateWithoutStoresInput;
  update: UserUpdateWithoutStoresInput;
  where: UserWhereUniqueInput;
};

export type UserUpsertWithoutComposite_AdjustmentsInput = {
  create: UserCreateWithoutComposite_AdjustmentsInput;
  update: UserUpdateWithoutComposite_AdjustmentsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpsertWithoutLogsInput = {
  create: UserCreateWithoutLogsInput;
  update: UserUpdateWithoutLogsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpsertWithoutPurchase_OrdersInput = {
  create: UserCreateWithoutPurchase_OrdersInput;
  update: UserUpdateWithoutPurchase_OrdersInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpsertWithoutStock_AdjustmentsInput = {
  create: UserCreateWithoutStock_AdjustmentsInput;
  update: UserUpdateWithoutStock_AdjustmentsInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserUpsertWithoutTransfer_OrdersInput = {
  create: UserCreateWithoutTransfer_OrdersInput;
  update: UserUpdateWithoutTransfer_OrdersInput;
  where?: InputMaybe<UserWhereInput>;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<UserWhereInput>>;
  NOT?: InputMaybe<Array<UserWhereInput>>;
  OR?: InputMaybe<Array<UserWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  is_owner?: InputMaybe<BoolFilter>;
  logs?: InputMaybe<SystemLogListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pin?: InputMaybe<StringFilter>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  role?: InputMaybe<RoleRelationFilter>;
  role_id?: InputMaybe<StringFilter>;
  stock_adjustments?: InputMaybe<StockAdjustmentListRelationFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  verified?: InputMaybe<BoolFilter>;
};

export type UserWhereUniqueInput = {
  AND?: InputMaybe<Array<UserWhereInput>>;
  NOT?: InputMaybe<Array<UserWhereInput>>;
  OR?: InputMaybe<Array<UserWhereInput>>;
  business?: InputMaybe<BusinessRelationFilter>;
  business_id?: InputMaybe<StringFilter>;
  composite_adjustments?: InputMaybe<CompositeAdjustmentListRelationFilter>;
  created_at?: InputMaybe<DateTimeFilter>;
  email?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<ImageNullableRelationFilter>;
  image_id?: InputMaybe<StringNullableFilter>;
  is_owner?: InputMaybe<BoolFilter>;
  logs?: InputMaybe<SystemLogListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  phone?: InputMaybe<StringNullableFilter>;
  pin?: InputMaybe<StringFilter>;
  pin_business_id?: InputMaybe<UserPinBusiness_IdCompoundUniqueInput>;
  purchase_orders?: InputMaybe<PurchaseOrderListRelationFilter>;
  role?: InputMaybe<RoleRelationFilter>;
  role_id?: InputMaybe<StringFilter>;
  stock_adjustments?: InputMaybe<StockAdjustmentListRelationFilter>;
  stores?: InputMaybe<StoreListRelationFilter>;
  transfer_orders?: InputMaybe<TransferOrderListRelationFilter>;
  updated_at?: InputMaybe<DateTimeNullableFilter>;
  verified?: InputMaybe<BoolFilter>;
};

export type ProductsQueryVariables = Exact<{ [key: string]: never; }>;


export type ProductsQuery = { __typename?: 'Query', products: Array<{ __typename?: 'Product', id: string, name: string, type: ProductType, active: boolean, sku?: string | null }> };

export type LocationsQueryVariables = Exact<{
  where?: InputMaybe<LocationWhereInput>;
  orderBy?: InputMaybe<Array<LocationOrderByWithRelationInput> | LocationOrderByWithRelationInput>;
  take?: InputMaybe<Scalars['Int']['input']>;
  skip?: InputMaybe<Scalars['Int']['input']>;
}>;


export type LocationsQuery = { __typename?: 'Query', locations: Array<{ __typename?: 'Location', id: string, name: string, address_id?: string | null, business_id: string, address?: { __typename?: 'Address', id: string, type: string } | null }> };


export const ProductsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Products"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"products"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"type"}},{"kind":"Field","name":{"kind":"Name","value":"active"}},{"kind":"Field","name":{"kind":"Name","value":"sku"}}]}}]}}]} as unknown as DocumentNode<ProductsQuery, ProductsQueryVariables>;
export const LocationsDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Locations"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"LocationWhereInput"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}},"type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"LocationOrderByWithRelationInput"}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"take"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"skip"}},"type":{"kind":"NamedType","name":{"kind":"Name","value":"Int"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"locations"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}},{"kind":"Argument","name":{"kind":"Name","value":"orderBy"},"value":{"kind":"Variable","name":{"kind":"Name","value":"orderBy"}}},{"kind":"Argument","name":{"kind":"Name","value":"take"},"value":{"kind":"Variable","name":{"kind":"Name","value":"take"}}},{"kind":"Argument","name":{"kind":"Name","value":"skip"},"value":{"kind":"Variable","name":{"kind":"Name","value":"skip"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"address_id"}},{"kind":"Field","name":{"kind":"Name","value":"business_id"}},{"kind":"Field","name":{"kind":"Name","value":"address"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]}}]} as unknown as DocumentNode<LocationsQuery, LocationsQueryVariables>;